{
  "version": 3,
  "sources": ["../../home/alexa/github/XanderJL/notion-schedule/node_modules/@notionhq/client/src/helpers.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/@notionhq/client/src/logging.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/@notionhq/client/src/errors.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/@notionhq/client/src/api-endpoints.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/webidl-conversions/lib/index.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/whatwg-url/lib/utils.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/tr46/index.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/whatwg-url/lib/url-state-machine.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/whatwg-url/lib/URL-impl.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/whatwg-url/lib/URL.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/whatwg-url/lib/public-api.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/@notionhq/client/node_modules/node-fetch/lib/index.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/@notionhq/client/src/Client.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/@notionhq/client/src/index.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/stub/symbol.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/utils.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/helpers/miscellaneous.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/helpers/webidl.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/simple-queue.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/readable-stream/generic-reader.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/abstract-ops/internal-methods.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/stub/number-isfinite.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/stub/math-trunc.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/basic.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/readable-stream.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/readable-stream/default-reader.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/target/es2018/stub/async-iterator-prototype.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/readable-stream/async-iterator.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/stub/number-isnan.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/abstract-ops/ecmascript.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/abstract-ops/miscellaneous.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/abstract-ops/queue-with-sizes.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/readable-stream/byte-stream-controller.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/readable-stream/byob-reader.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/abstract-ops/queuing-strategy.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/underlying-sink.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/writable-stream.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/abort-signal.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/writable-stream.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/stub/native.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/stub/dom-exception.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/readable-stream/pipe.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/readable-stream/default-controller.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/readable-stream/tee.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/underlying-source.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/reader-options.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/iterator-options.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/pipe-options.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/readable-writable-pair.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/readable-stream.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy-init.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/byte-length-queuing-strategy.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/count-queuing-strategy.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/validators/transformer.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/web-streams-polyfill/src/lib/transform-stream.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/fetch-blob/streams.cjs", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/fetch-blob/index.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/fetch-blob/file.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/formdata-polyfill/esm.min.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-domexception/index.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/fetch-blob/from.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/utils/multipart-parser.js", "../../home/alexa/github/XanderJL/notion-schedule/functions/ryan-warner-llc-invoice.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/index.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/data-uri-to-buffer/src/index.ts", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/body.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/errors/base.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/errors/fetch-error.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/utils/is.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/headers.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/utils/is-redirect.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/response.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/request.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/utils/get-search.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/utils/referrer.js", "../../home/alexa/github/XanderJL/notion-schedule/node_modules/node-fetch/src/errors/abort-error.js"],
  "sourceRoot": "/tmp/tmp-1776-kRiSvB56totE",
  "sourcesContent": ["/**\n * Utility for enforcing exhaustiveness checks in the type system.\n *\n * @see https://basarat.gitbook.io/typescript/type-system/discriminated-unions#throw-in-exhaustive-checks\n *\n * @param value The variable with no remaining values\n */\nexport function assertNever(value: never): never {\n  throw new Error(`Unexpected value should never occur: ${value}`)\n}\n\ntype AllKeys<T> = T extends unknown ? keyof T : never\n\nexport function pick<O extends unknown, K extends AllKeys<O>>(\n  base: O,\n  keys: readonly K[]\n): Pick<O, K> {\n  const entries = keys.map(key => [key, base?.[key]])\n  return Object.fromEntries(entries)\n}\n\nexport function isObject(o: unknown): o is Record<PropertyKey, unknown> {\n  return typeof o === \"object\" && o !== null\n}\n", "import { assertNever } from \"./helpers\"\n\nexport enum LogLevel {\n  DEBUG = \"debug\",\n  INFO = \"info\",\n  WARN = \"warn\",\n  ERROR = \"error\",\n}\n\nexport interface Logger {\n  (level: LogLevel, message: string, extraInfo: Record<string, unknown>): void\n}\n\nexport function makeConsoleLogger(name: string): Logger {\n  return (level, message, extraInfo) => {\n    console[level](`${name} ${level}:`, message, extraInfo)\n  }\n}\n\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nexport function logLevelSeverity(level: LogLevel): number {\n  switch (level) {\n    case LogLevel.DEBUG:\n      return 20\n    case LogLevel.INFO:\n      return 40\n    case LogLevel.WARN:\n      return 60\n    case LogLevel.ERROR:\n      return 80\n    default:\n      return assertNever(level)\n  }\n}\n", "import { SupportedResponse } from \"./fetch-types\"\nimport { isObject } from \"./helpers\"\nimport { Assert } from \"./type-utils\"\n\n/**\n * Error codes returned in responses from the API.\n */\nexport enum APIErrorCode {\n  Unauthorized = \"unauthorized\",\n  RestrictedResource = \"restricted_resource\",\n  ObjectNotFound = \"object_not_found\",\n  RateLimited = \"rate_limited\",\n  InvalidJSON = \"invalid_json\",\n  InvalidRequestURL = \"invalid_request_url\",\n  InvalidRequest = \"invalid_request\",\n  ValidationError = \"validation_error\",\n  ConflictError = \"conflict_error\",\n  InternalServerError = \"internal_server_error\",\n  ServiceUnavailable = \"service_unavailable\",\n}\n\n/**\n * Error codes generated for client errors.\n */\nexport enum ClientErrorCode {\n  RequestTimeout = \"notionhq_client_request_timeout\",\n  ResponseError = \"notionhq_client_response_error\",\n}\n\n/**\n * Error codes on errors thrown by the `Client`.\n */\nexport type NotionErrorCode = APIErrorCode | ClientErrorCode\n\n/**\n * Base error type.\n */\nabstract class NotionClientErrorBase<\n  Code extends NotionErrorCode\n> extends Error {\n  abstract code: Code\n}\n\n/**\n * Error type that encompasses all the kinds of errors that the Notion client will throw.\n */\nexport type NotionClientError =\n  | RequestTimeoutError\n  | UnknownHTTPResponseError\n  | APIResponseError\n\n// Assert that NotionClientError's `code` property is a narrow type.\n// This prevents us from accidentally regressing to `string`-typed name field.\ntype _assertCodeIsNarrow = Assert<NotionErrorCode, NotionClientError[\"code\"]>\n\n// Assert that the type of `name` in NotionErrorCode is a narrow type.\n// This prevents us from accidentally regressing to `string`-typed name field.\ntype _assertNameIsNarrow = Assert<\n  \"RequestTimeoutError\" | \"UnknownHTTPResponseError\" | \"APIResponseError\",\n  NotionClientError[\"name\"]\n>\n\n/**\n * @param error any value, usually a caught error.\n * @returns `true` if error is a `NotionClientError`.\n */\nexport function isNotionClientError(\n  error: unknown\n): error is NotionClientError {\n  return isObject(error) && error instanceof NotionClientErrorBase\n}\n\n/**\n * Narrows down the types of a NotionClientError.\n * @param error any value, usually a caught error.\n * @param codes an object mapping from possible error codes to `true`\n * @returns `true` if error is a `NotionClientError` with a code in `codes`.\n */\nfunction isNotionClientErrorWithCode<Code extends NotionErrorCode>(\n  error: unknown,\n  codes: { [C in Code]: true }\n): error is NotionClientError & { code: Code } {\n  return isNotionClientError(error) && error.code in codes\n}\n\n/**\n * Error thrown by the client if a request times out.\n */\nexport class RequestTimeoutError extends NotionClientErrorBase<ClientErrorCode.RequestTimeout> {\n  readonly code = ClientErrorCode.RequestTimeout\n  readonly name = \"RequestTimeoutError\"\n\n  constructor(message = \"Request to Notion API has timed out\") {\n    super(message)\n  }\n\n  static isRequestTimeoutError(error: unknown): error is RequestTimeoutError {\n    return isNotionClientErrorWithCode(error, {\n      [ClientErrorCode.RequestTimeout]: true,\n    })\n  }\n\n  static rejectAfterTimeout<T>(\n    promise: Promise<T>,\n    timeoutMS: number\n  ): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        reject(new RequestTimeoutError())\n      }, timeoutMS)\n\n      promise\n        .then(resolve)\n        .catch(reject)\n        .then(() => clearTimeout(timeoutId))\n    })\n  }\n}\n\ntype HTTPResponseErrorCode = ClientErrorCode.ResponseError | APIErrorCode\n\nclass HTTPResponseError<\n  Code extends HTTPResponseErrorCode\n> extends NotionClientErrorBase<Code> {\n  readonly name: string = \"HTTPResponseError\"\n  readonly code: Code\n  readonly status: number\n  readonly headers: SupportedResponse[\"headers\"]\n  readonly body: string\n\n  constructor(args: {\n    code: Code\n    status: number\n    message: string\n    headers: SupportedResponse[\"headers\"]\n    rawBodyText: string\n  }) {\n    super(args.message)\n    const { code, status, headers, rawBodyText } = args\n    this.code = code\n    this.status = status\n    this.headers = headers\n    this.body = rawBodyText\n  }\n}\n\nconst httpResponseErrorCodes: { [C in HTTPResponseErrorCode]: true } = {\n  [ClientErrorCode.ResponseError]: true,\n  [APIErrorCode.Unauthorized]: true,\n  [APIErrorCode.RestrictedResource]: true,\n  [APIErrorCode.ObjectNotFound]: true,\n  [APIErrorCode.RateLimited]: true,\n  [APIErrorCode.InvalidJSON]: true,\n  [APIErrorCode.InvalidRequestURL]: true,\n  [APIErrorCode.InvalidRequest]: true,\n  [APIErrorCode.ValidationError]: true,\n  [APIErrorCode.ConflictError]: true,\n  [APIErrorCode.InternalServerError]: true,\n  [APIErrorCode.ServiceUnavailable]: true,\n}\n\nexport function isHTTPResponseError(\n  error: unknown\n): error is UnknownHTTPResponseError | APIResponseError {\n  if (!isNotionClientErrorWithCode(error, httpResponseErrorCodes)) {\n    return false\n  }\n\n  type _assert = Assert<\n    UnknownHTTPResponseError | APIResponseError,\n    typeof error\n  >\n\n  return true\n}\n\n/**\n * Error thrown if an API call responds with an unknown error code, or does not respond with\n * a property-formatted error.\n */\nexport class UnknownHTTPResponseError extends HTTPResponseError<ClientErrorCode.ResponseError> {\n  readonly name = \"UnknownHTTPResponseError\"\n\n  constructor(args: {\n    status: number\n    message: string | undefined\n    headers: SupportedResponse[\"headers\"]\n    rawBodyText: string\n  }) {\n    super({\n      ...args,\n      code: ClientErrorCode.ResponseError,\n      message:\n        args.message ??\n        `Request to Notion API failed with status: ${args.status}`,\n    })\n  }\n\n  static isUnknownHTTPResponseError(\n    error: unknown\n  ): error is UnknownHTTPResponseError {\n    return isNotionClientErrorWithCode(error, {\n      [ClientErrorCode.ResponseError]: true,\n    })\n  }\n}\n\nconst apiErrorCodes: { [C in APIErrorCode]: true } = {\n  [APIErrorCode.Unauthorized]: true,\n  [APIErrorCode.RestrictedResource]: true,\n  [APIErrorCode.ObjectNotFound]: true,\n  [APIErrorCode.RateLimited]: true,\n  [APIErrorCode.InvalidJSON]: true,\n  [APIErrorCode.InvalidRequestURL]: true,\n  [APIErrorCode.InvalidRequest]: true,\n  [APIErrorCode.ValidationError]: true,\n  [APIErrorCode.ConflictError]: true,\n  [APIErrorCode.InternalServerError]: true,\n  [APIErrorCode.ServiceUnavailable]: true,\n}\n\n/**\n * A response from the API indicating a problem.\n * Use the `code` property to handle various kinds of errors. All its possible values are in `APIErrorCode`.\n */\nexport class APIResponseError extends HTTPResponseError<APIErrorCode> {\n  readonly name = \"APIResponseError\"\n\n  static isAPIResponseError(error: unknown): error is APIResponseError {\n    return isNotionClientErrorWithCode(error, apiErrorCodes)\n  }\n}\n\nexport function buildRequestError(\n  response: SupportedResponse,\n  bodyText: string\n): APIResponseError | UnknownHTTPResponseError {\n  const apiErrorResponseBody = parseAPIErrorResponseBody(bodyText)\n  if (apiErrorResponseBody !== undefined) {\n    return new APIResponseError({\n      code: apiErrorResponseBody.code,\n      message: apiErrorResponseBody.message,\n      headers: response.headers,\n      status: response.status,\n      rawBodyText: bodyText,\n    })\n  }\n  return new UnknownHTTPResponseError({\n    message: undefined,\n    headers: response.headers,\n    status: response.status,\n    rawBodyText: bodyText,\n  })\n}\n\nfunction parseAPIErrorResponseBody(\n  body: string\n): { code: APIErrorCode; message: string } | undefined {\n  if (typeof body !== \"string\") {\n    return\n  }\n\n  let parsed: unknown\n  try {\n    parsed = JSON.parse(body)\n  } catch (parseError) {\n    return\n  }\n\n  if (\n    !isObject(parsed) ||\n    typeof parsed[\"message\"] !== \"string\" ||\n    !isAPIErrorCode(parsed[\"code\"])\n  ) {\n    return\n  }\n\n  return {\n    ...parsed,\n    code: parsed[\"code\"],\n    message: parsed[\"message\"],\n  }\n}\n\nfunction isAPIErrorCode(code: unknown): code is APIErrorCode {\n  return typeof code === \"string\" && code in apiErrorCodes\n}\n", "// cspell:disable-file\n// Note: This is a generated file.\n\ntype IdRequest = string | string\n\ntype EmptyObject = Record<string, never>\n\ntype UserObjectResponse =\n  | {\n      type: \"person\"\n      person: { email?: string }\n      name: string | null\n      avatar_url: string | null\n      id: IdRequest\n      object: \"user\"\n    }\n  | {\n      type: \"bot\"\n      bot:\n        | EmptyObject\n        | {\n            owner:\n              | {\n                  type: \"user\"\n                  user:\n                    | {\n                        type: \"person\"\n                        person: { email: string }\n                        name: string | null\n                        avatar_url: string | null\n                        id: IdRequest\n                        object: \"user\"\n                      }\n                    | { id: IdRequest; object: \"user\" }\n                }\n              | { type: \"workspace\"; workspace: true }\n          }\n      name: string | null\n      avatar_url: string | null\n      id: IdRequest\n      object: \"user\"\n    }\n\ntype TextRequest = string\n\ntype PartialUserObjectResponse =\n  | { id: IdRequest; object: \"user\" }\n  | UserObjectResponse\n\ntype TimeZoneRequest =\n  | \"Africa/Abidjan\"\n  | \"Africa/Accra\"\n  | \"Africa/Addis_Ababa\"\n  | \"Africa/Algiers\"\n  | \"Africa/Asmara\"\n  | \"Africa/Asmera\"\n  | \"Africa/Bamako\"\n  | \"Africa/Bangui\"\n  | \"Africa/Banjul\"\n  | \"Africa/Bissau\"\n  | \"Africa/Blantyre\"\n  | \"Africa/Brazzaville\"\n  | \"Africa/Bujumbura\"\n  | \"Africa/Cairo\"\n  | \"Africa/Casablanca\"\n  | \"Africa/Ceuta\"\n  | \"Africa/Conakry\"\n  | \"Africa/Dakar\"\n  | \"Africa/Dar_es_Salaam\"\n  | \"Africa/Djibouti\"\n  | \"Africa/Douala\"\n  | \"Africa/El_Aaiun\"\n  | \"Africa/Freetown\"\n  | \"Africa/Gaborone\"\n  | \"Africa/Harare\"\n  | \"Africa/Johannesburg\"\n  | \"Africa/Juba\"\n  | \"Africa/Kampala\"\n  | \"Africa/Khartoum\"\n  | \"Africa/Kigali\"\n  | \"Africa/Kinshasa\"\n  | \"Africa/Lagos\"\n  | \"Africa/Libreville\"\n  | \"Africa/Lome\"\n  | \"Africa/Luanda\"\n  | \"Africa/Lubumbashi\"\n  | \"Africa/Lusaka\"\n  | \"Africa/Malabo\"\n  | \"Africa/Maputo\"\n  | \"Africa/Maseru\"\n  | \"Africa/Mbabane\"\n  | \"Africa/Mogadishu\"\n  | \"Africa/Monrovia\"\n  | \"Africa/Nairobi\"\n  | \"Africa/Ndjamena\"\n  | \"Africa/Niamey\"\n  | \"Africa/Nouakchott\"\n  | \"Africa/Ouagadougou\"\n  | \"Africa/Porto-Novo\"\n  | \"Africa/Sao_Tome\"\n  | \"Africa/Timbuktu\"\n  | \"Africa/Tripoli\"\n  | \"Africa/Tunis\"\n  | \"Africa/Windhoek\"\n  | \"America/Adak\"\n  | \"America/Anchorage\"\n  | \"America/Anguilla\"\n  | \"America/Antigua\"\n  | \"America/Araguaina\"\n  | \"America/Argentina/Buenos_Aires\"\n  | \"America/Argentina/Catamarca\"\n  | \"America/Argentina/ComodRivadavia\"\n  | \"America/Argentina/Cordoba\"\n  | \"America/Argentina/Jujuy\"\n  | \"America/Argentina/La_Rioja\"\n  | \"America/Argentina/Mendoza\"\n  | \"America/Argentina/Rio_Gallegos\"\n  | \"America/Argentina/Salta\"\n  | \"America/Argentina/San_Juan\"\n  | \"America/Argentina/San_Luis\"\n  | \"America/Argentina/Tucuman\"\n  | \"America/Argentina/Ushuaia\"\n  | \"America/Aruba\"\n  | \"America/Asuncion\"\n  | \"America/Atikokan\"\n  | \"America/Atka\"\n  | \"America/Bahia\"\n  | \"America/Bahia_Banderas\"\n  | \"America/Barbados\"\n  | \"America/Belem\"\n  | \"America/Belize\"\n  | \"America/Blanc-Sablon\"\n  | \"America/Boa_Vista\"\n  | \"America/Bogota\"\n  | \"America/Boise\"\n  | \"America/Buenos_Aires\"\n  | \"America/Cambridge_Bay\"\n  | \"America/Campo_Grande\"\n  | \"America/Cancun\"\n  | \"America/Caracas\"\n  | \"America/Catamarca\"\n  | \"America/Cayenne\"\n  | \"America/Cayman\"\n  | \"America/Chicago\"\n  | \"America/Chihuahua\"\n  | \"America/Coral_Harbour\"\n  | \"America/Cordoba\"\n  | \"America/Costa_Rica\"\n  | \"America/Creston\"\n  | \"America/Cuiaba\"\n  | \"America/Curacao\"\n  | \"America/Danmarkshavn\"\n  | \"America/Dawson\"\n  | \"America/Dawson_Creek\"\n  | \"America/Denver\"\n  | \"America/Detroit\"\n  | \"America/Dominica\"\n  | \"America/Edmonton\"\n  | \"America/Eirunepe\"\n  | \"America/El_Salvador\"\n  | \"America/Ensenada\"\n  | \"America/Fort_Nelson\"\n  | \"America/Fort_Wayne\"\n  | \"America/Fortaleza\"\n  | \"America/Glace_Bay\"\n  | \"America/Godthab\"\n  | \"America/Goose_Bay\"\n  | \"America/Grand_Turk\"\n  | \"America/Grenada\"\n  | \"America/Guadeloupe\"\n  | \"America/Guatemala\"\n  | \"America/Guayaquil\"\n  | \"America/Guyana\"\n  | \"America/Halifax\"\n  | \"America/Havana\"\n  | \"America/Hermosillo\"\n  | \"America/Indiana/Indianapolis\"\n  | \"America/Indiana/Knox\"\n  | \"America/Indiana/Marengo\"\n  | \"America/Indiana/Petersburg\"\n  | \"America/Indiana/Tell_City\"\n  | \"America/Indiana/Vevay\"\n  | \"America/Indiana/Vincennes\"\n  | \"America/Indiana/Winamac\"\n  | \"America/Indianapolis\"\n  | \"America/Inuvik\"\n  | \"America/Iqaluit\"\n  | \"America/Jamaica\"\n  | \"America/Jujuy\"\n  | \"America/Juneau\"\n  | \"America/Kentucky/Louisville\"\n  | \"America/Kentucky/Monticello\"\n  | \"America/Knox_IN\"\n  | \"America/Kralendijk\"\n  | \"America/La_Paz\"\n  | \"America/Lima\"\n  | \"America/Los_Angeles\"\n  | \"America/Louisville\"\n  | \"America/Lower_Princes\"\n  | \"America/Maceio\"\n  | \"America/Managua\"\n  | \"America/Manaus\"\n  | \"America/Marigot\"\n  | \"America/Martinique\"\n  | \"America/Matamoros\"\n  | \"America/Mazatlan\"\n  | \"America/Mendoza\"\n  | \"America/Menominee\"\n  | \"America/Merida\"\n  | \"America/Metlakatla\"\n  | \"America/Mexico_City\"\n  | \"America/Miquelon\"\n  | \"America/Moncton\"\n  | \"America/Monterrey\"\n  | \"America/Montevideo\"\n  | \"America/Montreal\"\n  | \"America/Montserrat\"\n  | \"America/Nassau\"\n  | \"America/New_York\"\n  | \"America/Nipigon\"\n  | \"America/Nome\"\n  | \"America/Noronha\"\n  | \"America/North_Dakota/Beulah\"\n  | \"America/North_Dakota/Center\"\n  | \"America/North_Dakota/New_Salem\"\n  | \"America/Ojinaga\"\n  | \"America/Panama\"\n  | \"America/Pangnirtung\"\n  | \"America/Paramaribo\"\n  | \"America/Phoenix\"\n  | \"America/Port-au-Prince\"\n  | \"America/Port_of_Spain\"\n  | \"America/Porto_Acre\"\n  | \"America/Porto_Velho\"\n  | \"America/Puerto_Rico\"\n  | \"America/Punta_Arenas\"\n  | \"America/Rainy_River\"\n  | \"America/Rankin_Inlet\"\n  | \"America/Recife\"\n  | \"America/Regina\"\n  | \"America/Resolute\"\n  | \"America/Rio_Branco\"\n  | \"America/Rosario\"\n  | \"America/Santa_Isabel\"\n  | \"America/Santarem\"\n  | \"America/Santiago\"\n  | \"America/Santo_Domingo\"\n  | \"America/Sao_Paulo\"\n  | \"America/Scoresbysund\"\n  | \"America/Shiprock\"\n  | \"America/Sitka\"\n  | \"America/St_Barthelemy\"\n  | \"America/St_Johns\"\n  | \"America/St_Kitts\"\n  | \"America/St_Lucia\"\n  | \"America/St_Thomas\"\n  | \"America/St_Vincent\"\n  | \"America/Swift_Current\"\n  | \"America/Tegucigalpa\"\n  | \"America/Thule\"\n  | \"America/Thunder_Bay\"\n  | \"America/Tijuana\"\n  | \"America/Toronto\"\n  | \"America/Tortola\"\n  | \"America/Vancouver\"\n  | \"America/Virgin\"\n  | \"America/Whitehorse\"\n  | \"America/Winnipeg\"\n  | \"America/Yakutat\"\n  | \"America/Yellowknife\"\n  | \"Antarctica/Casey\"\n  | \"Antarctica/Davis\"\n  | \"Antarctica/DumontDUrville\"\n  | \"Antarctica/Macquarie\"\n  | \"Antarctica/Mawson\"\n  | \"Antarctica/McMurdo\"\n  | \"Antarctica/Palmer\"\n  | \"Antarctica/Rothera\"\n  | \"Antarctica/South_Pole\"\n  | \"Antarctica/Syowa\"\n  | \"Antarctica/Troll\"\n  | \"Antarctica/Vostok\"\n  | \"Arctic/Longyearbyen\"\n  | \"Asia/Aden\"\n  | \"Asia/Almaty\"\n  | \"Asia/Amman\"\n  | \"Asia/Anadyr\"\n  | \"Asia/Aqtau\"\n  | \"Asia/Aqtobe\"\n  | \"Asia/Ashgabat\"\n  | \"Asia/Ashkhabad\"\n  | \"Asia/Atyrau\"\n  | \"Asia/Baghdad\"\n  | \"Asia/Bahrain\"\n  | \"Asia/Baku\"\n  | \"Asia/Bangkok\"\n  | \"Asia/Barnaul\"\n  | \"Asia/Beirut\"\n  | \"Asia/Bishkek\"\n  | \"Asia/Brunei\"\n  | \"Asia/Calcutta\"\n  | \"Asia/Chita\"\n  | \"Asia/Choibalsan\"\n  | \"Asia/Chongqing\"\n  | \"Asia/Chungking\"\n  | \"Asia/Colombo\"\n  | \"Asia/Dacca\"\n  | \"Asia/Damascus\"\n  | \"Asia/Dhaka\"\n  | \"Asia/Dili\"\n  | \"Asia/Dubai\"\n  | \"Asia/Dushanbe\"\n  | \"Asia/Famagusta\"\n  | \"Asia/Gaza\"\n  | \"Asia/Harbin\"\n  | \"Asia/Hebron\"\n  | \"Asia/Ho_Chi_Minh\"\n  | \"Asia/Hong_Kong\"\n  | \"Asia/Hovd\"\n  | \"Asia/Irkutsk\"\n  | \"Asia/Istanbul\"\n  | \"Asia/Jakarta\"\n  | \"Asia/Jayapura\"\n  | \"Asia/Jerusalem\"\n  | \"Asia/Kabul\"\n  | \"Asia/Kamchatka\"\n  | \"Asia/Karachi\"\n  | \"Asia/Kashgar\"\n  | \"Asia/Kathmandu\"\n  | \"Asia/Katmandu\"\n  | \"Asia/Khandyga\"\n  | \"Asia/Kolkata\"\n  | \"Asia/Krasnoyarsk\"\n  | \"Asia/Kuala_Lumpur\"\n  | \"Asia/Kuching\"\n  | \"Asia/Kuwait\"\n  | \"Asia/Macao\"\n  | \"Asia/Macau\"\n  | \"Asia/Magadan\"\n  | \"Asia/Makassar\"\n  | \"Asia/Manila\"\n  | \"Asia/Muscat\"\n  | \"Asia/Nicosia\"\n  | \"Asia/Novokuznetsk\"\n  | \"Asia/Novosibirsk\"\n  | \"Asia/Omsk\"\n  | \"Asia/Oral\"\n  | \"Asia/Phnom_Penh\"\n  | \"Asia/Pontianak\"\n  | \"Asia/Pyongyang\"\n  | \"Asia/Qatar\"\n  | \"Asia/Qostanay\"\n  | \"Asia/Qyzylorda\"\n  | \"Asia/Rangoon\"\n  | \"Asia/Riyadh\"\n  | \"Asia/Saigon\"\n  | \"Asia/Sakhalin\"\n  | \"Asia/Samarkand\"\n  | \"Asia/Seoul\"\n  | \"Asia/Shanghai\"\n  | \"Asia/Singapore\"\n  | \"Asia/Srednekolymsk\"\n  | \"Asia/Taipei\"\n  | \"Asia/Tashkent\"\n  | \"Asia/Tbilisi\"\n  | \"Asia/Tehran\"\n  | \"Asia/Tel_Aviv\"\n  | \"Asia/Thimbu\"\n  | \"Asia/Thimphu\"\n  | \"Asia/Tokyo\"\n  | \"Asia/Tomsk\"\n  | \"Asia/Ujung_Pandang\"\n  | \"Asia/Ulaanbaatar\"\n  | \"Asia/Ulan_Bator\"\n  | \"Asia/Urumqi\"\n  | \"Asia/Ust-Nera\"\n  | \"Asia/Vientiane\"\n  | \"Asia/Vladivostok\"\n  | \"Asia/Yakutsk\"\n  | \"Asia/Yangon\"\n  | \"Asia/Yekaterinburg\"\n  | \"Asia/Yerevan\"\n  | \"Atlantic/Azores\"\n  | \"Atlantic/Bermuda\"\n  | \"Atlantic/Canary\"\n  | \"Atlantic/Cape_Verde\"\n  | \"Atlantic/Faeroe\"\n  | \"Atlantic/Faroe\"\n  | \"Atlantic/Jan_Mayen\"\n  | \"Atlantic/Madeira\"\n  | \"Atlantic/Reykjavik\"\n  | \"Atlantic/South_Georgia\"\n  | \"Atlantic/St_Helena\"\n  | \"Atlantic/Stanley\"\n  | \"Australia/ACT\"\n  | \"Australia/Adelaide\"\n  | \"Australia/Brisbane\"\n  | \"Australia/Broken_Hill\"\n  | \"Australia/Canberra\"\n  | \"Australia/Currie\"\n  | \"Australia/Darwin\"\n  | \"Australia/Eucla\"\n  | \"Australia/Hobart\"\n  | \"Australia/LHI\"\n  | \"Australia/Lindeman\"\n  | \"Australia/Lord_Howe\"\n  | \"Australia/Melbourne\"\n  | \"Australia/NSW\"\n  | \"Australia/North\"\n  | \"Australia/Perth\"\n  | \"Australia/Queensland\"\n  | \"Australia/South\"\n  | \"Australia/Sydney\"\n  | \"Australia/Tasmania\"\n  | \"Australia/Victoria\"\n  | \"Australia/West\"\n  | \"Australia/Yancowinna\"\n  | \"Brazil/Acre\"\n  | \"Brazil/DeNoronha\"\n  | \"Brazil/East\"\n  | \"Brazil/West\"\n  | \"CET\"\n  | \"CST6CDT\"\n  | \"Canada/Atlantic\"\n  | \"Canada/Central\"\n  | \"Canada/Eastern\"\n  | \"Canada/Mountain\"\n  | \"Canada/Newfoundland\"\n  | \"Canada/Pacific\"\n  | \"Canada/Saskatchewan\"\n  | \"Canada/Yukon\"\n  | \"Chile/Continental\"\n  | \"Chile/EasterIsland\"\n  | \"Cuba\"\n  | \"EET\"\n  | \"EST\"\n  | \"EST5EDT\"\n  | \"Egypt\"\n  | \"Eire\"\n  | \"Etc/GMT\"\n  | \"Etc/GMT+0\"\n  | \"Etc/GMT+1\"\n  | \"Etc/GMT+10\"\n  | \"Etc/GMT+11\"\n  | \"Etc/GMT+12\"\n  | \"Etc/GMT+2\"\n  | \"Etc/GMT+3\"\n  | \"Etc/GMT+4\"\n  | \"Etc/GMT+5\"\n  | \"Etc/GMT+6\"\n  | \"Etc/GMT+7\"\n  | \"Etc/GMT+8\"\n  | \"Etc/GMT+9\"\n  | \"Etc/GMT-0\"\n  | \"Etc/GMT-1\"\n  | \"Etc/GMT-10\"\n  | \"Etc/GMT-11\"\n  | \"Etc/GMT-12\"\n  | \"Etc/GMT-13\"\n  | \"Etc/GMT-14\"\n  | \"Etc/GMT-2\"\n  | \"Etc/GMT-3\"\n  | \"Etc/GMT-4\"\n  | \"Etc/GMT-5\"\n  | \"Etc/GMT-6\"\n  | \"Etc/GMT-7\"\n  | \"Etc/GMT-8\"\n  | \"Etc/GMT-9\"\n  | \"Etc/GMT0\"\n  | \"Etc/Greenwich\"\n  | \"Etc/UCT\"\n  | \"Etc/UTC\"\n  | \"Etc/Universal\"\n  | \"Etc/Zulu\"\n  | \"Europe/Amsterdam\"\n  | \"Europe/Andorra\"\n  | \"Europe/Astrakhan\"\n  | \"Europe/Athens\"\n  | \"Europe/Belfast\"\n  | \"Europe/Belgrade\"\n  | \"Europe/Berlin\"\n  | \"Europe/Bratislava\"\n  | \"Europe/Brussels\"\n  | \"Europe/Bucharest\"\n  | \"Europe/Budapest\"\n  | \"Europe/Busingen\"\n  | \"Europe/Chisinau\"\n  | \"Europe/Copenhagen\"\n  | \"Europe/Dublin\"\n  | \"Europe/Gibraltar\"\n  | \"Europe/Guernsey\"\n  | \"Europe/Helsinki\"\n  | \"Europe/Isle_of_Man\"\n  | \"Europe/Istanbul\"\n  | \"Europe/Jersey\"\n  | \"Europe/Kaliningrad\"\n  | \"Europe/Kiev\"\n  | \"Europe/Kirov\"\n  | \"Europe/Lisbon\"\n  | \"Europe/Ljubljana\"\n  | \"Europe/London\"\n  | \"Europe/Luxembourg\"\n  | \"Europe/Madrid\"\n  | \"Europe/Malta\"\n  | \"Europe/Mariehamn\"\n  | \"Europe/Minsk\"\n  | \"Europe/Monaco\"\n  | \"Europe/Moscow\"\n  | \"Europe/Nicosia\"\n  | \"Europe/Oslo\"\n  | \"Europe/Paris\"\n  | \"Europe/Podgorica\"\n  | \"Europe/Prague\"\n  | \"Europe/Riga\"\n  | \"Europe/Rome\"\n  | \"Europe/Samara\"\n  | \"Europe/San_Marino\"\n  | \"Europe/Sarajevo\"\n  | \"Europe/Saratov\"\n  | \"Europe/Simferopol\"\n  | \"Europe/Skopje\"\n  | \"Europe/Sofia\"\n  | \"Europe/Stockholm\"\n  | \"Europe/Tallinn\"\n  | \"Europe/Tirane\"\n  | \"Europe/Tiraspol\"\n  | \"Europe/Ulyanovsk\"\n  | \"Europe/Uzhgorod\"\n  | \"Europe/Vaduz\"\n  | \"Europe/Vatican\"\n  | \"Europe/Vienna\"\n  | \"Europe/Vilnius\"\n  | \"Europe/Volgograd\"\n  | \"Europe/Warsaw\"\n  | \"Europe/Zagreb\"\n  | \"Europe/Zaporozhye\"\n  | \"Europe/Zurich\"\n  | \"GB\"\n  | \"GB-Eire\"\n  | \"GMT\"\n  | \"GMT+0\"\n  | \"GMT-0\"\n  | \"GMT0\"\n  | \"Greenwich\"\n  | \"HST\"\n  | \"Hongkong\"\n  | \"Iceland\"\n  | \"Indian/Antananarivo\"\n  | \"Indian/Chagos\"\n  | \"Indian/Christmas\"\n  | \"Indian/Cocos\"\n  | \"Indian/Comoro\"\n  | \"Indian/Kerguelen\"\n  | \"Indian/Mahe\"\n  | \"Indian/Maldives\"\n  | \"Indian/Mauritius\"\n  | \"Indian/Mayotte\"\n  | \"Indian/Reunion\"\n  | \"Iran\"\n  | \"Israel\"\n  | \"Jamaica\"\n  | \"Japan\"\n  | \"Kwajalein\"\n  | \"Libya\"\n  | \"MET\"\n  | \"MST\"\n  | \"MST7MDT\"\n  | \"Mexico/BajaNorte\"\n  | \"Mexico/BajaSur\"\n  | \"Mexico/General\"\n  | \"NZ\"\n  | \"NZ-CHAT\"\n  | \"Navajo\"\n  | \"PRC\"\n  | \"PST8PDT\"\n  | \"Pacific/Apia\"\n  | \"Pacific/Auckland\"\n  | \"Pacific/Bougainville\"\n  | \"Pacific/Chatham\"\n  | \"Pacific/Chuuk\"\n  | \"Pacific/Easter\"\n  | \"Pacific/Efate\"\n  | \"Pacific/Enderbury\"\n  | \"Pacific/Fakaofo\"\n  | \"Pacific/Fiji\"\n  | \"Pacific/Funafuti\"\n  | \"Pacific/Galapagos\"\n  | \"Pacific/Gambier\"\n  | \"Pacific/Guadalcanal\"\n  | \"Pacific/Guam\"\n  | \"Pacific/Honolulu\"\n  | \"Pacific/Johnston\"\n  | \"Pacific/Kiritimati\"\n  | \"Pacific/Kosrae\"\n  | \"Pacific/Kwajalein\"\n  | \"Pacific/Majuro\"\n  | \"Pacific/Marquesas\"\n  | \"Pacific/Midway\"\n  | \"Pacific/Nauru\"\n  | \"Pacific/Niue\"\n  | \"Pacific/Norfolk\"\n  | \"Pacific/Noumea\"\n  | \"Pacific/Pago_Pago\"\n  | \"Pacific/Palau\"\n  | \"Pacific/Pitcairn\"\n  | \"Pacific/Pohnpei\"\n  | \"Pacific/Ponape\"\n  | \"Pacific/Port_Moresby\"\n  | \"Pacific/Rarotonga\"\n  | \"Pacific/Saipan\"\n  | \"Pacific/Samoa\"\n  | \"Pacific/Tahiti\"\n  | \"Pacific/Tarawa\"\n  | \"Pacific/Tongatapu\"\n  | \"Pacific/Truk\"\n  | \"Pacific/Wake\"\n  | \"Pacific/Wallis\"\n  | \"Pacific/Yap\"\n  | \"Poland\"\n  | \"Portugal\"\n  | \"ROC\"\n  | \"ROK\"\n  | \"Singapore\"\n  | \"Turkey\"\n  | \"UCT\"\n  | \"US/Alaska\"\n  | \"US/Aleutian\"\n  | \"US/Arizona\"\n  | \"US/Central\"\n  | \"US/East-Indiana\"\n  | \"US/Eastern\"\n  | \"US/Hawaii\"\n  | \"US/Indiana-Starke\"\n  | \"US/Michigan\"\n  | \"US/Mountain\"\n  | \"US/Pacific\"\n  | \"US/Pacific-New\"\n  | \"US/Samoa\"\n  | \"UTC\"\n  | \"Universal\"\n  | \"W-SU\"\n  | \"WET\"\n  | \"Zulu\"\n\ntype DateResponse = {\n  start: string\n  end: string | null\n  time_zone: TimeZoneRequest | null\n}\n\ntype RichTextItemResponse =\n  | {\n      type: \"text\"\n      text: { content: string; link: { url: TextRequest } | null }\n      annotations: {\n        bold: boolean\n        italic: boolean\n        strikethrough: boolean\n        underline: boolean\n        code: boolean\n        color:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n      plain_text: string\n      href: string | null\n    }\n  | {\n      type: \"mention\"\n      mention:\n        | { type: \"user\"; user: PartialUserObjectResponse }\n        | { type: \"date\"; date: DateResponse }\n        | { type: \"link_preview\"; link_preview: { url: TextRequest } }\n        | { type: \"page\"; page: { id: IdRequest } }\n        | { type: \"database\"; database: { id: IdRequest } }\n      annotations: {\n        bold: boolean\n        italic: boolean\n        strikethrough: boolean\n        underline: boolean\n        code: boolean\n        color:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n      plain_text: string\n      href: string | null\n    }\n  | {\n      type: \"equation\"\n      equation: { expression: TextRequest }\n      annotations: {\n        bold: boolean\n        italic: boolean\n        strikethrough: boolean\n        underline: boolean\n        code: boolean\n        color:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n      plain_text: string\n      href: string | null\n    }\n\ntype StringRequest = string\n\ntype SelectColor =\n  | \"default\"\n  | \"gray\"\n  | \"brown\"\n  | \"orange\"\n  | \"yellow\"\n  | \"green\"\n  | \"blue\"\n  | \"purple\"\n  | \"pink\"\n  | \"red\"\n\ntype SelectPropertyResponse = {\n  id: StringRequest\n  name: StringRequest\n  color: SelectColor\n}\n\ntype RollupFunction =\n  | \"count\"\n  | \"count_values\"\n  | \"empty\"\n  | \"not_empty\"\n  | \"unique\"\n  | \"show_unique\"\n  | \"percent_empty\"\n  | \"percent_not_empty\"\n  | \"sum\"\n  | \"average\"\n  | \"median\"\n  | \"min\"\n  | \"max\"\n  | \"range\"\n  | \"earliest_date\"\n  | \"latest_date\"\n  | \"date_range\"\n  | \"checked\"\n  | \"unchecked\"\n  | \"percent_checked\"\n  | \"percent_unchecked\"\n  | \"show_original\"\n\ntype EmojiRequest =\n  | \"\uD83D\uDE00\"\n  | \"\uD83D\uDE03\"\n  | \"\uD83D\uDE04\"\n  | \"\uD83D\uDE01\"\n  | \"\uD83D\uDE06\"\n  | \"\uD83D\uDE05\"\n  | \"\uD83E\uDD23\"\n  | \"\uD83D\uDE02\"\n  | \"\uD83D\uDE42\"\n  | \"\uD83D\uDE43\"\n  | \"\uD83D\uDE09\"\n  | \"\uD83D\uDE0A\"\n  | \"\uD83D\uDE07\"\n  | \"\uD83E\uDD70\"\n  | \"\uD83D\uDE0D\"\n  | \"\uD83E\uDD29\"\n  | \"\uD83D\uDE18\"\n  | \"\uD83D\uDE17\"\n  | \"\u263A\uFE0F\"\n  | \"\u263A\"\n  | \"\uD83D\uDE1A\"\n  | \"\uD83D\uDE19\"\n  | \"\uD83E\uDD72\"\n  | \"\uD83D\uDE0B\"\n  | \"\uD83D\uDE1B\"\n  | \"\uD83D\uDE1C\"\n  | \"\uD83E\uDD2A\"\n  | \"\uD83D\uDE1D\"\n  | \"\uD83E\uDD11\"\n  | \"\uD83E\uDD17\"\n  | \"\uD83E\uDD2D\"\n  | \"\uD83E\uDD2B\"\n  | \"\uD83E\uDD14\"\n  | \"\uD83E\uDD10\"\n  | \"\uD83E\uDD28\"\n  | \"\uD83D\uDE10\"\n  | \"\uD83D\uDE11\"\n  | \"\uD83D\uDE36\"\n  | \"\uD83D\uDE36\u200D\uD83C\uDF2B\uFE0F\"\n  | \"\uD83D\uDE36\u200D\uD83C\uDF2B\"\n  | \"\uD83D\uDE0F\"\n  | \"\uD83D\uDE12\"\n  | \"\uD83D\uDE44\"\n  | \"\uD83D\uDE2C\"\n  | \"\uD83D\uDE2E\u200D\uD83D\uDCA8\"\n  | \"\uD83E\uDD25\"\n  | \"\uD83D\uDE0C\"\n  | \"\uD83D\uDE14\"\n  | \"\uD83D\uDE2A\"\n  | \"\uD83E\uDD24\"\n  | \"\uD83D\uDE34\"\n  | \"\uD83D\uDE37\"\n  | \"\uD83E\uDD12\"\n  | \"\uD83E\uDD15\"\n  | \"\uD83E\uDD22\"\n  | \"\uD83E\uDD2E\"\n  | \"\uD83E\uDD27\"\n  | \"\uD83E\uDD75\"\n  | \"\uD83E\uDD76\"\n  | \"\uD83E\uDD74\"\n  | \"\uD83D\uDE35\"\n  | \"\uD83D\uDE35\u200D\uD83D\uDCAB\"\n  | \"\uD83E\uDD2F\"\n  | \"\uD83E\uDD20\"\n  | \"\uD83E\uDD73\"\n  | \"\uD83E\uDD78\"\n  | \"\uD83D\uDE0E\"\n  | \"\uD83E\uDD13\"\n  | \"\uD83E\uDDD0\"\n  | \"\uD83D\uDE15\"\n  | \"\uD83D\uDE1F\"\n  | \"\uD83D\uDE41\"\n  | \"\u2639\uFE0F\"\n  | \"\u2639\"\n  | \"\uD83D\uDE2E\"\n  | \"\uD83D\uDE2F\"\n  | \"\uD83D\uDE32\"\n  | \"\uD83D\uDE33\"\n  | \"\uD83E\uDD7A\"\n  | \"\uD83D\uDE26\"\n  | \"\uD83D\uDE27\"\n  | \"\uD83D\uDE28\"\n  | \"\uD83D\uDE30\"\n  | \"\uD83D\uDE25\"\n  | \"\uD83D\uDE22\"\n  | \"\uD83D\uDE2D\"\n  | \"\uD83D\uDE31\"\n  | \"\uD83D\uDE16\"\n  | \"\uD83D\uDE23\"\n  | \"\uD83D\uDE1E\"\n  | \"\uD83D\uDE13\"\n  | \"\uD83D\uDE29\"\n  | \"\uD83D\uDE2B\"\n  | \"\uD83E\uDD71\"\n  | \"\uD83D\uDE24\"\n  | \"\uD83D\uDE21\"\n  | \"\uD83D\uDE20\"\n  | \"\uD83E\uDD2C\"\n  | \"\uD83D\uDE08\"\n  | \"\uD83D\uDC7F\"\n  | \"\uD83D\uDC80\"\n  | \"\u2620\uFE0F\"\n  | \"\u2620\"\n  | \"\uD83D\uDCA9\"\n  | \"\uD83E\uDD21\"\n  | \"\uD83D\uDC79\"\n  | \"\uD83D\uDC7A\"\n  | \"\uD83D\uDC7B\"\n  | \"\uD83D\uDC7D\"\n  | \"\uD83D\uDC7E\"\n  | \"\uD83E\uDD16\"\n  | \"\uD83D\uDE3A\"\n  | \"\uD83D\uDE38\"\n  | \"\uD83D\uDE39\"\n  | \"\uD83D\uDE3B\"\n  | \"\uD83D\uDE3C\"\n  | \"\uD83D\uDE3D\"\n  | \"\uD83D\uDE40\"\n  | \"\uD83D\uDE3F\"\n  | \"\uD83D\uDE3E\"\n  | \"\uD83D\uDE48\"\n  | \"\uD83D\uDE49\"\n  | \"\uD83D\uDE4A\"\n  | \"\uD83D\uDC8B\"\n  | \"\uD83D\uDC8C\"\n  | \"\uD83D\uDC98\"\n  | \"\uD83D\uDC9D\"\n  | \"\uD83D\uDC96\"\n  | \"\uD83D\uDC97\"\n  | \"\uD83D\uDC93\"\n  | \"\uD83D\uDC9E\"\n  | \"\uD83D\uDC95\"\n  | \"\uD83D\uDC9F\"\n  | \"\u2763\uFE0F\"\n  | \"\u2763\"\n  | \"\uD83D\uDC94\"\n  | \"\u2764\uFE0F\u200D\uD83D\uDD25\"\n  | \"\u2764\u200D\uD83D\uDD25\"\n  | \"\u2764\uFE0F\u200D\uD83E\uDE79\"\n  | \"\u2764\u200D\uD83E\uDE79\"\n  | \"\u2764\uFE0F\"\n  | \"\u2764\"\n  | \"\uD83E\uDDE1\"\n  | \"\uD83D\uDC9B\"\n  | \"\uD83D\uDC9A\"\n  | \"\uD83D\uDC99\"\n  | \"\uD83D\uDC9C\"\n  | \"\uD83E\uDD0E\"\n  | \"\uD83D\uDDA4\"\n  | \"\uD83E\uDD0D\"\n  | \"\uD83D\uDCAF\"\n  | \"\uD83D\uDCA2\"\n  | \"\uD83D\uDCA5\"\n  | \"\uD83D\uDCAB\"\n  | \"\uD83D\uDCA6\"\n  | \"\uD83D\uDCA8\"\n  | \"\uD83D\uDD73\uFE0F\"\n  | \"\uD83D\uDD73\"\n  | \"\uD83D\uDCA3\"\n  | \"\uD83D\uDCAC\"\n  | \"\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8\uFE0F\"\n  | \"\uD83D\uDDE8\uFE0F\"\n  | \"\uD83D\uDDE8\"\n  | \"\uD83D\uDDEF\uFE0F\"\n  | \"\uD83D\uDDEF\"\n  | \"\uD83D\uDCAD\"\n  | \"\uD83D\uDCA4\"\n  | \"\uD83D\uDC4B\uD83C\uDFFB\"\n  | \"\uD83D\uDC4B\uD83C\uDFFC\"\n  | \"\uD83D\uDC4B\uD83C\uDFFD\"\n  | \"\uD83D\uDC4B\uD83C\uDFFE\"\n  | \"\uD83D\uDC4B\uD83C\uDFFF\"\n  | \"\uD83D\uDC4B\"\n  | \"\uD83E\uDD1A\uD83C\uDFFB\"\n  | \"\uD83E\uDD1A\uD83C\uDFFC\"\n  | \"\uD83E\uDD1A\uD83C\uDFFD\"\n  | \"\uD83E\uDD1A\uD83C\uDFFE\"\n  | \"\uD83E\uDD1A\uD83C\uDFFF\"\n  | \"\uD83E\uDD1A\"\n  | \"\uD83D\uDD90\uD83C\uDFFB\"\n  | \"\uD83D\uDD90\uD83C\uDFFC\"\n  | \"\uD83D\uDD90\uD83C\uDFFD\"\n  | \"\uD83D\uDD90\uD83C\uDFFE\"\n  | \"\uD83D\uDD90\uD83C\uDFFF\"\n  | \"\uD83D\uDD90\uFE0F\"\n  | \"\uD83D\uDD90\"\n  | \"\u270B\uD83C\uDFFB\"\n  | \"\u270B\uD83C\uDFFC\"\n  | \"\u270B\uD83C\uDFFD\"\n  | \"\u270B\uD83C\uDFFE\"\n  | \"\u270B\uD83C\uDFFF\"\n  | \"\u270B\"\n  | \"\uD83D\uDD96\uD83C\uDFFB\"\n  | \"\uD83D\uDD96\uD83C\uDFFC\"\n  | \"\uD83D\uDD96\uD83C\uDFFD\"\n  | \"\uD83D\uDD96\uD83C\uDFFE\"\n  | \"\uD83D\uDD96\uD83C\uDFFF\"\n  | \"\uD83D\uDD96\"\n  | \"\uD83D\uDC4C\uD83C\uDFFB\"\n  | \"\uD83D\uDC4C\uD83C\uDFFC\"\n  | \"\uD83D\uDC4C\uD83C\uDFFD\"\n  | \"\uD83D\uDC4C\uD83C\uDFFE\"\n  | \"\uD83D\uDC4C\uD83C\uDFFF\"\n  | \"\uD83D\uDC4C\"\n  | \"\uD83E\uDD0C\uD83C\uDFFB\"\n  | \"\uD83E\uDD0C\uD83C\uDFFC\"\n  | \"\uD83E\uDD0C\uD83C\uDFFD\"\n  | \"\uD83E\uDD0C\uD83C\uDFFE\"\n  | \"\uD83E\uDD0C\uD83C\uDFFF\"\n  | \"\uD83E\uDD0C\"\n  | \"\uD83E\uDD0F\uD83C\uDFFB\"\n  | \"\uD83E\uDD0F\uD83C\uDFFC\"\n  | \"\uD83E\uDD0F\uD83C\uDFFD\"\n  | \"\uD83E\uDD0F\uD83C\uDFFE\"\n  | \"\uD83E\uDD0F\uD83C\uDFFF\"\n  | \"\uD83E\uDD0F\"\n  | \"\u270C\uD83C\uDFFB\"\n  | \"\u270C\uD83C\uDFFC\"\n  | \"\u270C\uD83C\uDFFD\"\n  | \"\u270C\uD83C\uDFFE\"\n  | \"\u270C\uD83C\uDFFF\"\n  | \"\u270C\uFE0F\"\n  | \"\u270C\"\n  | \"\uD83E\uDD1E\uD83C\uDFFB\"\n  | \"\uD83E\uDD1E\uD83C\uDFFC\"\n  | \"\uD83E\uDD1E\uD83C\uDFFD\"\n  | \"\uD83E\uDD1E\uD83C\uDFFE\"\n  | \"\uD83E\uDD1E\uD83C\uDFFF\"\n  | \"\uD83E\uDD1E\"\n  | \"\uD83E\uDD1F\uD83C\uDFFB\"\n  | \"\uD83E\uDD1F\uD83C\uDFFC\"\n  | \"\uD83E\uDD1F\uD83C\uDFFD\"\n  | \"\uD83E\uDD1F\uD83C\uDFFE\"\n  | \"\uD83E\uDD1F\uD83C\uDFFF\"\n  | \"\uD83E\uDD1F\"\n  | \"\uD83E\uDD18\uD83C\uDFFB\"\n  | \"\uD83E\uDD18\uD83C\uDFFC\"\n  | \"\uD83E\uDD18\uD83C\uDFFD\"\n  | \"\uD83E\uDD18\uD83C\uDFFE\"\n  | \"\uD83E\uDD18\uD83C\uDFFF\"\n  | \"\uD83E\uDD18\"\n  | \"\uD83E\uDD19\uD83C\uDFFB\"\n  | \"\uD83E\uDD19\uD83C\uDFFC\"\n  | \"\uD83E\uDD19\uD83C\uDFFD\"\n  | \"\uD83E\uDD19\uD83C\uDFFE\"\n  | \"\uD83E\uDD19\uD83C\uDFFF\"\n  | \"\uD83E\uDD19\"\n  | \"\uD83D\uDC48\uD83C\uDFFB\"\n  | \"\uD83D\uDC48\uD83C\uDFFC\"\n  | \"\uD83D\uDC48\uD83C\uDFFD\"\n  | \"\uD83D\uDC48\uD83C\uDFFE\"\n  | \"\uD83D\uDC48\uD83C\uDFFF\"\n  | \"\uD83D\uDC48\"\n  | \"\uD83D\uDC49\uD83C\uDFFB\"\n  | \"\uD83D\uDC49\uD83C\uDFFC\"\n  | \"\uD83D\uDC49\uD83C\uDFFD\"\n  | \"\uD83D\uDC49\uD83C\uDFFE\"\n  | \"\uD83D\uDC49\uD83C\uDFFF\"\n  | \"\uD83D\uDC49\"\n  | \"\uD83D\uDC46\uD83C\uDFFB\"\n  | \"\uD83D\uDC46\uD83C\uDFFC\"\n  | \"\uD83D\uDC46\uD83C\uDFFD\"\n  | \"\uD83D\uDC46\uD83C\uDFFE\"\n  | \"\uD83D\uDC46\uD83C\uDFFF\"\n  | \"\uD83D\uDC46\"\n  | \"\uD83D\uDD95\uD83C\uDFFB\"\n  | \"\uD83D\uDD95\uD83C\uDFFC\"\n  | \"\uD83D\uDD95\uD83C\uDFFD\"\n  | \"\uD83D\uDD95\uD83C\uDFFE\"\n  | \"\uD83D\uDD95\uD83C\uDFFF\"\n  | \"\uD83D\uDD95\"\n  | \"\uD83D\uDC47\uD83C\uDFFB\"\n  | \"\uD83D\uDC47\uD83C\uDFFC\"\n  | \"\uD83D\uDC47\uD83C\uDFFD\"\n  | \"\uD83D\uDC47\uD83C\uDFFE\"\n  | \"\uD83D\uDC47\uD83C\uDFFF\"\n  | \"\uD83D\uDC47\"\n  | \"\u261D\uD83C\uDFFB\"\n  | \"\u261D\uD83C\uDFFC\"\n  | \"\u261D\uD83C\uDFFD\"\n  | \"\u261D\uD83C\uDFFE\"\n  | \"\u261D\uD83C\uDFFF\"\n  | \"\u261D\uFE0F\"\n  | \"\u261D\"\n  | \"\uD83D\uDC4D\uD83C\uDFFB\"\n  | \"\uD83D\uDC4D\uD83C\uDFFC\"\n  | \"\uD83D\uDC4D\uD83C\uDFFD\"\n  | \"\uD83D\uDC4D\uD83C\uDFFE\"\n  | \"\uD83D\uDC4D\uD83C\uDFFF\"\n  | \"\uD83D\uDC4D\"\n  | \"\uD83D\uDC4E\uD83C\uDFFB\"\n  | \"\uD83D\uDC4E\uD83C\uDFFC\"\n  | \"\uD83D\uDC4E\uD83C\uDFFD\"\n  | \"\uD83D\uDC4E\uD83C\uDFFE\"\n  | \"\uD83D\uDC4E\uD83C\uDFFF\"\n  | \"\uD83D\uDC4E\"\n  | \"\u270A\uD83C\uDFFB\"\n  | \"\u270A\uD83C\uDFFC\"\n  | \"\u270A\uD83C\uDFFD\"\n  | \"\u270A\uD83C\uDFFE\"\n  | \"\u270A\uD83C\uDFFF\"\n  | \"\u270A\"\n  | \"\uD83D\uDC4A\uD83C\uDFFB\"\n  | \"\uD83D\uDC4A\uD83C\uDFFC\"\n  | \"\uD83D\uDC4A\uD83C\uDFFD\"\n  | \"\uD83D\uDC4A\uD83C\uDFFE\"\n  | \"\uD83D\uDC4A\uD83C\uDFFF\"\n  | \"\uD83D\uDC4A\"\n  | \"\uD83E\uDD1B\uD83C\uDFFB\"\n  | \"\uD83E\uDD1B\uD83C\uDFFC\"\n  | \"\uD83E\uDD1B\uD83C\uDFFD\"\n  | \"\uD83E\uDD1B\uD83C\uDFFE\"\n  | \"\uD83E\uDD1B\uD83C\uDFFF\"\n  | \"\uD83E\uDD1B\"\n  | \"\uD83E\uDD1C\uD83C\uDFFB\"\n  | \"\uD83E\uDD1C\uD83C\uDFFC\"\n  | \"\uD83E\uDD1C\uD83C\uDFFD\"\n  | \"\uD83E\uDD1C\uD83C\uDFFE\"\n  | \"\uD83E\uDD1C\uD83C\uDFFF\"\n  | \"\uD83E\uDD1C\"\n  | \"\uD83D\uDC4F\uD83C\uDFFB\"\n  | \"\uD83D\uDC4F\uD83C\uDFFC\"\n  | \"\uD83D\uDC4F\uD83C\uDFFD\"\n  | \"\uD83D\uDC4F\uD83C\uDFFE\"\n  | \"\uD83D\uDC4F\uD83C\uDFFF\"\n  | \"\uD83D\uDC4F\"\n  | \"\uD83D\uDE4C\uD83C\uDFFB\"\n  | \"\uD83D\uDE4C\uD83C\uDFFC\"\n  | \"\uD83D\uDE4C\uD83C\uDFFD\"\n  | \"\uD83D\uDE4C\uD83C\uDFFE\"\n  | \"\uD83D\uDE4C\uD83C\uDFFF\"\n  | \"\uD83D\uDE4C\"\n  | \"\uD83D\uDC50\uD83C\uDFFB\"\n  | \"\uD83D\uDC50\uD83C\uDFFC\"\n  | \"\uD83D\uDC50\uD83C\uDFFD\"\n  | \"\uD83D\uDC50\uD83C\uDFFE\"\n  | \"\uD83D\uDC50\uD83C\uDFFF\"\n  | \"\uD83D\uDC50\"\n  | \"\uD83E\uDD32\uD83C\uDFFB\"\n  | \"\uD83E\uDD32\uD83C\uDFFC\"\n  | \"\uD83E\uDD32\uD83C\uDFFD\"\n  | \"\uD83E\uDD32\uD83C\uDFFE\"\n  | \"\uD83E\uDD32\uD83C\uDFFF\"\n  | \"\uD83E\uDD32\"\n  | \"\uD83E\uDD1D\"\n  | \"\uD83D\uDE4F\uD83C\uDFFB\"\n  | \"\uD83D\uDE4F\uD83C\uDFFC\"\n  | \"\uD83D\uDE4F\uD83C\uDFFD\"\n  | \"\uD83D\uDE4F\uD83C\uDFFE\"\n  | \"\uD83D\uDE4F\uD83C\uDFFF\"\n  | \"\uD83D\uDE4F\"\n  | \"\u270D\uD83C\uDFFB\"\n  | \"\u270D\uD83C\uDFFC\"\n  | \"\u270D\uD83C\uDFFD\"\n  | \"\u270D\uD83C\uDFFE\"\n  | \"\u270D\uD83C\uDFFF\"\n  | \"\u270D\uFE0F\"\n  | \"\u270D\"\n  | \"\uD83D\uDC85\uD83C\uDFFB\"\n  | \"\uD83D\uDC85\uD83C\uDFFC\"\n  | \"\uD83D\uDC85\uD83C\uDFFD\"\n  | \"\uD83D\uDC85\uD83C\uDFFE\"\n  | \"\uD83D\uDC85\uD83C\uDFFF\"\n  | \"\uD83D\uDC85\"\n  | \"\uD83E\uDD33\uD83C\uDFFB\"\n  | \"\uD83E\uDD33\uD83C\uDFFC\"\n  | \"\uD83E\uDD33\uD83C\uDFFD\"\n  | \"\uD83E\uDD33\uD83C\uDFFE\"\n  | \"\uD83E\uDD33\uD83C\uDFFF\"\n  | \"\uD83E\uDD33\"\n  | \"\uD83D\uDCAA\uD83C\uDFFB\"\n  | \"\uD83D\uDCAA\uD83C\uDFFC\"\n  | \"\uD83D\uDCAA\uD83C\uDFFD\"\n  | \"\uD83D\uDCAA\uD83C\uDFFE\"\n  | \"\uD83D\uDCAA\uD83C\uDFFF\"\n  | \"\uD83D\uDCAA\"\n  | \"\uD83E\uDDBE\"\n  | \"\uD83E\uDDBF\"\n  | \"\uD83E\uDDB5\uD83C\uDFFB\"\n  | \"\uD83E\uDDB5\uD83C\uDFFC\"\n  | \"\uD83E\uDDB5\uD83C\uDFFD\"\n  | \"\uD83E\uDDB5\uD83C\uDFFE\"\n  | \"\uD83E\uDDB5\uD83C\uDFFF\"\n  | \"\uD83E\uDDB5\"\n  | \"\uD83E\uDDB6\uD83C\uDFFB\"\n  | \"\uD83E\uDDB6\uD83C\uDFFC\"\n  | \"\uD83E\uDDB6\uD83C\uDFFD\"\n  | \"\uD83E\uDDB6\uD83C\uDFFE\"\n  | \"\uD83E\uDDB6\uD83C\uDFFF\"\n  | \"\uD83E\uDDB6\"\n  | \"\uD83D\uDC42\uD83C\uDFFB\"\n  | \"\uD83D\uDC42\uD83C\uDFFC\"\n  | \"\uD83D\uDC42\uD83C\uDFFD\"\n  | \"\uD83D\uDC42\uD83C\uDFFE\"\n  | \"\uD83D\uDC42\uD83C\uDFFF\"\n  | \"\uD83D\uDC42\"\n  | \"\uD83E\uDDBB\uD83C\uDFFB\"\n  | \"\uD83E\uDDBB\uD83C\uDFFC\"\n  | \"\uD83E\uDDBB\uD83C\uDFFD\"\n  | \"\uD83E\uDDBB\uD83C\uDFFE\"\n  | \"\uD83E\uDDBB\uD83C\uDFFF\"\n  | \"\uD83E\uDDBB\"\n  | \"\uD83D\uDC43\uD83C\uDFFB\"\n  | \"\uD83D\uDC43\uD83C\uDFFC\"\n  | \"\uD83D\uDC43\uD83C\uDFFD\"\n  | \"\uD83D\uDC43\uD83C\uDFFE\"\n  | \"\uD83D\uDC43\uD83C\uDFFF\"\n  | \"\uD83D\uDC43\"\n  | \"\uD83E\uDDE0\"\n  | \"\uD83E\uDEC0\"\n  | \"\uD83E\uDEC1\"\n  | \"\uD83E\uDDB7\"\n  | \"\uD83E\uDDB4\"\n  | \"\uD83D\uDC40\"\n  | \"\uD83D\uDC41\uFE0F\"\n  | \"\uD83D\uDC41\"\n  | \"\uD83D\uDC45\"\n  | \"\uD83D\uDC44\"\n  | \"\uD83D\uDC76\uD83C\uDFFB\"\n  | \"\uD83D\uDC76\uD83C\uDFFC\"\n  | \"\uD83D\uDC76\uD83C\uDFFD\"\n  | \"\uD83D\uDC76\uD83C\uDFFE\"\n  | \"\uD83D\uDC76\uD83C\uDFFF\"\n  | \"\uD83D\uDC76\"\n  | \"\uD83E\uDDD2\uD83C\uDFFB\"\n  | \"\uD83E\uDDD2\uD83C\uDFFC\"\n  | \"\uD83E\uDDD2\uD83C\uDFFD\"\n  | \"\uD83E\uDDD2\uD83C\uDFFE\"\n  | \"\uD83E\uDDD2\uD83C\uDFFF\"\n  | \"\uD83E\uDDD2\"\n  | \"\uD83D\uDC66\uD83C\uDFFB\"\n  | \"\uD83D\uDC66\uD83C\uDFFC\"\n  | \"\uD83D\uDC66\uD83C\uDFFD\"\n  | \"\uD83D\uDC66\uD83C\uDFFE\"\n  | \"\uD83D\uDC66\uD83C\uDFFF\"\n  | \"\uD83D\uDC66\"\n  | \"\uD83D\uDC67\uD83C\uDFFB\"\n  | \"\uD83D\uDC67\uD83C\uDFFC\"\n  | \"\uD83D\uDC67\uD83C\uDFFD\"\n  | \"\uD83D\uDC67\uD83C\uDFFE\"\n  | \"\uD83D\uDC67\uD83C\uDFFF\"\n  | \"\uD83D\uDC67\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\"\n  | \"\uD83E\uDDD1\"\n  | \"\uD83D\uDC71\uD83C\uDFFB\"\n  | \"\uD83D\uDC71\uD83C\uDFFC\"\n  | \"\uD83D\uDC71\uD83C\uDFFD\"\n  | \"\uD83D\uDC71\uD83C\uDFFE\"\n  | \"\uD83D\uDC71\uD83C\uDFFF\"\n  | \"\uD83D\uDC71\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\"\n  | \"\uD83D\uDC68\"\n  | \"\uD83E\uDDD4\uD83C\uDFFB\"\n  | \"\uD83E\uDDD4\uD83C\uDFFC\"\n  | \"\uD83E\uDDD4\uD83C\uDFFD\"\n  | \"\uD83E\uDDD4\uD83C\uDFFE\"\n  | \"\uD83E\uDDD4\uD83C\uDFFF\"\n  | \"\uD83E\uDDD4\"\n  | \"\uD83E\uDDD4\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD4\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD4\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD4\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD4\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD4\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD4\u200D\u2642\"\n  | \"\uD83E\uDDD4\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD4\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD4\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD4\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD4\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD4\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD4\u200D\u2640\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC68\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC68\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC68\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC68\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\"\n  | \"\uD83D\uDC69\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC69\u200D\uD83E\uDDB0\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDDB0\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDDB0\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDDB0\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDDB0\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDDB0\"\n  | \"\uD83E\uDDD1\u200D\uD83E\uDDB0\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC69\u200D\uD83E\uDDB1\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDDB1\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDDB1\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDDB1\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDDB1\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDDB1\"\n  | \"\uD83E\uDDD1\u200D\uD83E\uDDB1\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC69\u200D\uD83E\uDDB3\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDDB3\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDDB3\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDDB3\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDDB3\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDDB3\"\n  | \"\uD83E\uDDD1\u200D\uD83E\uDDB3\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC69\u200D\uD83E\uDDB2\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDDB2\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDDB2\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDDB2\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDDB2\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDDB2\"\n  | \"\uD83E\uDDD1\u200D\uD83E\uDDB2\"\n  | \"\uD83D\uDC71\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC71\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC71\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC71\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC71\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC71\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC71\u200D\u2640\"\n  | \"\uD83D\uDC71\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC71\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC71\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC71\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC71\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC71\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC71\u200D\u2642\"\n  | \"\uD83E\uDDD3\uD83C\uDFFB\"\n  | \"\uD83E\uDDD3\uD83C\uDFFC\"\n  | \"\uD83E\uDDD3\uD83C\uDFFD\"\n  | \"\uD83E\uDDD3\uD83C\uDFFE\"\n  | \"\uD83E\uDDD3\uD83C\uDFFF\"\n  | \"\uD83E\uDDD3\"\n  | \"\uD83D\uDC74\uD83C\uDFFB\"\n  | \"\uD83D\uDC74\uD83C\uDFFC\"\n  | \"\uD83D\uDC74\uD83C\uDFFD\"\n  | \"\uD83D\uDC74\uD83C\uDFFE\"\n  | \"\uD83D\uDC74\uD83C\uDFFF\"\n  | \"\uD83D\uDC74\"\n  | \"\uD83D\uDC75\uD83C\uDFFB\"\n  | \"\uD83D\uDC75\uD83C\uDFFC\"\n  | \"\uD83D\uDC75\uD83C\uDFFD\"\n  | \"\uD83D\uDC75\uD83C\uDFFE\"\n  | \"\uD83D\uDC75\uD83C\uDFFF\"\n  | \"\uD83D\uDC75\"\n  | \"\uD83D\uDE4D\uD83C\uDFFB\"\n  | \"\uD83D\uDE4D\uD83C\uDFFC\"\n  | \"\uD83D\uDE4D\uD83C\uDFFD\"\n  | \"\uD83D\uDE4D\uD83C\uDFFE\"\n  | \"\uD83D\uDE4D\uD83C\uDFFF\"\n  | \"\uD83D\uDE4D\"\n  | \"\uD83D\uDE4D\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4D\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4D\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4D\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4D\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4D\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4D\u200D\u2642\"\n  | \"\uD83D\uDE4D\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4D\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4D\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4D\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4D\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4D\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4D\u200D\u2640\"\n  | \"\uD83D\uDE4E\uD83C\uDFFB\"\n  | \"\uD83D\uDE4E\uD83C\uDFFC\"\n  | \"\uD83D\uDE4E\uD83C\uDFFD\"\n  | \"\uD83D\uDE4E\uD83C\uDFFE\"\n  | \"\uD83D\uDE4E\uD83C\uDFFF\"\n  | \"\uD83D\uDE4E\"\n  | \"\uD83D\uDE4E\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4E\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4E\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4E\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4E\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4E\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4E\u200D\u2642\"\n  | \"\uD83D\uDE4E\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4E\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4E\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4E\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4E\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4E\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4E\u200D\u2640\"\n  | \"\uD83D\uDE45\uD83C\uDFFB\"\n  | \"\uD83D\uDE45\uD83C\uDFFC\"\n  | \"\uD83D\uDE45\uD83C\uDFFD\"\n  | \"\uD83D\uDE45\uD83C\uDFFE\"\n  | \"\uD83D\uDE45\uD83C\uDFFF\"\n  | \"\uD83D\uDE45\"\n  | \"\uD83D\uDE45\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE45\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE45\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE45\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE45\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE45\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE45\u200D\u2642\"\n  | \"\uD83D\uDE45\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE45\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE45\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE45\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE45\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE45\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE45\u200D\u2640\"\n  | \"\uD83D\uDE46\uD83C\uDFFB\"\n  | \"\uD83D\uDE46\uD83C\uDFFC\"\n  | \"\uD83D\uDE46\uD83C\uDFFD\"\n  | \"\uD83D\uDE46\uD83C\uDFFE\"\n  | \"\uD83D\uDE46\uD83C\uDFFF\"\n  | \"\uD83D\uDE46\"\n  | \"\uD83D\uDE46\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE46\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE46\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE46\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE46\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE46\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE46\u200D\u2642\"\n  | \"\uD83D\uDE46\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE46\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE46\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE46\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE46\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE46\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE46\u200D\u2640\"\n  | \"\uD83D\uDC81\uD83C\uDFFB\"\n  | \"\uD83D\uDC81\uD83C\uDFFC\"\n  | \"\uD83D\uDC81\uD83C\uDFFD\"\n  | \"\uD83D\uDC81\uD83C\uDFFE\"\n  | \"\uD83D\uDC81\uD83C\uDFFF\"\n  | \"\uD83D\uDC81\"\n  | \"\uD83D\uDC81\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC81\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC81\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC81\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC81\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC81\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC81\u200D\u2642\"\n  | \"\uD83D\uDC81\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC81\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC81\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC81\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC81\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC81\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC81\u200D\u2640\"\n  | \"\uD83D\uDE4B\uD83C\uDFFB\"\n  | \"\uD83D\uDE4B\uD83C\uDFFC\"\n  | \"\uD83D\uDE4B\uD83C\uDFFD\"\n  | \"\uD83D\uDE4B\uD83C\uDFFE\"\n  | \"\uD83D\uDE4B\uD83C\uDFFF\"\n  | \"\uD83D\uDE4B\"\n  | \"\uD83D\uDE4B\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4B\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4B\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4B\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4B\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4B\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE4B\u200D\u2642\"\n  | \"\uD83D\uDE4B\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4B\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4B\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4B\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4B\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4B\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE4B\u200D\u2640\"\n  | \"\uD83E\uDDCF\uD83C\uDFFB\"\n  | \"\uD83E\uDDCF\uD83C\uDFFC\"\n  | \"\uD83E\uDDCF\uD83C\uDFFD\"\n  | \"\uD83E\uDDCF\uD83C\uDFFE\"\n  | \"\uD83E\uDDCF\uD83C\uDFFF\"\n  | \"\uD83E\uDDCF\"\n  | \"\uD83E\uDDCF\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCF\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCF\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCF\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCF\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCF\u200D\u2642\"\n  | \"\uD83E\uDDCF\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCF\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCF\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCF\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCF\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCF\u200D\u2640\"\n  | \"\uD83D\uDE47\uD83C\uDFFB\"\n  | \"\uD83D\uDE47\uD83C\uDFFC\"\n  | \"\uD83D\uDE47\uD83C\uDFFD\"\n  | \"\uD83D\uDE47\uD83C\uDFFE\"\n  | \"\uD83D\uDE47\uD83C\uDFFF\"\n  | \"\uD83D\uDE47\"\n  | \"\uD83D\uDE47\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE47\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE47\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE47\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE47\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE47\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDE47\u200D\u2642\"\n  | \"\uD83D\uDE47\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE47\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE47\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE47\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE47\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE47\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDE47\u200D\u2640\"\n  | \"\uD83E\uDD26\uD83C\uDFFB\"\n  | \"\uD83E\uDD26\uD83C\uDFFC\"\n  | \"\uD83E\uDD26\uD83C\uDFFD\"\n  | \"\uD83E\uDD26\uD83C\uDFFE\"\n  | \"\uD83E\uDD26\uD83C\uDFFF\"\n  | \"\uD83E\uDD26\"\n  | \"\uD83E\uDD26\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD26\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD26\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD26\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD26\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD26\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD26\u200D\u2642\"\n  | \"\uD83E\uDD26\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD26\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD26\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD26\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD26\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD26\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD26\u200D\u2640\"\n  | \"\uD83E\uDD37\uD83C\uDFFB\"\n  | \"\uD83E\uDD37\uD83C\uDFFC\"\n  | \"\uD83E\uDD37\uD83C\uDFFD\"\n  | \"\uD83E\uDD37\uD83C\uDFFE\"\n  | \"\uD83E\uDD37\uD83C\uDFFF\"\n  | \"\uD83E\uDD37\"\n  | \"\uD83E\uDD37\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD37\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD37\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD37\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD37\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD37\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD37\u200D\u2642\"\n  | \"\uD83E\uDD37\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD37\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD37\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD37\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD37\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD37\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD37\u200D\u2640\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\u2695\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\u2695\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\u2695\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\u2695\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\u2695\uFE0F\"\n  | \"\uD83E\uDDD1\u200D\u2695\uFE0F\"\n  | \"\uD83E\uDDD1\u200D\u2695\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC68\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC68\u200D\u2695\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC69\u200D\u2695\uFE0F\"\n  | \"\uD83D\uDC69\u200D\u2695\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83C\uDF93\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83C\uDF93\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83C\uDF93\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83C\uDF93\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83C\uDF93\"\n  | \"\uD83E\uDDD1\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC68\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDF93\"\n  | \"\uD83D\uDC69\u200D\uD83C\uDF93\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83C\uDFEB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83C\uDFEB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83C\uDFEB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83C\uDFEB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83C\uDFEB\"\n  | \"\uD83E\uDDD1\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC68\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDFEB\"\n  | \"\uD83D\uDC69\u200D\uD83C\uDFEB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\u2696\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\u2696\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\u2696\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\u2696\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\u2696\uFE0F\"\n  | \"\uD83E\uDDD1\u200D\u2696\uFE0F\"\n  | \"\uD83E\uDDD1\u200D\u2696\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC68\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC68\u200D\u2696\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC69\u200D\u2696\uFE0F\"\n  | \"\uD83D\uDC69\u200D\u2696\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83C\uDF3E\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83C\uDF3E\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83C\uDF3E\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83C\uDF3E\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83C\uDF3E\"\n  | \"\uD83E\uDDD1\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC68\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDF3E\"\n  | \"\uD83D\uDC69\u200D\uD83C\uDF3E\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83C\uDF73\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83C\uDF73\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83C\uDF73\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83C\uDF73\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83C\uDF73\"\n  | \"\uD83E\uDDD1\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC68\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDF73\"\n  | \"\uD83D\uDC69\u200D\uD83C\uDF73\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83D\uDD27\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83D\uDD27\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83D\uDD27\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83D\uDD27\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83D\uDD27\"\n  | \"\uD83E\uDDD1\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDD27\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDD27\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83C\uDFED\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83C\uDFED\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83C\uDFED\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83C\uDFED\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83C\uDFED\"\n  | \"\uD83E\uDDD1\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC68\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDFED\"\n  | \"\uD83D\uDC69\u200D\uD83C\uDFED\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83D\uDCBC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83D\uDCBC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83D\uDCBC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83D\uDCBC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83D\uDCBC\"\n  | \"\uD83E\uDDD1\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDCBC\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDCBC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83D\uDD2C\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83D\uDD2C\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83D\uDD2C\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83D\uDD2C\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83D\uDD2C\"\n  | \"\uD83E\uDDD1\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDD2C\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDD2C\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83D\uDCBB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83D\uDCBB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83D\uDCBB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83D\uDCBB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83D\uDCBB\"\n  | \"\uD83E\uDDD1\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDCBB\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDCBB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83C\uDFA4\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83C\uDFA4\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83C\uDFA4\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83C\uDFA4\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83C\uDFA4\"\n  | \"\uD83E\uDDD1\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC68\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDFA4\"\n  | \"\uD83D\uDC69\u200D\uD83C\uDFA4\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83C\uDFA8\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83C\uDFA8\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83C\uDFA8\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83C\uDFA8\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83C\uDFA8\"\n  | \"\uD83E\uDDD1\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC68\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDFA8\"\n  | \"\uD83D\uDC69\u200D\uD83C\uDFA8\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\u2708\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\u2708\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\u2708\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\u2708\uFE0F\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\u2708\uFE0F\"\n  | \"\uD83E\uDDD1\u200D\u2708\uFE0F\"\n  | \"\uD83E\uDDD1\u200D\u2708\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC68\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC68\u200D\u2708\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC69\u200D\u2708\uFE0F\"\n  | \"\uD83D\uDC69\u200D\u2708\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83D\uDE80\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83D\uDE80\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83D\uDE80\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83D\uDE80\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83D\uDE80\"\n  | \"\uD83E\uDDD1\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDE80\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDE80\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83D\uDE92\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83D\uDE92\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83D\uDE92\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83D\uDE92\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83D\uDE92\"\n  | \"\uD83E\uDDD1\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDE92\"\n  | \"\uD83D\uDC6E\uD83C\uDFFB\"\n  | \"\uD83D\uDC6E\uD83C\uDFFC\"\n  | \"\uD83D\uDC6E\uD83C\uDFFD\"\n  | \"\uD83D\uDC6E\uD83C\uDFFE\"\n  | \"\uD83D\uDC6E\uD83C\uDFFF\"\n  | \"\uD83D\uDC6E\"\n  | \"\uD83D\uDC6E\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC6E\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC6E\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC6E\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC6E\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC6E\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC6E\u200D\u2642\"\n  | \"\uD83D\uDC6E\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC6E\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC6E\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC6E\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC6E\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC6E\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC6E\u200D\u2640\"\n  | \"\uD83D\uDD75\uD83C\uDFFB\"\n  | \"\uD83D\uDD75\uD83C\uDFFC\"\n  | \"\uD83D\uDD75\uD83C\uDFFD\"\n  | \"\uD83D\uDD75\uD83C\uDFFE\"\n  | \"\uD83D\uDD75\uD83C\uDFFF\"\n  | \"\uD83D\uDD75\uFE0F\"\n  | \"\uD83D\uDD75\"\n  | \"\uD83D\uDD75\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDD75\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDD75\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDD75\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDD75\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDD75\uFE0F\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDD75\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDD75\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDD75\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDD75\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDD75\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDD75\uFE0F\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC82\uD83C\uDFFB\"\n  | \"\uD83D\uDC82\uD83C\uDFFC\"\n  | \"\uD83D\uDC82\uD83C\uDFFD\"\n  | \"\uD83D\uDC82\uD83C\uDFFE\"\n  | \"\uD83D\uDC82\uD83C\uDFFF\"\n  | \"\uD83D\uDC82\"\n  | \"\uD83D\uDC82\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC82\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC82\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC82\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC82\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC82\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC82\u200D\u2642\"\n  | \"\uD83D\uDC82\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC82\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC82\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC82\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC82\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC82\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC82\u200D\u2640\"\n  | \"\uD83E\uDD77\uD83C\uDFFB\"\n  | \"\uD83E\uDD77\uD83C\uDFFC\"\n  | \"\uD83E\uDD77\uD83C\uDFFD\"\n  | \"\uD83E\uDD77\uD83C\uDFFE\"\n  | \"\uD83E\uDD77\uD83C\uDFFF\"\n  | \"\uD83E\uDD77\"\n  | \"\uD83D\uDC77\uD83C\uDFFB\"\n  | \"\uD83D\uDC77\uD83C\uDFFC\"\n  | \"\uD83D\uDC77\uD83C\uDFFD\"\n  | \"\uD83D\uDC77\uD83C\uDFFE\"\n  | \"\uD83D\uDC77\uD83C\uDFFF\"\n  | \"\uD83D\uDC77\"\n  | \"\uD83D\uDC77\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC77\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC77\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC77\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC77\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC77\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC77\u200D\u2642\"\n  | \"\uD83D\uDC77\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC77\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC77\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC77\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC77\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC77\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC77\u200D\u2640\"\n  | \"\uD83E\uDD34\uD83C\uDFFB\"\n  | \"\uD83E\uDD34\uD83C\uDFFC\"\n  | \"\uD83E\uDD34\uD83C\uDFFD\"\n  | \"\uD83E\uDD34\uD83C\uDFFE\"\n  | \"\uD83E\uDD34\uD83C\uDFFF\"\n  | \"\uD83E\uDD34\"\n  | \"\uD83D\uDC78\uD83C\uDFFB\"\n  | \"\uD83D\uDC78\uD83C\uDFFC\"\n  | \"\uD83D\uDC78\uD83C\uDFFD\"\n  | \"\uD83D\uDC78\uD83C\uDFFE\"\n  | \"\uD83D\uDC78\uD83C\uDFFF\"\n  | \"\uD83D\uDC78\"\n  | \"\uD83D\uDC73\uD83C\uDFFB\"\n  | \"\uD83D\uDC73\uD83C\uDFFC\"\n  | \"\uD83D\uDC73\uD83C\uDFFD\"\n  | \"\uD83D\uDC73\uD83C\uDFFE\"\n  | \"\uD83D\uDC73\uD83C\uDFFF\"\n  | \"\uD83D\uDC73\"\n  | \"\uD83D\uDC73\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC73\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC73\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC73\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC73\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC73\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC73\u200D\u2642\"\n  | \"\uD83D\uDC73\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC73\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC73\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC73\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC73\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC73\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC73\u200D\u2640\"\n  | \"\uD83D\uDC72\uD83C\uDFFB\"\n  | \"\uD83D\uDC72\uD83C\uDFFC\"\n  | \"\uD83D\uDC72\uD83C\uDFFD\"\n  | \"\uD83D\uDC72\uD83C\uDFFE\"\n  | \"\uD83D\uDC72\uD83C\uDFFF\"\n  | \"\uD83D\uDC72\"\n  | \"\uD83E\uDDD5\uD83C\uDFFB\"\n  | \"\uD83E\uDDD5\uD83C\uDFFC\"\n  | \"\uD83E\uDDD5\uD83C\uDFFD\"\n  | \"\uD83E\uDDD5\uD83C\uDFFE\"\n  | \"\uD83E\uDDD5\uD83C\uDFFF\"\n  | \"\uD83E\uDDD5\"\n  | \"\uD83E\uDD35\uD83C\uDFFB\"\n  | \"\uD83E\uDD35\uD83C\uDFFC\"\n  | \"\uD83E\uDD35\uD83C\uDFFD\"\n  | \"\uD83E\uDD35\uD83C\uDFFE\"\n  | \"\uD83E\uDD35\uD83C\uDFFF\"\n  | \"\uD83E\uDD35\"\n  | \"\uD83E\uDD35\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD35\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD35\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD35\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD35\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD35\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD35\u200D\u2642\"\n  | \"\uD83E\uDD35\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD35\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD35\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD35\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD35\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD35\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD35\u200D\u2640\"\n  | \"\uD83D\uDC70\uD83C\uDFFB\"\n  | \"\uD83D\uDC70\uD83C\uDFFC\"\n  | \"\uD83D\uDC70\uD83C\uDFFD\"\n  | \"\uD83D\uDC70\uD83C\uDFFE\"\n  | \"\uD83D\uDC70\uD83C\uDFFF\"\n  | \"\uD83D\uDC70\"\n  | \"\uD83D\uDC70\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC70\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC70\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC70\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC70\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC70\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC70\u200D\u2642\"\n  | \"\uD83D\uDC70\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC70\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC70\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC70\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC70\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC70\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC70\u200D\u2640\"\n  | \"\uD83E\uDD30\uD83C\uDFFB\"\n  | \"\uD83E\uDD30\uD83C\uDFFC\"\n  | \"\uD83E\uDD30\uD83C\uDFFD\"\n  | \"\uD83E\uDD30\uD83C\uDFFE\"\n  | \"\uD83E\uDD30\uD83C\uDFFF\"\n  | \"\uD83E\uDD30\"\n  | \"\uD83E\uDD31\uD83C\uDFFB\"\n  | \"\uD83E\uDD31\uD83C\uDFFC\"\n  | \"\uD83E\uDD31\uD83C\uDFFD\"\n  | \"\uD83E\uDD31\uD83C\uDFFE\"\n  | \"\uD83E\uDD31\uD83C\uDFFF\"\n  | \"\uD83E\uDD31\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC69\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC68\u200D\uD83C\uDF7C\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83C\uDF7C\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83C\uDF7C\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83C\uDF7C\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83C\uDF7C\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83C\uDF7C\"\n  | \"\uD83E\uDDD1\u200D\uD83C\uDF7C\"\n  | \"\uD83D\uDC7C\uD83C\uDFFB\"\n  | \"\uD83D\uDC7C\uD83C\uDFFC\"\n  | \"\uD83D\uDC7C\uD83C\uDFFD\"\n  | \"\uD83D\uDC7C\uD83C\uDFFE\"\n  | \"\uD83D\uDC7C\uD83C\uDFFF\"\n  | \"\uD83D\uDC7C\"\n  | \"\uD83C\uDF85\uD83C\uDFFB\"\n  | \"\uD83C\uDF85\uD83C\uDFFC\"\n  | \"\uD83C\uDF85\uD83C\uDFFD\"\n  | \"\uD83C\uDF85\uD83C\uDFFE\"\n  | \"\uD83C\uDF85\uD83C\uDFFF\"\n  | \"\uD83C\uDF85\"\n  | \"\uD83E\uDD36\uD83C\uDFFB\"\n  | \"\uD83E\uDD36\uD83C\uDFFC\"\n  | \"\uD83E\uDD36\uD83C\uDFFD\"\n  | \"\uD83E\uDD36\uD83C\uDFFE\"\n  | \"\uD83E\uDD36\uD83C\uDFFF\"\n  | \"\uD83E\uDD36\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83C\uDF84\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83C\uDF84\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83C\uDF84\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83C\uDF84\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83C\uDF84\"\n  | \"\uD83E\uDDD1\u200D\uD83C\uDF84\"\n  | \"\uD83E\uDDB8\uD83C\uDFFB\"\n  | \"\uD83E\uDDB8\uD83C\uDFFC\"\n  | \"\uD83E\uDDB8\uD83C\uDFFD\"\n  | \"\uD83E\uDDB8\uD83C\uDFFE\"\n  | \"\uD83E\uDDB8\uD83C\uDFFF\"\n  | \"\uD83E\uDDB8\"\n  | \"\uD83E\uDDB8\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB8\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB8\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB8\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB8\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB8\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB8\u200D\u2642\"\n  | \"\uD83E\uDDB8\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB8\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB8\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB8\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB8\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB8\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB8\u200D\u2640\"\n  | \"\uD83E\uDDB9\uD83C\uDFFB\"\n  | \"\uD83E\uDDB9\uD83C\uDFFC\"\n  | \"\uD83E\uDDB9\uD83C\uDFFD\"\n  | \"\uD83E\uDDB9\uD83C\uDFFE\"\n  | \"\uD83E\uDDB9\uD83C\uDFFF\"\n  | \"\uD83E\uDDB9\"\n  | \"\uD83E\uDDB9\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB9\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB9\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB9\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB9\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB9\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDB9\u200D\u2642\"\n  | \"\uD83E\uDDB9\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB9\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB9\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB9\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB9\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB9\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDB9\u200D\u2640\"\n  | \"\uD83E\uDDD9\uD83C\uDFFB\"\n  | \"\uD83E\uDDD9\uD83C\uDFFC\"\n  | \"\uD83E\uDDD9\uD83C\uDFFD\"\n  | \"\uD83E\uDDD9\uD83C\uDFFE\"\n  | \"\uD83E\uDDD9\uD83C\uDFFF\"\n  | \"\uD83E\uDDD9\"\n  | \"\uD83E\uDDD9\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD9\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD9\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD9\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD9\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD9\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD9\u200D\u2642\"\n  | \"\uD83E\uDDD9\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD9\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD9\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD9\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD9\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD9\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD9\u200D\u2640\"\n  | \"\uD83E\uDDDA\uD83C\uDFFB\"\n  | \"\uD83E\uDDDA\uD83C\uDFFC\"\n  | \"\uD83E\uDDDA\uD83C\uDFFD\"\n  | \"\uD83E\uDDDA\uD83C\uDFFE\"\n  | \"\uD83E\uDDDA\uD83C\uDFFF\"\n  | \"\uD83E\uDDDA\"\n  | \"\uD83E\uDDDA\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDA\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDA\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDA\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDA\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDA\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDA\u200D\u2642\"\n  | \"\uD83E\uDDDA\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDA\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDA\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDA\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDA\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDA\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDA\u200D\u2640\"\n  | \"\uD83E\uDDDB\uD83C\uDFFB\"\n  | \"\uD83E\uDDDB\uD83C\uDFFC\"\n  | \"\uD83E\uDDDB\uD83C\uDFFD\"\n  | \"\uD83E\uDDDB\uD83C\uDFFE\"\n  | \"\uD83E\uDDDB\uD83C\uDFFF\"\n  | \"\uD83E\uDDDB\"\n  | \"\uD83E\uDDDB\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDB\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDB\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDB\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDB\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDB\u200D\u2642\"\n  | \"\uD83E\uDDDB\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDB\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDB\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDB\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDB\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDB\u200D\u2640\"\n  | \"\uD83E\uDDDC\uD83C\uDFFB\"\n  | \"\uD83E\uDDDC\uD83C\uDFFC\"\n  | \"\uD83E\uDDDC\uD83C\uDFFD\"\n  | \"\uD83E\uDDDC\uD83C\uDFFE\"\n  | \"\uD83E\uDDDC\uD83C\uDFFF\"\n  | \"\uD83E\uDDDC\"\n  | \"\uD83E\uDDDC\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDC\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDC\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDC\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDC\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDC\u200D\u2642\"\n  | \"\uD83E\uDDDC\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDC\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDC\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDC\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDC\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDC\u200D\u2640\"\n  | \"\uD83E\uDDDD\uD83C\uDFFB\"\n  | \"\uD83E\uDDDD\uD83C\uDFFC\"\n  | \"\uD83E\uDDDD\uD83C\uDFFD\"\n  | \"\uD83E\uDDDD\uD83C\uDFFE\"\n  | \"\uD83E\uDDDD\uD83C\uDFFF\"\n  | \"\uD83E\uDDDD\"\n  | \"\uD83E\uDDDD\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDD\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDD\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDD\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDD\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDD\u200D\u2642\"\n  | \"\uD83E\uDDDD\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDD\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDD\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDD\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDD\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDD\u200D\u2640\"\n  | \"\uD83E\uDDDE\"\n  | \"\uD83E\uDDDE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDE\u200D\u2642\"\n  | \"\uD83E\uDDDE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDE\u200D\u2640\"\n  | \"\uD83E\uDDDF\"\n  | \"\uD83E\uDDDF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDDF\u200D\u2642\"\n  | \"\uD83E\uDDDF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDDF\u200D\u2640\"\n  | \"\uD83D\uDC86\uD83C\uDFFB\"\n  | \"\uD83D\uDC86\uD83C\uDFFC\"\n  | \"\uD83D\uDC86\uD83C\uDFFD\"\n  | \"\uD83D\uDC86\uD83C\uDFFE\"\n  | \"\uD83D\uDC86\uD83C\uDFFF\"\n  | \"\uD83D\uDC86\"\n  | \"\uD83D\uDC86\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC86\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC86\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC86\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC86\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC86\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC86\u200D\u2642\"\n  | \"\uD83D\uDC86\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC86\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC86\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC86\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC86\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC86\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC86\u200D\u2640\"\n  | \"\uD83D\uDC87\uD83C\uDFFB\"\n  | \"\uD83D\uDC87\uD83C\uDFFC\"\n  | \"\uD83D\uDC87\uD83C\uDFFD\"\n  | \"\uD83D\uDC87\uD83C\uDFFE\"\n  | \"\uD83D\uDC87\uD83C\uDFFF\"\n  | \"\uD83D\uDC87\"\n  | \"\uD83D\uDC87\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC87\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC87\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC87\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC87\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC87\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC87\u200D\u2642\"\n  | \"\uD83D\uDC87\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC87\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC87\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC87\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC87\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC87\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC87\u200D\u2640\"\n  | \"\uD83D\uDEB6\uD83C\uDFFB\"\n  | \"\uD83D\uDEB6\uD83C\uDFFC\"\n  | \"\uD83D\uDEB6\uD83C\uDFFD\"\n  | \"\uD83D\uDEB6\uD83C\uDFFE\"\n  | \"\uD83D\uDEB6\uD83C\uDFFF\"\n  | \"\uD83D\uDEB6\"\n  | \"\uD83D\uDEB6\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB6\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB6\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB6\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB6\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB6\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB6\u200D\u2642\"\n  | \"\uD83D\uDEB6\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB6\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB6\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB6\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB6\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB6\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB6\u200D\u2640\"\n  | \"\uD83E\uDDCD\uD83C\uDFFB\"\n  | \"\uD83E\uDDCD\uD83C\uDFFC\"\n  | \"\uD83E\uDDCD\uD83C\uDFFD\"\n  | \"\uD83E\uDDCD\uD83C\uDFFE\"\n  | \"\uD83E\uDDCD\uD83C\uDFFF\"\n  | \"\uD83E\uDDCD\"\n  | \"\uD83E\uDDCD\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCD\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCD\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCD\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCD\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCD\u200D\u2642\"\n  | \"\uD83E\uDDCD\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCD\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCD\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCD\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCD\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCD\u200D\u2640\"\n  | \"\uD83E\uDDCE\uD83C\uDFFB\"\n  | \"\uD83E\uDDCE\uD83C\uDFFC\"\n  | \"\uD83E\uDDCE\uD83C\uDFFD\"\n  | \"\uD83E\uDDCE\uD83C\uDFFE\"\n  | \"\uD83E\uDDCE\uD83C\uDFFF\"\n  | \"\uD83E\uDDCE\"\n  | \"\uD83E\uDDCE\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCE\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCE\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCE\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCE\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDCE\u200D\u2642\"\n  | \"\uD83E\uDDCE\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCE\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCE\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCE\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCE\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDCE\u200D\u2640\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDDAF\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDDAF\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDDAF\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDDAF\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDDAF\"\n  | \"\uD83E\uDDD1\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC68\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDAF\"\n  | \"\uD83D\uDC69\u200D\uD83E\uDDAF\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDDBC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDDBC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDDBC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDDBC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDDBC\"\n  | \"\uD83E\uDDD1\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC68\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDBC\"\n  | \"\uD83D\uDC69\u200D\uD83E\uDDBC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDDBD\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDDBD\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDDBD\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDDBD\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDDBD\"\n  | \"\uD83E\uDDD1\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC68\uD83C\uDFFB\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC68\uD83C\uDFFC\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC68\uD83C\uDFFD\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC68\uD83C\uDFFE\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC68\uD83C\uDFFF\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC68\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDDBD\"\n  | \"\uD83D\uDC69\u200D\uD83E\uDDBD\"\n  | \"\uD83C\uDFC3\uD83C\uDFFB\"\n  | \"\uD83C\uDFC3\uD83C\uDFFC\"\n  | \"\uD83C\uDFC3\uD83C\uDFFD\"\n  | \"\uD83C\uDFC3\uD83C\uDFFE\"\n  | \"\uD83C\uDFC3\uD83C\uDFFF\"\n  | \"\uD83C\uDFC3\"\n  | \"\uD83C\uDFC3\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC3\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC3\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC3\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC3\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC3\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC3\u200D\u2642\"\n  | \"\uD83C\uDFC3\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC3\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC3\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC3\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC3\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC3\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC3\u200D\u2640\"\n  | \"\uD83D\uDC83\uD83C\uDFFB\"\n  | \"\uD83D\uDC83\uD83C\uDFFC\"\n  | \"\uD83D\uDC83\uD83C\uDFFD\"\n  | \"\uD83D\uDC83\uD83C\uDFFE\"\n  | \"\uD83D\uDC83\uD83C\uDFFF\"\n  | \"\uD83D\uDC83\"\n  | \"\uD83D\uDD7A\uD83C\uDFFB\"\n  | \"\uD83D\uDD7A\uD83C\uDFFC\"\n  | \"\uD83D\uDD7A\uD83C\uDFFD\"\n  | \"\uD83D\uDD7A\uD83C\uDFFE\"\n  | \"\uD83D\uDD7A\uD83C\uDFFF\"\n  | \"\uD83D\uDD7A\"\n  | \"\uD83D\uDD74\uD83C\uDFFB\"\n  | \"\uD83D\uDD74\uD83C\uDFFC\"\n  | \"\uD83D\uDD74\uD83C\uDFFD\"\n  | \"\uD83D\uDD74\uD83C\uDFFE\"\n  | \"\uD83D\uDD74\uD83C\uDFFF\"\n  | \"\uD83D\uDD74\uFE0F\"\n  | \"\uD83D\uDD74\"\n  | \"\uD83D\uDC6F\"\n  | \"\uD83D\uDC6F\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDC6F\u200D\u2642\"\n  | \"\uD83D\uDC6F\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDC6F\u200D\u2640\"\n  | \"\uD83E\uDDD6\uD83C\uDFFB\"\n  | \"\uD83E\uDDD6\uD83C\uDFFC\"\n  | \"\uD83E\uDDD6\uD83C\uDFFD\"\n  | \"\uD83E\uDDD6\uD83C\uDFFE\"\n  | \"\uD83E\uDDD6\uD83C\uDFFF\"\n  | \"\uD83E\uDDD6\"\n  | \"\uD83E\uDDD6\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD6\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD6\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD6\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD6\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD6\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD6\u200D\u2642\"\n  | \"\uD83E\uDDD6\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD6\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD6\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD6\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD6\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD6\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD6\u200D\u2640\"\n  | \"\uD83E\uDDD7\uD83C\uDFFB\"\n  | \"\uD83E\uDDD7\uD83C\uDFFC\"\n  | \"\uD83E\uDDD7\uD83C\uDFFD\"\n  | \"\uD83E\uDDD7\uD83C\uDFFE\"\n  | \"\uD83E\uDDD7\uD83C\uDFFF\"\n  | \"\uD83E\uDDD7\"\n  | \"\uD83E\uDDD7\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD7\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD7\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD7\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD7\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD7\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD7\u200D\u2642\"\n  | \"\uD83E\uDDD7\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD7\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD7\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD7\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD7\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD7\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD7\u200D\u2640\"\n  | \"\uD83E\uDD3A\"\n  | \"\uD83C\uDFC7\uD83C\uDFFB\"\n  | \"\uD83C\uDFC7\uD83C\uDFFC\"\n  | \"\uD83C\uDFC7\uD83C\uDFFD\"\n  | \"\uD83C\uDFC7\uD83C\uDFFE\"\n  | \"\uD83C\uDFC7\uD83C\uDFFF\"\n  | \"\uD83C\uDFC7\"\n  | \"\u26F7\uFE0F\"\n  | \"\u26F7\"\n  | \"\uD83C\uDFC2\uD83C\uDFFB\"\n  | \"\uD83C\uDFC2\uD83C\uDFFC\"\n  | \"\uD83C\uDFC2\uD83C\uDFFD\"\n  | \"\uD83C\uDFC2\uD83C\uDFFE\"\n  | \"\uD83C\uDFC2\uD83C\uDFFF\"\n  | \"\uD83C\uDFC2\"\n  | \"\uD83C\uDFCC\uD83C\uDFFB\"\n  | \"\uD83C\uDFCC\uD83C\uDFFC\"\n  | \"\uD83C\uDFCC\uD83C\uDFFD\"\n  | \"\uD83C\uDFCC\uD83C\uDFFE\"\n  | \"\uD83C\uDFCC\uD83C\uDFFF\"\n  | \"\uD83C\uDFCC\uFE0F\"\n  | \"\uD83C\uDFCC\"\n  | \"\uD83C\uDFCC\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCC\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCC\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCC\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCC\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCC\uFE0F\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCC\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCC\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCC\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCC\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCC\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCC\uFE0F\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC4\uD83C\uDFFB\"\n  | \"\uD83C\uDFC4\uD83C\uDFFC\"\n  | \"\uD83C\uDFC4\uD83C\uDFFD\"\n  | \"\uD83C\uDFC4\uD83C\uDFFE\"\n  | \"\uD83C\uDFC4\uD83C\uDFFF\"\n  | \"\uD83C\uDFC4\"\n  | \"\uD83C\uDFC4\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC4\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC4\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC4\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC4\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC4\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFC4\u200D\u2642\"\n  | \"\uD83C\uDFC4\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC4\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC4\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC4\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC4\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC4\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFC4\u200D\u2640\"\n  | \"\uD83D\uDEA3\uD83C\uDFFB\"\n  | \"\uD83D\uDEA3\uD83C\uDFFC\"\n  | \"\uD83D\uDEA3\uD83C\uDFFD\"\n  | \"\uD83D\uDEA3\uD83C\uDFFE\"\n  | \"\uD83D\uDEA3\uD83C\uDFFF\"\n  | \"\uD83D\uDEA3\"\n  | \"\uD83D\uDEA3\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEA3\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEA3\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEA3\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEA3\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEA3\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEA3\u200D\u2642\"\n  | \"\uD83D\uDEA3\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEA3\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEA3\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEA3\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEA3\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEA3\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEA3\u200D\u2640\"\n  | \"\uD83C\uDFCA\uD83C\uDFFB\"\n  | \"\uD83C\uDFCA\uD83C\uDFFC\"\n  | \"\uD83C\uDFCA\uD83C\uDFFD\"\n  | \"\uD83C\uDFCA\uD83C\uDFFE\"\n  | \"\uD83C\uDFCA\uD83C\uDFFF\"\n  | \"\uD83C\uDFCA\"\n  | \"\uD83C\uDFCA\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCA\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCA\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCA\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCA\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCA\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCA\u200D\u2642\"\n  | \"\uD83C\uDFCA\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCA\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCA\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCA\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCA\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCA\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCA\u200D\u2640\"\n  | \"\u26F9\uD83C\uDFFB\"\n  | \"\u26F9\uD83C\uDFFC\"\n  | \"\u26F9\uD83C\uDFFD\"\n  | \"\u26F9\uD83C\uDFFE\"\n  | \"\u26F9\uD83C\uDFFF\"\n  | \"\u26F9\uFE0F\"\n  | \"\u26F9\"\n  | \"\u26F9\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\u26F9\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\u26F9\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\u26F9\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\u26F9\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\u26F9\uFE0F\u200D\u2642\uFE0F\"\n  | \"\u26F9\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\u26F9\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\u26F9\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\u26F9\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\u26F9\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\u26F9\uFE0F\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCB\uD83C\uDFFB\"\n  | \"\uD83C\uDFCB\uD83C\uDFFC\"\n  | \"\uD83C\uDFCB\uD83C\uDFFD\"\n  | \"\uD83C\uDFCB\uD83C\uDFFE\"\n  | \"\uD83C\uDFCB\uD83C\uDFFF\"\n  | \"\uD83C\uDFCB\uFE0F\"\n  | \"\uD83C\uDFCB\"\n  | \"\uD83C\uDFCB\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCB\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCB\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCB\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCB\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCB\uFE0F\u200D\u2642\uFE0F\"\n  | \"\uD83C\uDFCB\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCB\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCB\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCB\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCB\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83C\uDFCB\uFE0F\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB4\uD83C\uDFFB\"\n  | \"\uD83D\uDEB4\uD83C\uDFFC\"\n  | \"\uD83D\uDEB4\uD83C\uDFFD\"\n  | \"\uD83D\uDEB4\uD83C\uDFFE\"\n  | \"\uD83D\uDEB4\uD83C\uDFFF\"\n  | \"\uD83D\uDEB4\"\n  | \"\uD83D\uDEB4\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB4\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB4\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB4\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB4\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB4\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB4\u200D\u2642\"\n  | \"\uD83D\uDEB4\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB4\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB4\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB4\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB4\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB4\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB4\u200D\u2640\"\n  | \"\uD83D\uDEB5\uD83C\uDFFB\"\n  | \"\uD83D\uDEB5\uD83C\uDFFC\"\n  | \"\uD83D\uDEB5\uD83C\uDFFD\"\n  | \"\uD83D\uDEB5\uD83C\uDFFE\"\n  | \"\uD83D\uDEB5\uD83C\uDFFF\"\n  | \"\uD83D\uDEB5\"\n  | \"\uD83D\uDEB5\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB5\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB5\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB5\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB5\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB5\u200D\u2642\uFE0F\"\n  | \"\uD83D\uDEB5\u200D\u2642\"\n  | \"\uD83D\uDEB5\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB5\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB5\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB5\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB5\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB5\u200D\u2640\uFE0F\"\n  | \"\uD83D\uDEB5\u200D\u2640\"\n  | \"\uD83E\uDD38\uD83C\uDFFB\"\n  | \"\uD83E\uDD38\uD83C\uDFFC\"\n  | \"\uD83E\uDD38\uD83C\uDFFD\"\n  | \"\uD83E\uDD38\uD83C\uDFFE\"\n  | \"\uD83E\uDD38\uD83C\uDFFF\"\n  | \"\uD83E\uDD38\"\n  | \"\uD83E\uDD38\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD38\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD38\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD38\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD38\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD38\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD38\u200D\u2642\"\n  | \"\uD83E\uDD38\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD38\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD38\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD38\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD38\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD38\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD38\u200D\u2640\"\n  | \"\uD83E\uDD3C\"\n  | \"\uD83E\uDD3C\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3C\u200D\u2642\"\n  | \"\uD83E\uDD3C\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3C\u200D\u2640\"\n  | \"\uD83E\uDD3D\uD83C\uDFFB\"\n  | \"\uD83E\uDD3D\uD83C\uDFFC\"\n  | \"\uD83E\uDD3D\uD83C\uDFFD\"\n  | \"\uD83E\uDD3D\uD83C\uDFFE\"\n  | \"\uD83E\uDD3D\uD83C\uDFFF\"\n  | \"\uD83E\uDD3D\"\n  | \"\uD83E\uDD3D\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3D\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3D\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3D\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3D\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3D\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3D\u200D\u2642\"\n  | \"\uD83E\uDD3D\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3D\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3D\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3D\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3D\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3D\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3D\u200D\u2640\"\n  | \"\uD83E\uDD3E\uD83C\uDFFB\"\n  | \"\uD83E\uDD3E\uD83C\uDFFC\"\n  | \"\uD83E\uDD3E\uD83C\uDFFD\"\n  | \"\uD83E\uDD3E\uD83C\uDFFE\"\n  | \"\uD83E\uDD3E\uD83C\uDFFF\"\n  | \"\uD83E\uDD3E\"\n  | \"\uD83E\uDD3E\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3E\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3E\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3E\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3E\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3E\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD3E\u200D\u2642\"\n  | \"\uD83E\uDD3E\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3E\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3E\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3E\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3E\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3E\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD3E\u200D\u2640\"\n  | \"\uD83E\uDD39\uD83C\uDFFB\"\n  | \"\uD83E\uDD39\uD83C\uDFFC\"\n  | \"\uD83E\uDD39\uD83C\uDFFD\"\n  | \"\uD83E\uDD39\uD83C\uDFFE\"\n  | \"\uD83E\uDD39\uD83C\uDFFF\"\n  | \"\uD83E\uDD39\"\n  | \"\uD83E\uDD39\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD39\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD39\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD39\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD39\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD39\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDD39\u200D\u2642\"\n  | \"\uD83E\uDD39\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD39\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD39\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD39\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD39\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD39\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDD39\u200D\u2640\"\n  | \"\uD83E\uDDD8\uD83C\uDFFB\"\n  | \"\uD83E\uDDD8\uD83C\uDFFC\"\n  | \"\uD83E\uDDD8\uD83C\uDFFD\"\n  | \"\uD83E\uDDD8\uD83C\uDFFE\"\n  | \"\uD83E\uDDD8\uD83C\uDFFF\"\n  | \"\uD83E\uDDD8\"\n  | \"\uD83E\uDDD8\uD83C\uDFFB\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD8\uD83C\uDFFC\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD8\uD83C\uDFFD\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD8\uD83C\uDFFE\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD8\uD83C\uDFFF\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD8\u200D\u2642\uFE0F\"\n  | \"\uD83E\uDDD8\u200D\u2642\"\n  | \"\uD83E\uDDD8\uD83C\uDFFB\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD8\uD83C\uDFFC\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD8\uD83C\uDFFD\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD8\uD83C\uDFFE\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD8\uD83C\uDFFF\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD8\u200D\u2640\uFE0F\"\n  | \"\uD83E\uDDD8\u200D\u2640\"\n  | \"\uD83D\uDEC0\uD83C\uDFFB\"\n  | \"\uD83D\uDEC0\uD83C\uDFFC\"\n  | \"\uD83D\uDEC0\uD83C\uDFFD\"\n  | \"\uD83D\uDEC0\uD83C\uDFFE\"\n  | \"\uD83D\uDEC0\uD83C\uDFFF\"\n  | \"\uD83D\uDEC0\"\n  | \"\uD83D\uDECC\uD83C\uDFFB\"\n  | \"\uD83D\uDECC\uD83C\uDFFC\"\n  | \"\uD83D\uDECC\uD83C\uDFFD\"\n  | \"\uD83D\uDECC\uD83C\uDFFE\"\n  | \"\uD83D\uDECC\uD83C\uDFFF\"\n  | \"\uD83D\uDECC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFD\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFE\"\n  | \"\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFF\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFD\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFE\"\n  | \"\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFF\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFD\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFE\"\n  | \"\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFF\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFD\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFE\"\n  | \"\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFF\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFB\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFC\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFD\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFE\"\n  | \"\uD83E\uDDD1\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\uD83C\uDFFF\"\n  | \"\uD83E\uDDD1\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1\"\n  | \"\uD83D\uDC6D\"\n  | \"\uD83D\uDC6B\"\n  | \"\uD83D\uDC6C\"\n  | \"\uD83D\uDC8F\"\n  | \"\uD83D\uDC91\"\n  | \"\uD83D\uDC6A\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC66\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC67\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC66\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC67\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC67\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDC67\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66\"\n  | \"\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67\"\n  | \"\uD83D\uDDE3\uFE0F\"\n  | \"\uD83D\uDDE3\"\n  | \"\uD83D\uDC64\"\n  | \"\uD83D\uDC65\"\n  | \"\uD83E\uDEC2\"\n  | \"\uD83D\uDC63\"\n  | \"\uD83D\uDC35\"\n  | \"\uD83D\uDC12\"\n  | \"\uD83E\uDD8D\"\n  | \"\uD83E\uDDA7\"\n  | \"\uD83D\uDC36\"\n  | \"\uD83D\uDC15\"\n  | \"\uD83E\uDDAE\"\n  | \"\uD83D\uDC15\u200D\uD83E\uDDBA\"\n  | \"\uD83D\uDC29\"\n  | \"\uD83D\uDC3A\"\n  | \"\uD83E\uDD8A\"\n  | \"\uD83E\uDD9D\"\n  | \"\uD83D\uDC31\"\n  | \"\uD83D\uDC08\"\n  | \"\uD83D\uDC08\u200D\u2B1B\"\n  | \"\uD83E\uDD81\"\n  | \"\uD83D\uDC2F\"\n  | \"\uD83D\uDC05\"\n  | \"\uD83D\uDC06\"\n  | \"\uD83D\uDC34\"\n  | \"\uD83D\uDC0E\"\n  | \"\uD83E\uDD84\"\n  | \"\uD83E\uDD93\"\n  | \"\uD83E\uDD8C\"\n  | \"\uD83E\uDDAC\"\n  | \"\uD83D\uDC2E\"\n  | \"\uD83D\uDC02\"\n  | \"\uD83D\uDC03\"\n  | \"\uD83D\uDC04\"\n  | \"\uD83D\uDC37\"\n  | \"\uD83D\uDC16\"\n  | \"\uD83D\uDC17\"\n  | \"\uD83D\uDC3D\"\n  | \"\uD83D\uDC0F\"\n  | \"\uD83D\uDC11\"\n  | \"\uD83D\uDC10\"\n  | \"\uD83D\uDC2A\"\n  | \"\uD83D\uDC2B\"\n  | \"\uD83E\uDD99\"\n  | \"\uD83E\uDD92\"\n  | \"\uD83D\uDC18\"\n  | \"\uD83E\uDDA3\"\n  | \"\uD83E\uDD8F\"\n  | \"\uD83E\uDD9B\"\n  | \"\uD83D\uDC2D\"\n  | \"\uD83D\uDC01\"\n  | \"\uD83D\uDC00\"\n  | \"\uD83D\uDC39\"\n  | \"\uD83D\uDC30\"\n  | \"\uD83D\uDC07\"\n  | \"\uD83D\uDC3F\uFE0F\"\n  | \"\uD83D\uDC3F\"\n  | \"\uD83E\uDDAB\"\n  | \"\uD83E\uDD94\"\n  | \"\uD83E\uDD87\"\n  | \"\uD83D\uDC3B\"\n  | \"\uD83D\uDC3B\u200D\u2744\uFE0F\"\n  | \"\uD83D\uDC3B\u200D\u2744\"\n  | \"\uD83D\uDC28\"\n  | \"\uD83D\uDC3C\"\n  | \"\uD83E\uDDA5\"\n  | \"\uD83E\uDDA6\"\n  | \"\uD83E\uDDA8\"\n  | \"\uD83E\uDD98\"\n  | \"\uD83E\uDDA1\"\n  | \"\uD83D\uDC3E\"\n  | \"\uD83E\uDD83\"\n  | \"\uD83D\uDC14\"\n  | \"\uD83D\uDC13\"\n  | \"\uD83D\uDC23\"\n  | \"\uD83D\uDC24\"\n  | \"\uD83D\uDC25\"\n  | \"\uD83D\uDC26\"\n  | \"\uD83D\uDC27\"\n  | \"\uD83D\uDD4A\uFE0F\"\n  | \"\uD83D\uDD4A\"\n  | \"\uD83E\uDD85\"\n  | \"\uD83E\uDD86\"\n  | \"\uD83E\uDDA2\"\n  | \"\uD83E\uDD89\"\n  | \"\uD83E\uDDA4\"\n  | \"\uD83E\uDEB6\"\n  | \"\uD83E\uDDA9\"\n  | \"\uD83E\uDD9A\"\n  | \"\uD83E\uDD9C\"\n  | \"\uD83D\uDC38\"\n  | \"\uD83D\uDC0A\"\n  | \"\uD83D\uDC22\"\n  | \"\uD83E\uDD8E\"\n  | \"\uD83D\uDC0D\"\n  | \"\uD83D\uDC32\"\n  | \"\uD83D\uDC09\"\n  | \"\uD83E\uDD95\"\n  | \"\uD83E\uDD96\"\n  | \"\uD83D\uDC33\"\n  | \"\uD83D\uDC0B\"\n  | \"\uD83D\uDC2C\"\n  | \"\uD83E\uDDAD\"\n  | \"\uD83D\uDC1F\"\n  | \"\uD83D\uDC20\"\n  | \"\uD83D\uDC21\"\n  | \"\uD83E\uDD88\"\n  | \"\uD83D\uDC19\"\n  | \"\uD83D\uDC1A\"\n  | \"\uD83D\uDC0C\"\n  | \"\uD83E\uDD8B\"\n  | \"\uD83D\uDC1B\"\n  | \"\uD83D\uDC1C\"\n  | \"\uD83D\uDC1D\"\n  | \"\uD83E\uDEB2\"\n  | \"\uD83D\uDC1E\"\n  | \"\uD83E\uDD97\"\n  | \"\uD83E\uDEB3\"\n  | \"\uD83D\uDD77\uFE0F\"\n  | \"\uD83D\uDD77\"\n  | \"\uD83D\uDD78\uFE0F\"\n  | \"\uD83D\uDD78\"\n  | \"\uD83E\uDD82\"\n  | \"\uD83E\uDD9F\"\n  | \"\uD83E\uDEB0\"\n  | \"\uD83E\uDEB1\"\n  | \"\uD83E\uDDA0\"\n  | \"\uD83D\uDC90\"\n  | \"\uD83C\uDF38\"\n  | \"\uD83D\uDCAE\"\n  | \"\uD83C\uDFF5\uFE0F\"\n  | \"\uD83C\uDFF5\"\n  | \"\uD83C\uDF39\"\n  | \"\uD83E\uDD40\"\n  | \"\uD83C\uDF3A\"\n  | \"\uD83C\uDF3B\"\n  | \"\uD83C\uDF3C\"\n  | \"\uD83C\uDF37\"\n  | \"\uD83C\uDF31\"\n  | \"\uD83E\uDEB4\"\n  | \"\uD83C\uDF32\"\n  | \"\uD83C\uDF33\"\n  | \"\uD83C\uDF34\"\n  | \"\uD83C\uDF35\"\n  | \"\uD83C\uDF3E\"\n  | \"\uD83C\uDF3F\"\n  | \"\u2618\uFE0F\"\n  | \"\u2618\"\n  | \"\uD83C\uDF40\"\n  | \"\uD83C\uDF41\"\n  | \"\uD83C\uDF42\"\n  | \"\uD83C\uDF43\"\n  | \"\uD83C\uDF47\"\n  | \"\uD83C\uDF48\"\n  | \"\uD83C\uDF49\"\n  | \"\uD83C\uDF4A\"\n  | \"\uD83C\uDF4B\"\n  | \"\uD83C\uDF4C\"\n  | \"\uD83C\uDF4D\"\n  | \"\uD83E\uDD6D\"\n  | \"\uD83C\uDF4E\"\n  | \"\uD83C\uDF4F\"\n  | \"\uD83C\uDF50\"\n  | \"\uD83C\uDF51\"\n  | \"\uD83C\uDF52\"\n  | \"\uD83C\uDF53\"\n  | \"\uD83E\uDED0\"\n  | \"\uD83E\uDD5D\"\n  | \"\uD83C\uDF45\"\n  | \"\uD83E\uDED2\"\n  | \"\uD83E\uDD65\"\n  | \"\uD83E\uDD51\"\n  | \"\uD83C\uDF46\"\n  | \"\uD83E\uDD54\"\n  | \"\uD83E\uDD55\"\n  | \"\uD83C\uDF3D\"\n  | \"\uD83C\uDF36\uFE0F\"\n  | \"\uD83C\uDF36\"\n  | \"\uD83E\uDED1\"\n  | \"\uD83E\uDD52\"\n  | \"\uD83E\uDD6C\"\n  | \"\uD83E\uDD66\"\n  | \"\uD83E\uDDC4\"\n  | \"\uD83E\uDDC5\"\n  | \"\uD83C\uDF44\"\n  | \"\uD83E\uDD5C\"\n  | \"\uD83C\uDF30\"\n  | \"\uD83C\uDF5E\"\n  | \"\uD83E\uDD50\"\n  | \"\uD83E\uDD56\"\n  | \"\uD83E\uDED3\"\n  | \"\uD83E\uDD68\"\n  | \"\uD83E\uDD6F\"\n  | \"\uD83E\uDD5E\"\n  | \"\uD83E\uDDC7\"\n  | \"\uD83E\uDDC0\"\n  | \"\uD83C\uDF56\"\n  | \"\uD83C\uDF57\"\n  | \"\uD83E\uDD69\"\n  | \"\uD83E\uDD53\"\n  | \"\uD83C\uDF54\"\n  | \"\uD83C\uDF5F\"\n  | \"\uD83C\uDF55\"\n  | \"\uD83C\uDF2D\"\n  | \"\uD83E\uDD6A\"\n  | \"\uD83C\uDF2E\"\n  | \"\uD83C\uDF2F\"\n  | \"\uD83E\uDED4\"\n  | \"\uD83E\uDD59\"\n  | \"\uD83E\uDDC6\"\n  | \"\uD83E\uDD5A\"\n  | \"\uD83C\uDF73\"\n  | \"\uD83E\uDD58\"\n  | \"\uD83C\uDF72\"\n  | \"\uD83E\uDED5\"\n  | \"\uD83E\uDD63\"\n  | \"\uD83E\uDD57\"\n  | \"\uD83C\uDF7F\"\n  | \"\uD83E\uDDC8\"\n  | \"\uD83E\uDDC2\"\n  | \"\uD83E\uDD6B\"\n  | \"\uD83C\uDF71\"\n  | \"\uD83C\uDF58\"\n  | \"\uD83C\uDF59\"\n  | \"\uD83C\uDF5A\"\n  | \"\uD83C\uDF5B\"\n  | \"\uD83C\uDF5C\"\n  | \"\uD83C\uDF5D\"\n  | \"\uD83C\uDF60\"\n  | \"\uD83C\uDF62\"\n  | \"\uD83C\uDF63\"\n  | \"\uD83C\uDF64\"\n  | \"\uD83C\uDF65\"\n  | \"\uD83E\uDD6E\"\n  | \"\uD83C\uDF61\"\n  | \"\uD83E\uDD5F\"\n  | \"\uD83E\uDD60\"\n  | \"\uD83E\uDD61\"\n  | \"\uD83E\uDD80\"\n  | \"\uD83E\uDD9E\"\n  | \"\uD83E\uDD90\"\n  | \"\uD83E\uDD91\"\n  | \"\uD83E\uDDAA\"\n  | \"\uD83C\uDF66\"\n  | \"\uD83C\uDF67\"\n  | \"\uD83C\uDF68\"\n  | \"\uD83C\uDF69\"\n  | \"\uD83C\uDF6A\"\n  | \"\uD83C\uDF82\"\n  | \"\uD83C\uDF70\"\n  | \"\uD83E\uDDC1\"\n  | \"\uD83E\uDD67\"\n  | \"\uD83C\uDF6B\"\n  | \"\uD83C\uDF6C\"\n  | \"\uD83C\uDF6D\"\n  | \"\uD83C\uDF6E\"\n  | \"\uD83C\uDF6F\"\n  | \"\uD83C\uDF7C\"\n  | \"\uD83E\uDD5B\"\n  | \"\u2615\"\n  | \"\uD83E\uDED6\"\n  | \"\uD83C\uDF75\"\n  | \"\uD83C\uDF76\"\n  | \"\uD83C\uDF7E\"\n  | \"\uD83C\uDF77\"\n  | \"\uD83C\uDF78\"\n  | \"\uD83C\uDF79\"\n  | \"\uD83C\uDF7A\"\n  | \"\uD83C\uDF7B\"\n  | \"\uD83E\uDD42\"\n  | \"\uD83E\uDD43\"\n  | \"\uD83E\uDD64\"\n  | \"\uD83E\uDDCB\"\n  | \"\uD83E\uDDC3\"\n  | \"\uD83E\uDDC9\"\n  | \"\uD83E\uDDCA\"\n  | \"\uD83E\uDD62\"\n  | \"\uD83C\uDF7D\uFE0F\"\n  | \"\uD83C\uDF7D\"\n  | \"\uD83C\uDF74\"\n  | \"\uD83E\uDD44\"\n  | \"\uD83D\uDD2A\"\n  | \"\uD83C\uDFFA\"\n  | \"\uD83C\uDF0D\"\n  | \"\uD83C\uDF0E\"\n  | \"\uD83C\uDF0F\"\n  | \"\uD83C\uDF10\"\n  | \"\uD83D\uDDFA\uFE0F\"\n  | \"\uD83D\uDDFA\"\n  | \"\uD83D\uDDFE\"\n  | \"\uD83E\uDDED\"\n  | \"\uD83C\uDFD4\uFE0F\"\n  | \"\uD83C\uDFD4\"\n  | \"\u26F0\uFE0F\"\n  | \"\u26F0\"\n  | \"\uD83C\uDF0B\"\n  | \"\uD83D\uDDFB\"\n  | \"\uD83C\uDFD5\uFE0F\"\n  | \"\uD83C\uDFD5\"\n  | \"\uD83C\uDFD6\uFE0F\"\n  | \"\uD83C\uDFD6\"\n  | \"\uD83C\uDFDC\uFE0F\"\n  | \"\uD83C\uDFDC\"\n  | \"\uD83C\uDFDD\uFE0F\"\n  | \"\uD83C\uDFDD\"\n  | \"\uD83C\uDFDE\uFE0F\"\n  | \"\uD83C\uDFDE\"\n  | \"\uD83C\uDFDF\uFE0F\"\n  | \"\uD83C\uDFDF\"\n  | \"\uD83C\uDFDB\uFE0F\"\n  | \"\uD83C\uDFDB\"\n  | \"\uD83C\uDFD7\uFE0F\"\n  | \"\uD83C\uDFD7\"\n  | \"\uD83E\uDDF1\"\n  | \"\uD83E\uDEA8\"\n  | \"\uD83E\uDEB5\"\n  | \"\uD83D\uDED6\"\n  | \"\uD83C\uDFD8\uFE0F\"\n  | \"\uD83C\uDFD8\"\n  | \"\uD83C\uDFDA\uFE0F\"\n  | \"\uD83C\uDFDA\"\n  | \"\uD83C\uDFE0\"\n  | \"\uD83C\uDFE1\"\n  | \"\uD83C\uDFE2\"\n  | \"\uD83C\uDFE3\"\n  | \"\uD83C\uDFE4\"\n  | \"\uD83C\uDFE5\"\n  | \"\uD83C\uDFE6\"\n  | \"\uD83C\uDFE8\"\n  | \"\uD83C\uDFE9\"\n  | \"\uD83C\uDFEA\"\n  | \"\uD83C\uDFEB\"\n  | \"\uD83C\uDFEC\"\n  | \"\uD83C\uDFED\"\n  | \"\uD83C\uDFEF\"\n  | \"\uD83C\uDFF0\"\n  | \"\uD83D\uDC92\"\n  | \"\uD83D\uDDFC\"\n  | \"\uD83D\uDDFD\"\n  | \"\u26EA\"\n  | \"\uD83D\uDD4C\"\n  | \"\uD83D\uDED5\"\n  | \"\uD83D\uDD4D\"\n  | \"\u26E9\uFE0F\"\n  | \"\u26E9\"\n  | \"\uD83D\uDD4B\"\n  | \"\u26F2\"\n  | \"\u26FA\"\n  | \"\uD83C\uDF01\"\n  | \"\uD83C\uDF03\"\n  | \"\uD83C\uDFD9\uFE0F\"\n  | \"\uD83C\uDFD9\"\n  | \"\uD83C\uDF04\"\n  | \"\uD83C\uDF05\"\n  | \"\uD83C\uDF06\"\n  | \"\uD83C\uDF07\"\n  | \"\uD83C\uDF09\"\n  | \"\u2668\uFE0F\"\n  | \"\u2668\"\n  | \"\uD83C\uDFA0\"\n  | \"\uD83C\uDFA1\"\n  | \"\uD83C\uDFA2\"\n  | \"\uD83D\uDC88\"\n  | \"\uD83C\uDFAA\"\n  | \"\uD83D\uDE82\"\n  | \"\uD83D\uDE83\"\n  | \"\uD83D\uDE84\"\n  | \"\uD83D\uDE85\"\n  | \"\uD83D\uDE86\"\n  | \"\uD83D\uDE87\"\n  | \"\uD83D\uDE88\"\n  | \"\uD83D\uDE89\"\n  | \"\uD83D\uDE8A\"\n  | \"\uD83D\uDE9D\"\n  | \"\uD83D\uDE9E\"\n  | \"\uD83D\uDE8B\"\n  | \"\uD83D\uDE8C\"\n  | \"\uD83D\uDE8D\"\n  | \"\uD83D\uDE8E\"\n  | \"\uD83D\uDE90\"\n  | \"\uD83D\uDE91\"\n  | \"\uD83D\uDE92\"\n  | \"\uD83D\uDE93\"\n  | \"\uD83D\uDE94\"\n  | \"\uD83D\uDE95\"\n  | \"\uD83D\uDE96\"\n  | \"\uD83D\uDE97\"\n  | \"\uD83D\uDE98\"\n  | \"\uD83D\uDE99\"\n  | \"\uD83D\uDEFB\"\n  | \"\uD83D\uDE9A\"\n  | \"\uD83D\uDE9B\"\n  | \"\uD83D\uDE9C\"\n  | \"\uD83C\uDFCE\uFE0F\"\n  | \"\uD83C\uDFCE\"\n  | \"\uD83C\uDFCD\uFE0F\"\n  | \"\uD83C\uDFCD\"\n  | \"\uD83D\uDEF5\"\n  | \"\uD83E\uDDBD\"\n  | \"\uD83E\uDDBC\"\n  | \"\uD83D\uDEFA\"\n  | \"\uD83D\uDEB2\"\n  | \"\uD83D\uDEF4\"\n  | \"\uD83D\uDEF9\"\n  | \"\uD83D\uDEFC\"\n  | \"\uD83D\uDE8F\"\n  | \"\uD83D\uDEE3\uFE0F\"\n  | \"\uD83D\uDEE3\"\n  | \"\uD83D\uDEE4\uFE0F\"\n  | \"\uD83D\uDEE4\"\n  | \"\uD83D\uDEE2\uFE0F\"\n  | \"\uD83D\uDEE2\"\n  | \"\u26FD\"\n  | \"\uD83D\uDEA8\"\n  | \"\uD83D\uDEA5\"\n  | \"\uD83D\uDEA6\"\n  | \"\uD83D\uDED1\"\n  | \"\uD83D\uDEA7\"\n  | \"\u2693\"\n  | \"\u26F5\"\n  | \"\uD83D\uDEF6\"\n  | \"\uD83D\uDEA4\"\n  | \"\uD83D\uDEF3\uFE0F\"\n  | \"\uD83D\uDEF3\"\n  | \"\u26F4\uFE0F\"\n  | \"\u26F4\"\n  | \"\uD83D\uDEE5\uFE0F\"\n  | \"\uD83D\uDEE5\"\n  | \"\uD83D\uDEA2\"\n  | \"\u2708\uFE0F\"\n  | \"\u2708\"\n  | \"\uD83D\uDEE9\uFE0F\"\n  | \"\uD83D\uDEE9\"\n  | \"\uD83D\uDEEB\"\n  | \"\uD83D\uDEEC\"\n  | \"\uD83E\uDE82\"\n  | \"\uD83D\uDCBA\"\n  | \"\uD83D\uDE81\"\n  | \"\uD83D\uDE9F\"\n  | \"\uD83D\uDEA0\"\n  | \"\uD83D\uDEA1\"\n  | \"\uD83D\uDEF0\uFE0F\"\n  | \"\uD83D\uDEF0\"\n  | \"\uD83D\uDE80\"\n  | \"\uD83D\uDEF8\"\n  | \"\uD83D\uDECE\uFE0F\"\n  | \"\uD83D\uDECE\"\n  | \"\uD83E\uDDF3\"\n  | \"\u231B\"\n  | \"\u23F3\"\n  | \"\u231A\"\n  | \"\u23F0\"\n  | \"\u23F1\uFE0F\"\n  | \"\u23F1\"\n  | \"\u23F2\uFE0F\"\n  | \"\u23F2\"\n  | \"\uD83D\uDD70\uFE0F\"\n  | \"\uD83D\uDD70\"\n  | \"\uD83D\uDD5B\"\n  | \"\uD83D\uDD67\"\n  | \"\uD83D\uDD50\"\n  | \"\uD83D\uDD5C\"\n  | \"\uD83D\uDD51\"\n  | \"\uD83D\uDD5D\"\n  | \"\uD83D\uDD52\"\n  | \"\uD83D\uDD5E\"\n  | \"\uD83D\uDD53\"\n  | \"\uD83D\uDD5F\"\n  | \"\uD83D\uDD54\"\n  | \"\uD83D\uDD60\"\n  | \"\uD83D\uDD55\"\n  | \"\uD83D\uDD61\"\n  | \"\uD83D\uDD56\"\n  | \"\uD83D\uDD62\"\n  | \"\uD83D\uDD57\"\n  | \"\uD83D\uDD63\"\n  | \"\uD83D\uDD58\"\n  | \"\uD83D\uDD64\"\n  | \"\uD83D\uDD59\"\n  | \"\uD83D\uDD65\"\n  | \"\uD83D\uDD5A\"\n  | \"\uD83D\uDD66\"\n  | \"\uD83C\uDF11\"\n  | \"\uD83C\uDF12\"\n  | \"\uD83C\uDF13\"\n  | \"\uD83C\uDF14\"\n  | \"\uD83C\uDF15\"\n  | \"\uD83C\uDF16\"\n  | \"\uD83C\uDF17\"\n  | \"\uD83C\uDF18\"\n  | \"\uD83C\uDF19\"\n  | \"\uD83C\uDF1A\"\n  | \"\uD83C\uDF1B\"\n  | \"\uD83C\uDF1C\"\n  | \"\uD83C\uDF21\uFE0F\"\n  | \"\uD83C\uDF21\"\n  | \"\u2600\uFE0F\"\n  | \"\u2600\"\n  | \"\uD83C\uDF1D\"\n  | \"\uD83C\uDF1E\"\n  | \"\uD83E\uDE90\"\n  | \"\u2B50\"\n  | \"\uD83C\uDF1F\"\n  | \"\uD83C\uDF20\"\n  | \"\uD83C\uDF0C\"\n  | \"\u2601\uFE0F\"\n  | \"\u2601\"\n  | \"\u26C5\"\n  | \"\u26C8\uFE0F\"\n  | \"\u26C8\"\n  | \"\uD83C\uDF24\uFE0F\"\n  | \"\uD83C\uDF24\"\n  | \"\uD83C\uDF25\uFE0F\"\n  | \"\uD83C\uDF25\"\n  | \"\uD83C\uDF26\uFE0F\"\n  | \"\uD83C\uDF26\"\n  | \"\uD83C\uDF27\uFE0F\"\n  | \"\uD83C\uDF27\"\n  | \"\uD83C\uDF28\uFE0F\"\n  | \"\uD83C\uDF28\"\n  | \"\uD83C\uDF29\uFE0F\"\n  | \"\uD83C\uDF29\"\n  | \"\uD83C\uDF2A\uFE0F\"\n  | \"\uD83C\uDF2A\"\n  | \"\uD83C\uDF2B\uFE0F\"\n  | \"\uD83C\uDF2B\"\n  | \"\uD83C\uDF2C\uFE0F\"\n  | \"\uD83C\uDF2C\"\n  | \"\uD83C\uDF00\"\n  | \"\uD83C\uDF08\"\n  | \"\uD83C\uDF02\"\n  | \"\u2602\uFE0F\"\n  | \"\u2602\"\n  | \"\u2614\"\n  | \"\u26F1\uFE0F\"\n  | \"\u26F1\"\n  | \"\u26A1\"\n  | \"\u2744\uFE0F\"\n  | \"\u2744\"\n  | \"\u2603\uFE0F\"\n  | \"\u2603\"\n  | \"\u26C4\"\n  | \"\u2604\uFE0F\"\n  | \"\u2604\"\n  | \"\uD83D\uDD25\"\n  | \"\uD83D\uDCA7\"\n  | \"\uD83C\uDF0A\"\n  | \"\uD83C\uDF83\"\n  | \"\uD83C\uDF84\"\n  | \"\uD83C\uDF86\"\n  | \"\uD83C\uDF87\"\n  | \"\uD83E\uDDE8\"\n  | \"\u2728\"\n  | \"\uD83C\uDF88\"\n  | \"\uD83C\uDF89\"\n  | \"\uD83C\uDF8A\"\n  | \"\uD83C\uDF8B\"\n  | \"\uD83C\uDF8D\"\n  | \"\uD83C\uDF8E\"\n  | \"\uD83C\uDF8F\"\n  | \"\uD83C\uDF90\"\n  | \"\uD83C\uDF91\"\n  | \"\uD83E\uDDE7\"\n  | \"\uD83C\uDF80\"\n  | \"\uD83C\uDF81\"\n  | \"\uD83C\uDF97\uFE0F\"\n  | \"\uD83C\uDF97\"\n  | \"\uD83C\uDF9F\uFE0F\"\n  | \"\uD83C\uDF9F\"\n  | \"\uD83C\uDFAB\"\n  | \"\uD83C\uDF96\uFE0F\"\n  | \"\uD83C\uDF96\"\n  | \"\uD83C\uDFC6\"\n  | \"\uD83C\uDFC5\"\n  | \"\uD83E\uDD47\"\n  | \"\uD83E\uDD48\"\n  | \"\uD83E\uDD49\"\n  | \"\u26BD\"\n  | \"\u26BE\"\n  | \"\uD83E\uDD4E\"\n  | \"\uD83C\uDFC0\"\n  | \"\uD83C\uDFD0\"\n  | \"\uD83C\uDFC8\"\n  | \"\uD83C\uDFC9\"\n  | \"\uD83C\uDFBE\"\n  | \"\uD83E\uDD4F\"\n  | \"\uD83C\uDFB3\"\n  | \"\uD83C\uDFCF\"\n  | \"\uD83C\uDFD1\"\n  | \"\uD83C\uDFD2\"\n  | \"\uD83E\uDD4D\"\n  | \"\uD83C\uDFD3\"\n  | \"\uD83C\uDFF8\"\n  | \"\uD83E\uDD4A\"\n  | \"\uD83E\uDD4B\"\n  | \"\uD83E\uDD45\"\n  | \"\u26F3\"\n  | \"\u26F8\uFE0F\"\n  | \"\u26F8\"\n  | \"\uD83C\uDFA3\"\n  | \"\uD83E\uDD3F\"\n  | \"\uD83C\uDFBD\"\n  | \"\uD83C\uDFBF\"\n  | \"\uD83D\uDEF7\"\n  | \"\uD83E\uDD4C\"\n  | \"\uD83C\uDFAF\"\n  | \"\uD83E\uDE80\"\n  | \"\uD83E\uDE81\"\n  | \"\uD83C\uDFB1\"\n  | \"\uD83D\uDD2E\"\n  | \"\uD83E\uDE84\"\n  | \"\uD83E\uDDFF\"\n  | \"\uD83C\uDFAE\"\n  | \"\uD83D\uDD79\uFE0F\"\n  | \"\uD83D\uDD79\"\n  | \"\uD83C\uDFB0\"\n  | \"\uD83C\uDFB2\"\n  | \"\uD83E\uDDE9\"\n  | \"\uD83E\uDDF8\"\n  | \"\uD83E\uDE85\"\n  | \"\uD83E\uDE86\"\n  | \"\u2660\uFE0F\"\n  | \"\u2660\"\n  | \"\u2665\uFE0F\"\n  | \"\u2665\"\n  | \"\u2666\uFE0F\"\n  | \"\u2666\"\n  | \"\u2663\uFE0F\"\n  | \"\u2663\"\n  | \"\u265F\uFE0F\"\n  | \"\u265F\"\n  | \"\uD83C\uDCCF\"\n  | \"\uD83C\uDC04\"\n  | \"\uD83C\uDFB4\"\n  | \"\uD83C\uDFAD\"\n  | \"\uD83D\uDDBC\uFE0F\"\n  | \"\uD83D\uDDBC\"\n  | \"\uD83C\uDFA8\"\n  | \"\uD83E\uDDF5\"\n  | \"\uD83E\uDEA1\"\n  | \"\uD83E\uDDF6\"\n  | \"\uD83E\uDEA2\"\n  | \"\uD83D\uDC53\"\n  | \"\uD83D\uDD76\uFE0F\"\n  | \"\uD83D\uDD76\"\n  | \"\uD83E\uDD7D\"\n  | \"\uD83E\uDD7C\"\n  | \"\uD83E\uDDBA\"\n  | \"\uD83D\uDC54\"\n  | \"\uD83D\uDC55\"\n  | \"\uD83D\uDC56\"\n  | \"\uD83E\uDDE3\"\n  | \"\uD83E\uDDE4\"\n  | \"\uD83E\uDDE5\"\n  | \"\uD83E\uDDE6\"\n  | \"\uD83D\uDC57\"\n  | \"\uD83D\uDC58\"\n  | \"\uD83E\uDD7B\"\n  | \"\uD83E\uDE71\"\n  | \"\uD83E\uDE72\"\n  | \"\uD83E\uDE73\"\n  | \"\uD83D\uDC59\"\n  | \"\uD83D\uDC5A\"\n  | \"\uD83D\uDC5B\"\n  | \"\uD83D\uDC5C\"\n  | \"\uD83D\uDC5D\"\n  | \"\uD83D\uDECD\uFE0F\"\n  | \"\uD83D\uDECD\"\n  | \"\uD83C\uDF92\"\n  | \"\uD83E\uDE74\"\n  | \"\uD83D\uDC5E\"\n  | \"\uD83D\uDC5F\"\n  | \"\uD83E\uDD7E\"\n  | \"\uD83E\uDD7F\"\n  | \"\uD83D\uDC60\"\n  | \"\uD83D\uDC61\"\n  | \"\uD83E\uDE70\"\n  | \"\uD83D\uDC62\"\n  | \"\uD83D\uDC51\"\n  | \"\uD83D\uDC52\"\n  | \"\uD83C\uDFA9\"\n  | \"\uD83C\uDF93\"\n  | \"\uD83E\uDDE2\"\n  | \"\uD83E\uDE96\"\n  | \"\u26D1\uFE0F\"\n  | \"\u26D1\"\n  | \"\uD83D\uDCFF\"\n  | \"\uD83D\uDC84\"\n  | \"\uD83D\uDC8D\"\n  | \"\uD83D\uDC8E\"\n  | \"\uD83D\uDD07\"\n  | \"\uD83D\uDD08\"\n  | \"\uD83D\uDD09\"\n  | \"\uD83D\uDD0A\"\n  | \"\uD83D\uDCE2\"\n  | \"\uD83D\uDCE3\"\n  | \"\uD83D\uDCEF\"\n  | \"\uD83D\uDD14\"\n  | \"\uD83D\uDD15\"\n  | \"\uD83C\uDFBC\"\n  | \"\uD83C\uDFB5\"\n  | \"\uD83C\uDFB6\"\n  | \"\uD83C\uDF99\uFE0F\"\n  | \"\uD83C\uDF99\"\n  | \"\uD83C\uDF9A\uFE0F\"\n  | \"\uD83C\uDF9A\"\n  | \"\uD83C\uDF9B\uFE0F\"\n  | \"\uD83C\uDF9B\"\n  | \"\uD83C\uDFA4\"\n  | \"\uD83C\uDFA7\"\n  | \"\uD83D\uDCFB\"\n  | \"\uD83C\uDFB7\"\n  | \"\uD83E\uDE97\"\n  | \"\uD83C\uDFB8\"\n  | \"\uD83C\uDFB9\"\n  | \"\uD83C\uDFBA\"\n  | \"\uD83C\uDFBB\"\n  | \"\uD83E\uDE95\"\n  | \"\uD83E\uDD41\"\n  | \"\uD83E\uDE98\"\n  | \"\uD83D\uDCF1\"\n  | \"\uD83D\uDCF2\"\n  | \"\u260E\uFE0F\"\n  | \"\u260E\"\n  | \"\uD83D\uDCDE\"\n  | \"\uD83D\uDCDF\"\n  | \"\uD83D\uDCE0\"\n  | \"\uD83D\uDD0B\"\n  | \"\uD83D\uDD0C\"\n  | \"\uD83D\uDCBB\"\n  | \"\uD83D\uDDA5\uFE0F\"\n  | \"\uD83D\uDDA5\"\n  | \"\uD83D\uDDA8\uFE0F\"\n  | \"\uD83D\uDDA8\"\n  | \"\u2328\uFE0F\"\n  | \"\u2328\"\n  | \"\uD83D\uDDB1\uFE0F\"\n  | \"\uD83D\uDDB1\"\n  | \"\uD83D\uDDB2\uFE0F\"\n  | \"\uD83D\uDDB2\"\n  | \"\uD83D\uDCBD\"\n  | \"\uD83D\uDCBE\"\n  | \"\uD83D\uDCBF\"\n  | \"\uD83D\uDCC0\"\n  | \"\uD83E\uDDEE\"\n  | \"\uD83C\uDFA5\"\n  | \"\uD83C\uDF9E\uFE0F\"\n  | \"\uD83C\uDF9E\"\n  | \"\uD83D\uDCFD\uFE0F\"\n  | \"\uD83D\uDCFD\"\n  | \"\uD83C\uDFAC\"\n  | \"\uD83D\uDCFA\"\n  | \"\uD83D\uDCF7\"\n  | \"\uD83D\uDCF8\"\n  | \"\uD83D\uDCF9\"\n  | \"\uD83D\uDCFC\"\n  | \"\uD83D\uDD0D\"\n  | \"\uD83D\uDD0E\"\n  | \"\uD83D\uDD6F\uFE0F\"\n  | \"\uD83D\uDD6F\"\n  | \"\uD83D\uDCA1\"\n  | \"\uD83D\uDD26\"\n  | \"\uD83C\uDFEE\"\n  | \"\uD83E\uDE94\"\n  | \"\uD83D\uDCD4\"\n  | \"\uD83D\uDCD5\"\n  | \"\uD83D\uDCD6\"\n  | \"\uD83D\uDCD7\"\n  | \"\uD83D\uDCD8\"\n  | \"\uD83D\uDCD9\"\n  | \"\uD83D\uDCDA\"\n  | \"\uD83D\uDCD3\"\n  | \"\uD83D\uDCD2\"\n  | \"\uD83D\uDCC3\"\n  | \"\uD83D\uDCDC\"\n  | \"\uD83D\uDCC4\"\n  | \"\uD83D\uDCF0\"\n  | \"\uD83D\uDDDE\uFE0F\"\n  | \"\uD83D\uDDDE\"\n  | \"\uD83D\uDCD1\"\n  | \"\uD83D\uDD16\"\n  | \"\uD83C\uDFF7\uFE0F\"\n  | \"\uD83C\uDFF7\"\n  | \"\uD83D\uDCB0\"\n  | \"\uD83E\uDE99\"\n  | \"\uD83D\uDCB4\"\n  | \"\uD83D\uDCB5\"\n  | \"\uD83D\uDCB6\"\n  | \"\uD83D\uDCB7\"\n  | \"\uD83D\uDCB8\"\n  | \"\uD83D\uDCB3\"\n  | \"\uD83E\uDDFE\"\n  | \"\uD83D\uDCB9\"\n  | \"\u2709\uFE0F\"\n  | \"\u2709\"\n  | \"\uD83D\uDCE7\"\n  | \"\uD83D\uDCE8\"\n  | \"\uD83D\uDCE9\"\n  | \"\uD83D\uDCE4\"\n  | \"\uD83D\uDCE5\"\n  | \"\uD83D\uDCE6\"\n  | \"\uD83D\uDCEB\"\n  | \"\uD83D\uDCEA\"\n  | \"\uD83D\uDCEC\"\n  | \"\uD83D\uDCED\"\n  | \"\uD83D\uDCEE\"\n  | \"\uD83D\uDDF3\uFE0F\"\n  | \"\uD83D\uDDF3\"\n  | \"\u270F\uFE0F\"\n  | \"\u270F\"\n  | \"\u2712\uFE0F\"\n  | \"\u2712\"\n  | \"\uD83D\uDD8B\uFE0F\"\n  | \"\uD83D\uDD8B\"\n  | \"\uD83D\uDD8A\uFE0F\"\n  | \"\uD83D\uDD8A\"\n  | \"\uD83D\uDD8C\uFE0F\"\n  | \"\uD83D\uDD8C\"\n  | \"\uD83D\uDD8D\uFE0F\"\n  | \"\uD83D\uDD8D\"\n  | \"\uD83D\uDCDD\"\n  | \"\uD83D\uDCBC\"\n  | \"\uD83D\uDCC1\"\n  | \"\uD83D\uDCC2\"\n  | \"\uD83D\uDDC2\uFE0F\"\n  | \"\uD83D\uDDC2\"\n  | \"\uD83D\uDCC5\"\n  | \"\uD83D\uDCC6\"\n  | \"\uD83D\uDDD2\uFE0F\"\n  | \"\uD83D\uDDD2\"\n  | \"\uD83D\uDDD3\uFE0F\"\n  | \"\uD83D\uDDD3\"\n  | \"\uD83D\uDCC7\"\n  | \"\uD83D\uDCC8\"\n  | \"\uD83D\uDCC9\"\n  | \"\uD83D\uDCCA\"\n  | \"\uD83D\uDCCB\"\n  | \"\uD83D\uDCCC\"\n  | \"\uD83D\uDCCD\"\n  | \"\uD83D\uDCCE\"\n  | \"\uD83D\uDD87\uFE0F\"\n  | \"\uD83D\uDD87\"\n  | \"\uD83D\uDCCF\"\n  | \"\uD83D\uDCD0\"\n  | \"\u2702\uFE0F\"\n  | \"\u2702\"\n  | \"\uD83D\uDDC3\uFE0F\"\n  | \"\uD83D\uDDC3\"\n  | \"\uD83D\uDDC4\uFE0F\"\n  | \"\uD83D\uDDC4\"\n  | \"\uD83D\uDDD1\uFE0F\"\n  | \"\uD83D\uDDD1\"\n  | \"\uD83D\uDD12\"\n  | \"\uD83D\uDD13\"\n  | \"\uD83D\uDD0F\"\n  | \"\uD83D\uDD10\"\n  | \"\uD83D\uDD11\"\n  | \"\uD83D\uDDDD\uFE0F\"\n  | \"\uD83D\uDDDD\"\n  | \"\uD83D\uDD28\"\n  | \"\uD83E\uDE93\"\n  | \"\u26CF\uFE0F\"\n  | \"\u26CF\"\n  | \"\u2692\uFE0F\"\n  | \"\u2692\"\n  | \"\uD83D\uDEE0\uFE0F\"\n  | \"\uD83D\uDEE0\"\n  | \"\uD83D\uDDE1\uFE0F\"\n  | \"\uD83D\uDDE1\"\n  | \"\u2694\uFE0F\"\n  | \"\u2694\"\n  | \"\uD83D\uDD2B\"\n  | \"\uD83E\uDE83\"\n  | \"\uD83C\uDFF9\"\n  | \"\uD83D\uDEE1\uFE0F\"\n  | \"\uD83D\uDEE1\"\n  | \"\uD83E\uDE9A\"\n  | \"\uD83D\uDD27\"\n  | \"\uD83E\uDE9B\"\n  | \"\uD83D\uDD29\"\n  | \"\u2699\uFE0F\"\n  | \"\u2699\"\n  | \"\uD83D\uDDDC\uFE0F\"\n  | \"\uD83D\uDDDC\"\n  | \"\u2696\uFE0F\"\n  | \"\u2696\"\n  | \"\uD83E\uDDAF\"\n  | \"\uD83D\uDD17\"\n  | \"\u26D3\uFE0F\"\n  | \"\u26D3\"\n  | \"\uD83E\uDE9D\"\n  | \"\uD83E\uDDF0\"\n  | \"\uD83E\uDDF2\"\n  | \"\uD83E\uDE9C\"\n  | \"\u2697\uFE0F\"\n  | \"\u2697\"\n  | \"\uD83E\uDDEA\"\n  | \"\uD83E\uDDEB\"\n  | \"\uD83E\uDDEC\"\n  | \"\uD83D\uDD2C\"\n  | \"\uD83D\uDD2D\"\n  | \"\uD83D\uDCE1\"\n  | \"\uD83D\uDC89\"\n  | \"\uD83E\uDE78\"\n  | \"\uD83D\uDC8A\"\n  | \"\uD83E\uDE79\"\n  | \"\uD83E\uDE7A\"\n  | \"\uD83D\uDEAA\"\n  | \"\uD83D\uDED7\"\n  | \"\uD83E\uDE9E\"\n  | \"\uD83E\uDE9F\"\n  | \"\uD83D\uDECF\uFE0F\"\n  | \"\uD83D\uDECF\"\n  | \"\uD83D\uDECB\uFE0F\"\n  | \"\uD83D\uDECB\"\n  | \"\uD83E\uDE91\"\n  | \"\uD83D\uDEBD\"\n  | \"\uD83E\uDEA0\"\n  | \"\uD83D\uDEBF\"\n  | \"\uD83D\uDEC1\"\n  | \"\uD83E\uDEA4\"\n  | \"\uD83E\uDE92\"\n  | \"\uD83E\uDDF4\"\n  | \"\uD83E\uDDF7\"\n  | \"\uD83E\uDDF9\"\n  | \"\uD83E\uDDFA\"\n  | \"\uD83E\uDDFB\"\n  | \"\uD83E\uDEA3\"\n  | \"\uD83E\uDDFC\"\n  | \"\uD83E\uDEA5\"\n  | \"\uD83E\uDDFD\"\n  | \"\uD83E\uDDEF\"\n  | \"\uD83D\uDED2\"\n  | \"\uD83D\uDEAC\"\n  | \"\u26B0\uFE0F\"\n  | \"\u26B0\"\n  | \"\uD83E\uDEA6\"\n  | \"\u26B1\uFE0F\"\n  | \"\u26B1\"\n  | \"\uD83D\uDDFF\"\n  | \"\uD83E\uDEA7\"\n  | \"\uD83C\uDFE7\"\n  | \"\uD83D\uDEAE\"\n  | \"\uD83D\uDEB0\"\n  | \"\u267F\"\n  | \"\uD83D\uDEB9\"\n  | \"\uD83D\uDEBA\"\n  | \"\uD83D\uDEBB\"\n  | \"\uD83D\uDEBC\"\n  | \"\uD83D\uDEBE\"\n  | \"\uD83D\uDEC2\"\n  | \"\uD83D\uDEC3\"\n  | \"\uD83D\uDEC4\"\n  | \"\uD83D\uDEC5\"\n  | \"\u26A0\uFE0F\"\n  | \"\u26A0\"\n  | \"\uD83D\uDEB8\"\n  | \"\u26D4\"\n  | \"\uD83D\uDEAB\"\n  | \"\uD83D\uDEB3\"\n  | \"\uD83D\uDEAD\"\n  | \"\uD83D\uDEAF\"\n  | \"\uD83D\uDEB1\"\n  | \"\uD83D\uDEB7\"\n  | \"\uD83D\uDCF5\"\n  | \"\uD83D\uDD1E\"\n  | \"\u2622\uFE0F\"\n  | \"\u2622\"\n  | \"\u2623\uFE0F\"\n  | \"\u2623\"\n  | \"\u2B06\uFE0F\"\n  | \"\u2B06\"\n  | \"\u2197\uFE0F\"\n  | \"\u2197\"\n  | \"\u27A1\uFE0F\"\n  | \"\u27A1\"\n  | \"\u2198\uFE0F\"\n  | \"\u2198\"\n  | \"\u2B07\uFE0F\"\n  | \"\u2B07\"\n  | \"\u2199\uFE0F\"\n  | \"\u2199\"\n  | \"\u2B05\uFE0F\"\n  | \"\u2B05\"\n  | \"\u2196\uFE0F\"\n  | \"\u2196\"\n  | \"\u2195\uFE0F\"\n  | \"\u2195\"\n  | \"\u2194\uFE0F\"\n  | \"\u2194\"\n  | \"\u21A9\uFE0F\"\n  | \"\u21A9\"\n  | \"\u21AA\uFE0F\"\n  | \"\u21AA\"\n  | \"\u2934\uFE0F\"\n  | \"\u2934\"\n  | \"\u2935\uFE0F\"\n  | \"\u2935\"\n  | \"\uD83D\uDD03\"\n  | \"\uD83D\uDD04\"\n  | \"\uD83D\uDD19\"\n  | \"\uD83D\uDD1A\"\n  | \"\uD83D\uDD1B\"\n  | \"\uD83D\uDD1C\"\n  | \"\uD83D\uDD1D\"\n  | \"\uD83D\uDED0\"\n  | \"\u269B\uFE0F\"\n  | \"\u269B\"\n  | \"\uD83D\uDD49\uFE0F\"\n  | \"\uD83D\uDD49\"\n  | \"\u2721\uFE0F\"\n  | \"\u2721\"\n  | \"\u2638\uFE0F\"\n  | \"\u2638\"\n  | \"\u262F\uFE0F\"\n  | \"\u262F\"\n  | \"\u271D\uFE0F\"\n  | \"\u271D\"\n  | \"\u2626\uFE0F\"\n  | \"\u2626\"\n  | \"\u262A\uFE0F\"\n  | \"\u262A\"\n  | \"\u262E\uFE0F\"\n  | \"\u262E\"\n  | \"\uD83D\uDD4E\"\n  | \"\uD83D\uDD2F\"\n  | \"\u2648\"\n  | \"\u2649\"\n  | \"\u264A\"\n  | \"\u264B\"\n  | \"\u264C\"\n  | \"\u264D\"\n  | \"\u264E\"\n  | \"\u264F\"\n  | \"\u2650\"\n  | \"\u2651\"\n  | \"\u2652\"\n  | \"\u2653\"\n  | \"\u26CE\"\n  | \"\uD83D\uDD00\"\n  | \"\uD83D\uDD01\"\n  | \"\uD83D\uDD02\"\n  | \"\u25B6\uFE0F\"\n  | \"\u25B6\"\n  | \"\u23E9\"\n  | \"\u23ED\uFE0F\"\n  | \"\u23ED\"\n  | \"\u23EF\uFE0F\"\n  | \"\u23EF\"\n  | \"\u25C0\uFE0F\"\n  | \"\u25C0\"\n  | \"\u23EA\"\n  | \"\u23EE\uFE0F\"\n  | \"\u23EE\"\n  | \"\uD83D\uDD3C\"\n  | \"\u23EB\"\n  | \"\uD83D\uDD3D\"\n  | \"\u23EC\"\n  | \"\u23F8\uFE0F\"\n  | \"\u23F8\"\n  | \"\u23F9\uFE0F\"\n  | \"\u23F9\"\n  | \"\u23FA\uFE0F\"\n  | \"\u23FA\"\n  | \"\u23CF\uFE0F\"\n  | \"\u23CF\"\n  | \"\uD83C\uDFA6\"\n  | \"\uD83D\uDD05\"\n  | \"\uD83D\uDD06\"\n  | \"\uD83D\uDCF6\"\n  | \"\uD83D\uDCF3\"\n  | \"\uD83D\uDCF4\"\n  | \"\u2640\uFE0F\"\n  | \"\u2640\"\n  | \"\u2642\uFE0F\"\n  | \"\u2642\"\n  | \"\u26A7\uFE0F\"\n  | \"\u26A7\"\n  | \"\u2716\uFE0F\"\n  | \"\u2716\"\n  | \"\u2795\"\n  | \"\u2796\"\n  | \"\u2797\"\n  | \"\u267E\uFE0F\"\n  | \"\u267E\"\n  | \"\u203C\uFE0F\"\n  | \"\u203C\"\n  | \"\u2049\uFE0F\"\n  | \"\u2049\"\n  | \"\u2753\"\n  | \"\u2754\"\n  | \"\u2755\"\n  | \"\u2757\"\n  | \"\u3030\uFE0F\"\n  | \"\u3030\"\n  | \"\uD83D\uDCB1\"\n  | \"\uD83D\uDCB2\"\n  | \"\u2695\uFE0F\"\n  | \"\u2695\"\n  | \"\u267B\uFE0F\"\n  | \"\u267B\"\n  | \"\u269C\uFE0F\"\n  | \"\u269C\"\n  | \"\uD83D\uDD31\"\n  | \"\uD83D\uDCDB\"\n  | \"\uD83D\uDD30\"\n  | \"\u2B55\"\n  | \"\u2705\"\n  | \"\u2611\uFE0F\"\n  | \"\u2611\"\n  | \"\u2714\uFE0F\"\n  | \"\u2714\"\n  | \"\u274C\"\n  | \"\u274E\"\n  | \"\u27B0\"\n  | \"\u27BF\"\n  | \"\u303D\uFE0F\"\n  | \"\u303D\"\n  | \"\u2733\uFE0F\"\n  | \"\u2733\"\n  | \"\u2734\uFE0F\"\n  | \"\u2734\"\n  | \"\u2747\uFE0F\"\n  | \"\u2747\"\n  | \"\u00A9\uFE0F\"\n  | \"\u00A9\"\n  | \"\u00AE\uFE0F\"\n  | \"\u00AE\"\n  | \"\u2122\uFE0F\"\n  | \"\u2122\"\n  | \"#\uFE0F\u20E3\"\n  | \"#\u20E3\"\n  | \"*\uFE0F\u20E3\"\n  | \"*\u20E3\"\n  | \"0\uFE0F\u20E3\"\n  | \"0\u20E3\"\n  | \"1\uFE0F\u20E3\"\n  | \"1\u20E3\"\n  | \"2\uFE0F\u20E3\"\n  | \"2\u20E3\"\n  | \"3\uFE0F\u20E3\"\n  | \"3\u20E3\"\n  | \"4\uFE0F\u20E3\"\n  | \"4\u20E3\"\n  | \"5\uFE0F\u20E3\"\n  | \"5\u20E3\"\n  | \"6\uFE0F\u20E3\"\n  | \"6\u20E3\"\n  | \"7\uFE0F\u20E3\"\n  | \"7\u20E3\"\n  | \"8\uFE0F\u20E3\"\n  | \"8\u20E3\"\n  | \"9\uFE0F\u20E3\"\n  | \"9\u20E3\"\n  | \"\uD83D\uDD1F\"\n  | \"\uD83D\uDD20\"\n  | \"\uD83D\uDD21\"\n  | \"\uD83D\uDD22\"\n  | \"\uD83D\uDD23\"\n  | \"\uD83D\uDD24\"\n  | \"\uD83C\uDD70\uFE0F\"\n  | \"\uD83C\uDD70\"\n  | \"\uD83C\uDD8E\"\n  | \"\uD83C\uDD71\uFE0F\"\n  | \"\uD83C\uDD71\"\n  | \"\uD83C\uDD91\"\n  | \"\uD83C\uDD92\"\n  | \"\uD83C\uDD93\"\n  | \"\u2139\uFE0F\"\n  | \"\u2139\"\n  | \"\uD83C\uDD94\"\n  | \"\u24C2\uFE0F\"\n  | \"\u24C2\"\n  | \"\uD83C\uDD95\"\n  | \"\uD83C\uDD96\"\n  | \"\uD83C\uDD7E\uFE0F\"\n  | \"\uD83C\uDD7E\"\n  | \"\uD83C\uDD97\"\n  | \"\uD83C\uDD7F\uFE0F\"\n  | \"\uD83C\uDD7F\"\n  | \"\uD83C\uDD98\"\n  | \"\uD83C\uDD99\"\n  | \"\uD83C\uDD9A\"\n  | \"\uD83C\uDE01\"\n  | \"\uD83C\uDE02\uFE0F\"\n  | \"\uD83C\uDE02\"\n  | \"\uD83C\uDE37\uFE0F\"\n  | \"\uD83C\uDE37\"\n  | \"\uD83C\uDE36\"\n  | \"\uD83C\uDE2F\"\n  | \"\uD83C\uDE50\"\n  | \"\uD83C\uDE39\"\n  | \"\uD83C\uDE1A\"\n  | \"\uD83C\uDE32\"\n  | \"\uD83C\uDE51\"\n  | \"\uD83C\uDE38\"\n  | \"\uD83C\uDE34\"\n  | \"\uD83C\uDE33\"\n  | \"\u3297\uFE0F\"\n  | \"\u3297\"\n  | \"\u3299\uFE0F\"\n  | \"\u3299\"\n  | \"\uD83C\uDE3A\"\n  | \"\uD83C\uDE35\"\n  | \"\uD83D\uDD34\"\n  | \"\uD83D\uDFE0\"\n  | \"\uD83D\uDFE1\"\n  | \"\uD83D\uDFE2\"\n  | \"\uD83D\uDD35\"\n  | \"\uD83D\uDFE3\"\n  | \"\uD83D\uDFE4\"\n  | \"\u26AB\"\n  | \"\u26AA\"\n  | \"\uD83D\uDFE5\"\n  | \"\uD83D\uDFE7\"\n  | \"\uD83D\uDFE8\"\n  | \"\uD83D\uDFE9\"\n  | \"\uD83D\uDFE6\"\n  | \"\uD83D\uDFEA\"\n  | \"\uD83D\uDFEB\"\n  | \"\u2B1B\"\n  | \"\u2B1C\"\n  | \"\u25FC\uFE0F\"\n  | \"\u25FC\"\n  | \"\u25FB\uFE0F\"\n  | \"\u25FB\"\n  | \"\u25FE\"\n  | \"\u25FD\"\n  | \"\u25AA\uFE0F\"\n  | \"\u25AA\"\n  | \"\u25AB\uFE0F\"\n  | \"\u25AB\"\n  | \"\uD83D\uDD36\"\n  | \"\uD83D\uDD37\"\n  | \"\uD83D\uDD38\"\n  | \"\uD83D\uDD39\"\n  | \"\uD83D\uDD3A\"\n  | \"\uD83D\uDD3B\"\n  | \"\uD83D\uDCA0\"\n  | \"\uD83D\uDD18\"\n  | \"\uD83D\uDD33\"\n  | \"\uD83D\uDD32\"\n  | \"\uD83C\uDFC1\"\n  | \"\uD83D\uDEA9\"\n  | \"\uD83C\uDF8C\"\n  | \"\uD83C\uDFF4\"\n  | \"\uD83C\uDFF3\uFE0F\"\n  | \"\uD83C\uDFF3\"\n  | \"\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08\"\n  | \"\uD83C\uDFF3\u200D\uD83C\uDF08\"\n  | \"\uD83C\uDFF3\uFE0F\u200D\u26A7\uFE0F\"\n  | \"\uD83C\uDFF4\u200D\u2620\uFE0F\"\n  | \"\uD83C\uDFF4\u200D\u2620\"\n  | \"\uD83C\uDDE6\uD83C\uDDE8\"\n  | \"\uD83C\uDDE6\uD83C\uDDE9\"\n  | \"\uD83C\uDDE6\uD83C\uDDEA\"\n  | \"\uD83C\uDDE6\uD83C\uDDEB\"\n  | \"\uD83C\uDDE6\uD83C\uDDEC\"\n  | \"\uD83C\uDDE6\uD83C\uDDEE\"\n  | \"\uD83C\uDDE6\uD83C\uDDF1\"\n  | \"\uD83C\uDDE6\uD83C\uDDF2\"\n  | \"\uD83C\uDDE6\uD83C\uDDF4\"\n  | \"\uD83C\uDDE6\uD83C\uDDF6\"\n  | \"\uD83C\uDDE6\uD83C\uDDF7\"\n  | \"\uD83C\uDDE6\uD83C\uDDF8\"\n  | \"\uD83C\uDDE6\uD83C\uDDF9\"\n  | \"\uD83C\uDDE6\uD83C\uDDFA\"\n  | \"\uD83C\uDDE6\uD83C\uDDFC\"\n  | \"\uD83C\uDDE6\uD83C\uDDFD\"\n  | \"\uD83C\uDDE6\uD83C\uDDFF\"\n  | \"\uD83C\uDDE7\uD83C\uDDE6\"\n  | \"\uD83C\uDDE7\uD83C\uDDE7\"\n  | \"\uD83C\uDDE7\uD83C\uDDE9\"\n  | \"\uD83C\uDDE7\uD83C\uDDEA\"\n  | \"\uD83C\uDDE7\uD83C\uDDEB\"\n  | \"\uD83C\uDDE7\uD83C\uDDEC\"\n  | \"\uD83C\uDDE7\uD83C\uDDED\"\n  | \"\uD83C\uDDE7\uD83C\uDDEE\"\n  | \"\uD83C\uDDE7\uD83C\uDDEF\"\n  | \"\uD83C\uDDE7\uD83C\uDDF1\"\n  | \"\uD83C\uDDE7\uD83C\uDDF2\"\n  | \"\uD83C\uDDE7\uD83C\uDDF3\"\n  | \"\uD83C\uDDE7\uD83C\uDDF4\"\n  | \"\uD83C\uDDE7\uD83C\uDDF6\"\n  | \"\uD83C\uDDE7\uD83C\uDDF7\"\n  | \"\uD83C\uDDE7\uD83C\uDDF8\"\n  | \"\uD83C\uDDE7\uD83C\uDDF9\"\n  | \"\uD83C\uDDE7\uD83C\uDDFB\"\n  | \"\uD83C\uDDE7\uD83C\uDDFC\"\n  | \"\uD83C\uDDE7\uD83C\uDDFE\"\n  | \"\uD83C\uDDE7\uD83C\uDDFF\"\n  | \"\uD83C\uDDE8\uD83C\uDDE6\"\n  | \"\uD83C\uDDE8\uD83C\uDDE8\"\n  | \"\uD83C\uDDE8\uD83C\uDDE9\"\n  | \"\uD83C\uDDE8\uD83C\uDDEB\"\n  | \"\uD83C\uDDE8\uD83C\uDDEC\"\n  | \"\uD83C\uDDE8\uD83C\uDDED\"\n  | \"\uD83C\uDDE8\uD83C\uDDEE\"\n  | \"\uD83C\uDDE8\uD83C\uDDF0\"\n  | \"\uD83C\uDDE8\uD83C\uDDF1\"\n  | \"\uD83C\uDDE8\uD83C\uDDF2\"\n  | \"\uD83C\uDDE8\uD83C\uDDF3\"\n  | \"\uD83C\uDDE8\uD83C\uDDF4\"\n  | \"\uD83C\uDDE8\uD83C\uDDF5\"\n  | \"\uD83C\uDDE8\uD83C\uDDF7\"\n  | \"\uD83C\uDDE8\uD83C\uDDFA\"\n  | \"\uD83C\uDDE8\uD83C\uDDFB\"\n  | \"\uD83C\uDDE8\uD83C\uDDFC\"\n  | \"\uD83C\uDDE8\uD83C\uDDFD\"\n  | \"\uD83C\uDDE8\uD83C\uDDFE\"\n  | \"\uD83C\uDDE8\uD83C\uDDFF\"\n  | \"\uD83C\uDDE9\uD83C\uDDEA\"\n  | \"\uD83C\uDDE9\uD83C\uDDEC\"\n  | \"\uD83C\uDDE9\uD83C\uDDEF\"\n  | \"\uD83C\uDDE9\uD83C\uDDF0\"\n  | \"\uD83C\uDDE9\uD83C\uDDF2\"\n  | \"\uD83C\uDDE9\uD83C\uDDF4\"\n  | \"\uD83C\uDDE9\uD83C\uDDFF\"\n  | \"\uD83C\uDDEA\uD83C\uDDE6\"\n  | \"\uD83C\uDDEA\uD83C\uDDE8\"\n  | \"\uD83C\uDDEA\uD83C\uDDEA\"\n  | \"\uD83C\uDDEA\uD83C\uDDEC\"\n  | \"\uD83C\uDDEA\uD83C\uDDED\"\n  | \"\uD83C\uDDEA\uD83C\uDDF7\"\n  | \"\uD83C\uDDEA\uD83C\uDDF8\"\n  | \"\uD83C\uDDEA\uD83C\uDDF9\"\n  | \"\uD83C\uDDEA\uD83C\uDDFA\"\n  | \"\uD83C\uDDEB\uD83C\uDDEE\"\n  | \"\uD83C\uDDEB\uD83C\uDDEF\"\n  | \"\uD83C\uDDEB\uD83C\uDDF0\"\n  | \"\uD83C\uDDEB\uD83C\uDDF2\"\n  | \"\uD83C\uDDEB\uD83C\uDDF4\"\n  | \"\uD83C\uDDEB\uD83C\uDDF7\"\n  | \"\uD83C\uDDEC\uD83C\uDDE6\"\n  | \"\uD83C\uDDEC\uD83C\uDDE7\"\n  | \"\uD83C\uDDEC\uD83C\uDDE9\"\n  | \"\uD83C\uDDEC\uD83C\uDDEA\"\n  | \"\uD83C\uDDEC\uD83C\uDDEB\"\n  | \"\uD83C\uDDEC\uD83C\uDDEC\"\n  | \"\uD83C\uDDEC\uD83C\uDDED\"\n  | \"\uD83C\uDDEC\uD83C\uDDEE\"\n  | \"\uD83C\uDDEC\uD83C\uDDF1\"\n  | \"\uD83C\uDDEC\uD83C\uDDF2\"\n  | \"\uD83C\uDDEC\uD83C\uDDF3\"\n  | \"\uD83C\uDDEC\uD83C\uDDF5\"\n  | \"\uD83C\uDDEC\uD83C\uDDF6\"\n  | \"\uD83C\uDDEC\uD83C\uDDF7\"\n  | \"\uD83C\uDDEC\uD83C\uDDF8\"\n  | \"\uD83C\uDDEC\uD83C\uDDF9\"\n  | \"\uD83C\uDDEC\uD83C\uDDFA\"\n  | \"\uD83C\uDDEC\uD83C\uDDFC\"\n  | \"\uD83C\uDDEC\uD83C\uDDFE\"\n  | \"\uD83C\uDDED\uD83C\uDDF0\"\n  | \"\uD83C\uDDED\uD83C\uDDF2\"\n  | \"\uD83C\uDDED\uD83C\uDDF3\"\n  | \"\uD83C\uDDED\uD83C\uDDF7\"\n  | \"\uD83C\uDDED\uD83C\uDDF9\"\n  | \"\uD83C\uDDED\uD83C\uDDFA\"\n  | \"\uD83C\uDDEE\uD83C\uDDE8\"\n  | \"\uD83C\uDDEE\uD83C\uDDE9\"\n  | \"\uD83C\uDDEE\uD83C\uDDEA\"\n  | \"\uD83C\uDDEE\uD83C\uDDF1\"\n  | \"\uD83C\uDDEE\uD83C\uDDF2\"\n  | \"\uD83C\uDDEE\uD83C\uDDF3\"\n  | \"\uD83C\uDDEE\uD83C\uDDF4\"\n  | \"\uD83C\uDDEE\uD83C\uDDF6\"\n  | \"\uD83C\uDDEE\uD83C\uDDF7\"\n  | \"\uD83C\uDDEE\uD83C\uDDF8\"\n  | \"\uD83C\uDDEE\uD83C\uDDF9\"\n  | \"\uD83C\uDDEF\uD83C\uDDEA\"\n  | \"\uD83C\uDDEF\uD83C\uDDF2\"\n  | \"\uD83C\uDDEF\uD83C\uDDF4\"\n  | \"\uD83C\uDDEF\uD83C\uDDF5\"\n  | \"\uD83C\uDDF0\uD83C\uDDEA\"\n  | \"\uD83C\uDDF0\uD83C\uDDEC\"\n  | \"\uD83C\uDDF0\uD83C\uDDED\"\n  | \"\uD83C\uDDF0\uD83C\uDDEE\"\n  | \"\uD83C\uDDF0\uD83C\uDDF2\"\n  | \"\uD83C\uDDF0\uD83C\uDDF3\"\n  | \"\uD83C\uDDF0\uD83C\uDDF5\"\n  | \"\uD83C\uDDF0\uD83C\uDDF7\"\n  | \"\uD83C\uDDF0\uD83C\uDDFC\"\n  | \"\uD83C\uDDF0\uD83C\uDDFE\"\n  | \"\uD83C\uDDF0\uD83C\uDDFF\"\n  | \"\uD83C\uDDF1\uD83C\uDDE6\"\n  | \"\uD83C\uDDF1\uD83C\uDDE7\"\n  | \"\uD83C\uDDF1\uD83C\uDDE8\"\n  | \"\uD83C\uDDF1\uD83C\uDDEE\"\n  | \"\uD83C\uDDF1\uD83C\uDDF0\"\n  | \"\uD83C\uDDF1\uD83C\uDDF7\"\n  | \"\uD83C\uDDF1\uD83C\uDDF8\"\n  | \"\uD83C\uDDF1\uD83C\uDDF9\"\n  | \"\uD83C\uDDF1\uD83C\uDDFA\"\n  | \"\uD83C\uDDF1\uD83C\uDDFB\"\n  | \"\uD83C\uDDF1\uD83C\uDDFE\"\n  | \"\uD83C\uDDF2\uD83C\uDDE6\"\n  | \"\uD83C\uDDF2\uD83C\uDDE8\"\n  | \"\uD83C\uDDF2\uD83C\uDDE9\"\n  | \"\uD83C\uDDF2\uD83C\uDDEA\"\n  | \"\uD83C\uDDF2\uD83C\uDDEB\"\n  | \"\uD83C\uDDF2\uD83C\uDDEC\"\n  | \"\uD83C\uDDF2\uD83C\uDDED\"\n  | \"\uD83C\uDDF2\uD83C\uDDF0\"\n  | \"\uD83C\uDDF2\uD83C\uDDF1\"\n  | \"\uD83C\uDDF2\uD83C\uDDF2\"\n  | \"\uD83C\uDDF2\uD83C\uDDF3\"\n  | \"\uD83C\uDDF2\uD83C\uDDF4\"\n  | \"\uD83C\uDDF2\uD83C\uDDF5\"\n  | \"\uD83C\uDDF2\uD83C\uDDF6\"\n  | \"\uD83C\uDDF2\uD83C\uDDF7\"\n  | \"\uD83C\uDDF2\uD83C\uDDF8\"\n  | \"\uD83C\uDDF2\uD83C\uDDF9\"\n  | \"\uD83C\uDDF2\uD83C\uDDFA\"\n  | \"\uD83C\uDDF2\uD83C\uDDFB\"\n  | \"\uD83C\uDDF2\uD83C\uDDFC\"\n  | \"\uD83C\uDDF2\uD83C\uDDFD\"\n  | \"\uD83C\uDDF2\uD83C\uDDFE\"\n  | \"\uD83C\uDDF2\uD83C\uDDFF\"\n  | \"\uD83C\uDDF3\uD83C\uDDE6\"\n  | \"\uD83C\uDDF3\uD83C\uDDE8\"\n  | \"\uD83C\uDDF3\uD83C\uDDEA\"\n  | \"\uD83C\uDDF3\uD83C\uDDEB\"\n  | \"\uD83C\uDDF3\uD83C\uDDEC\"\n  | \"\uD83C\uDDF3\uD83C\uDDEE\"\n  | \"\uD83C\uDDF3\uD83C\uDDF1\"\n  | \"\uD83C\uDDF3\uD83C\uDDF4\"\n  | \"\uD83C\uDDF3\uD83C\uDDF5\"\n  | \"\uD83C\uDDF3\uD83C\uDDF7\"\n  | \"\uD83C\uDDF3\uD83C\uDDFA\"\n  | \"\uD83C\uDDF3\uD83C\uDDFF\"\n  | \"\uD83C\uDDF4\uD83C\uDDF2\"\n  | \"\uD83C\uDDF5\uD83C\uDDE6\"\n  | \"\uD83C\uDDF5\uD83C\uDDEA\"\n  | \"\uD83C\uDDF5\uD83C\uDDEB\"\n  | \"\uD83C\uDDF5\uD83C\uDDEC\"\n  | \"\uD83C\uDDF5\uD83C\uDDED\"\n  | \"\uD83C\uDDF5\uD83C\uDDF0\"\n  | \"\uD83C\uDDF5\uD83C\uDDF1\"\n  | \"\uD83C\uDDF5\uD83C\uDDF2\"\n  | \"\uD83C\uDDF5\uD83C\uDDF3\"\n  | \"\uD83C\uDDF5\uD83C\uDDF7\"\n  | \"\uD83C\uDDF5\uD83C\uDDF8\"\n  | \"\uD83C\uDDF5\uD83C\uDDF9\"\n  | \"\uD83C\uDDF5\uD83C\uDDFC\"\n  | \"\uD83C\uDDF5\uD83C\uDDFE\"\n  | \"\uD83C\uDDF6\uD83C\uDDE6\"\n  | \"\uD83C\uDDF7\uD83C\uDDEA\"\n  | \"\uD83C\uDDF7\uD83C\uDDF4\"\n  | \"\uD83C\uDDF7\uD83C\uDDF8\"\n  | \"\uD83C\uDDF7\uD83C\uDDFA\"\n  | \"\uD83C\uDDF7\uD83C\uDDFC\"\n  | \"\uD83C\uDDF8\uD83C\uDDE6\"\n  | \"\uD83C\uDDF8\uD83C\uDDE7\"\n  | \"\uD83C\uDDF8\uD83C\uDDE8\"\n  | \"\uD83C\uDDF8\uD83C\uDDE9\"\n  | \"\uD83C\uDDF8\uD83C\uDDEA\"\n  | \"\uD83C\uDDF8\uD83C\uDDEC\"\n  | \"\uD83C\uDDF8\uD83C\uDDED\"\n  | \"\uD83C\uDDF8\uD83C\uDDEE\"\n  | \"\uD83C\uDDF8\uD83C\uDDEF\"\n  | \"\uD83C\uDDF8\uD83C\uDDF0\"\n  | \"\uD83C\uDDF8\uD83C\uDDF1\"\n  | \"\uD83C\uDDF8\uD83C\uDDF2\"\n  | \"\uD83C\uDDF8\uD83C\uDDF3\"\n  | \"\uD83C\uDDF8\uD83C\uDDF4\"\n  | \"\uD83C\uDDF8\uD83C\uDDF7\"\n  | \"\uD83C\uDDF8\uD83C\uDDF8\"\n  | \"\uD83C\uDDF8\uD83C\uDDF9\"\n  | \"\uD83C\uDDF8\uD83C\uDDFB\"\n  | \"\uD83C\uDDF8\uD83C\uDDFD\"\n  | \"\uD83C\uDDF8\uD83C\uDDFE\"\n  | \"\uD83C\uDDF8\uD83C\uDDFF\"\n  | \"\uD83C\uDDF9\uD83C\uDDE6\"\n  | \"\uD83C\uDDF9\uD83C\uDDE8\"\n  | \"\uD83C\uDDF9\uD83C\uDDE9\"\n  | \"\uD83C\uDDF9\uD83C\uDDEB\"\n  | \"\uD83C\uDDF9\uD83C\uDDEC\"\n  | \"\uD83C\uDDF9\uD83C\uDDED\"\n  | \"\uD83C\uDDF9\uD83C\uDDEF\"\n  | \"\uD83C\uDDF9\uD83C\uDDF0\"\n  | \"\uD83C\uDDF9\uD83C\uDDF1\"\n  | \"\uD83C\uDDF9\uD83C\uDDF2\"\n  | \"\uD83C\uDDF9\uD83C\uDDF3\"\n  | \"\uD83C\uDDF9\uD83C\uDDF4\"\n  | \"\uD83C\uDDF9\uD83C\uDDF7\"\n  | \"\uD83C\uDDF9\uD83C\uDDF9\"\n  | \"\uD83C\uDDF9\uD83C\uDDFB\"\n  | \"\uD83C\uDDF9\uD83C\uDDFC\"\n  | \"\uD83C\uDDF9\uD83C\uDDFF\"\n  | \"\uD83C\uDDFA\uD83C\uDDE6\"\n  | \"\uD83C\uDDFA\uD83C\uDDEC\"\n  | \"\uD83C\uDDFA\uD83C\uDDF2\"\n  | \"\uD83C\uDDFA\uD83C\uDDF3\"\n  | \"\uD83C\uDDFA\uD83C\uDDF8\"\n  | \"\uD83C\uDDFA\uD83C\uDDFE\"\n  | \"\uD83C\uDDFA\uD83C\uDDFF\"\n  | \"\uD83C\uDDFB\uD83C\uDDE6\"\n  | \"\uD83C\uDDFB\uD83C\uDDE8\"\n  | \"\uD83C\uDDFB\uD83C\uDDEA\"\n  | \"\uD83C\uDDFB\uD83C\uDDEC\"\n  | \"\uD83C\uDDFB\uD83C\uDDEE\"\n  | \"\uD83C\uDDFB\uD83C\uDDF3\"\n  | \"\uD83C\uDDFB\uD83C\uDDFA\"\n  | \"\uD83C\uDDFC\uD83C\uDDEB\"\n  | \"\uD83C\uDDFC\uD83C\uDDF8\"\n  | \"\uD83C\uDDFD\uD83C\uDDF0\"\n  | \"\uD83C\uDDFE\uD83C\uDDEA\"\n  | \"\uD83C\uDDFE\uD83C\uDDF9\"\n  | \"\uD83C\uDDFF\uD83C\uDDE6\"\n  | \"\uD83C\uDDFF\uD83C\uDDF2\"\n  | \"\uD83C\uDDFF\uD83C\uDDFC\"\n  | \"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67\uDB40\uDC7F\"\n  | \"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74\uDB40\uDC7F\"\n  | \"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73\uDB40\uDC7F\"\n\ntype NumberFormat =\n  | \"number\"\n  | \"number_with_commas\"\n  | \"percent\"\n  | \"dollar\"\n  | \"canadian_dollar\"\n  | \"euro\"\n  | \"pound\"\n  | \"yen\"\n  | \"ruble\"\n  | \"rupee\"\n  | \"won\"\n  | \"yuan\"\n  | \"real\"\n  | \"lira\"\n  | \"rupiah\"\n  | \"franc\"\n  | \"hong_kong_dollar\"\n  | \"new_zealand_dollar\"\n  | \"krona\"\n  | \"norwegian_krone\"\n  | \"mexican_peso\"\n  | \"rand\"\n  | \"new_taiwan_dollar\"\n  | \"danish_krone\"\n  | \"zloty\"\n  | \"baht\"\n  | \"forint\"\n  | \"koruna\"\n  | \"shekel\"\n  | \"chilean_peso\"\n  | \"philippine_peso\"\n  | \"dirham\"\n  | \"colombian_peso\"\n  | \"riyal\"\n  | \"ringgit\"\n  | \"leu\"\n  | \"argentine_peso\"\n  | \"uruguayan_peso\"\n\ntype PartialBlockObjectResponse = { object: \"block\"; id: string }\n\ntype LanguageRequest =\n  | \"abap\"\n  | \"arduino\"\n  | \"bash\"\n  | \"basic\"\n  | \"c\"\n  | \"clojure\"\n  | \"coffeescript\"\n  | \"c++\"\n  | \"c#\"\n  | \"css\"\n  | \"dart\"\n  | \"diff\"\n  | \"docker\"\n  | \"elixir\"\n  | \"elm\"\n  | \"erlang\"\n  | \"flow\"\n  | \"fortran\"\n  | \"f#\"\n  | \"gherkin\"\n  | \"glsl\"\n  | \"go\"\n  | \"graphql\"\n  | \"groovy\"\n  | \"haskell\"\n  | \"html\"\n  | \"java\"\n  | \"javascript\"\n  | \"json\"\n  | \"julia\"\n  | \"kotlin\"\n  | \"latex\"\n  | \"less\"\n  | \"lisp\"\n  | \"livescript\"\n  | \"lua\"\n  | \"makefile\"\n  | \"markdown\"\n  | \"markup\"\n  | \"matlab\"\n  | \"mermaid\"\n  | \"nix\"\n  | \"objective-c\"\n  | \"ocaml\"\n  | \"pascal\"\n  | \"perl\"\n  | \"php\"\n  | \"plain text\"\n  | \"powershell\"\n  | \"prolog\"\n  | \"protobuf\"\n  | \"python\"\n  | \"r\"\n  | \"reason\"\n  | \"ruby\"\n  | \"rust\"\n  | \"sass\"\n  | \"scala\"\n  | \"scheme\"\n  | \"scss\"\n  | \"shell\"\n  | \"solidity\"\n  | \"sql\"\n  | \"swift\"\n  | \"typescript\"\n  | \"vb.net\"\n  | \"verilog\"\n  | \"vhdl\"\n  | \"visual basic\"\n  | \"webassembly\"\n  | \"xml\"\n  | \"yaml\"\n  | \"java/c/c++/c#\"\n\ntype BlockObjectResponse =\n  | {\n      type: \"paragraph\"\n      paragraph: { text: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"heading_1\"\n      heading_1: { text: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"heading_2\"\n      heading_2: { text: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"heading_3\"\n      heading_3: { text: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"bulleted_list_item\"\n      bulleted_list_item: { text: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"numbered_list_item\"\n      numbered_list_item: { text: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"quote\"\n      quote: { text: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"to_do\"\n      to_do: { text: Array<RichTextItemResponse>; checked: boolean }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"toggle\"\n      toggle: { text: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"template\"\n      template: { text: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"synced_block\"\n      synced_block: {\n        synced_from: { type: \"block_id\"; block_id: IdRequest } | null\n      }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"child_page\"\n      child_page: { title: string }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"child_database\"\n      child_database: { title: string }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"equation\"\n      equation: { expression: string }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"code\"\n      code: {\n        text: Array<RichTextItemResponse>\n        caption: Array<RichTextItemResponse>\n        language: LanguageRequest\n      }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"callout\"\n      callout: {\n        text: Array<RichTextItemResponse>\n        icon:\n          | { type: \"emoji\"; emoji: EmojiRequest }\n          | null\n          | { type: \"external\"; external: { url: TextRequest } }\n          | null\n          | { type: \"file\"; file: { url: string; expiry_time: string } }\n          | null\n      }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"divider\"\n      divider: EmptyObject\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"breadcrumb\"\n      breadcrumb: EmptyObject\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"table_of_contents\"\n      table_of_contents: EmptyObject\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"column_list\"\n      column_list: EmptyObject\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"column\"\n      column: EmptyObject\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"link_to_page\"\n      link_to_page:\n        | { type: \"page_id\"; page_id: IdRequest }\n        | { type: \"database_id\"; database_id: IdRequest }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"table\"\n      table: {\n        has_column_header: boolean\n        has_row_header: boolean\n        table_width: number\n      }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"table_row\"\n      table_row: { cells: Array<Array<RichTextItemResponse>> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"embed\"\n      embed: { url: string; caption: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"bookmark\"\n      bookmark: { url: string; caption: Array<RichTextItemResponse> }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"image\"\n      image:\n        | {\n            type: \"external\"\n            external: { url: TextRequest }\n            caption: Array<RichTextItemResponse>\n          }\n        | {\n            type: \"file\"\n            file: { url: string; expiry_time: string }\n            caption: Array<RichTextItemResponse>\n          }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"video\"\n      video:\n        | {\n            type: \"external\"\n            external: { url: TextRequest }\n            caption: Array<RichTextItemResponse>\n          }\n        | {\n            type: \"file\"\n            file: { url: string; expiry_time: string }\n            caption: Array<RichTextItemResponse>\n          }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"pdf\"\n      pdf:\n        | {\n            type: \"external\"\n            external: { url: TextRequest }\n            caption: Array<RichTextItemResponse>\n          }\n        | {\n            type: \"file\"\n            file: { url: string; expiry_time: string }\n            caption: Array<RichTextItemResponse>\n          }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"file\"\n      file:\n        | {\n            type: \"external\"\n            external: { url: TextRequest }\n            caption: Array<RichTextItemResponse>\n          }\n        | {\n            type: \"file\"\n            file: { url: string; expiry_time: string }\n            caption: Array<RichTextItemResponse>\n          }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"audio\"\n      audio:\n        | {\n            type: \"external\"\n            external: { url: TextRequest }\n            caption: Array<RichTextItemResponse>\n          }\n        | {\n            type: \"file\"\n            file: { url: string; expiry_time: string }\n            caption: Array<RichTextItemResponse>\n          }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"link_preview\"\n      link_preview: { url: TextRequest }\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n  | {\n      type: \"unsupported\"\n      unsupported: EmptyObject\n      object: \"block\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      has_children: boolean\n      archived: boolean\n    }\n\ntype DateRequest = {\n  start: string\n  end?: string | null\n  time_zone?: TimeZoneRequest | null\n}\n\ntype RichTextItemRequest =\n  | {\n      text: { content: string; link?: { url: TextRequest } | null }\n      type?: \"text\"\n      annotations?: {\n        bold?: boolean\n        italic?: boolean\n        strikethrough?: boolean\n        underline?: boolean\n        code?: boolean\n        color?:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n    }\n  | {\n      mention:\n        | {\n            user:\n              | { id: IdRequest }\n              | {\n                  person: { email?: string }\n                  id: IdRequest\n                  type?: \"person\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n              | {\n                  bot:\n                    | EmptyObject\n                    | {\n                        owner:\n                          | {\n                              type: \"user\"\n                              user:\n                                | {\n                                    type: \"person\"\n                                    person: { email: string }\n                                    name: string | null\n                                    avatar_url: string | null\n                                    id: IdRequest\n                                    object: \"user\"\n                                  }\n                                | { id: IdRequest; object: \"user\" }\n                            }\n                          | { type: \"workspace\"; workspace: true }\n                      }\n                  id: IdRequest\n                  type?: \"bot\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n          }\n        | { date: DateRequest }\n        | { page: { id: IdRequest } }\n        | { database: { id: IdRequest } }\n      type?: \"mention\"\n      annotations?: {\n        bold?: boolean\n        italic?: boolean\n        strikethrough?: boolean\n        underline?: boolean\n        code?: boolean\n        color?:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n    }\n  | {\n      equation: { expression: TextRequest }\n      type?: \"equation\"\n      annotations?: {\n        bold?: boolean\n        italic?: boolean\n        strikethrough?: boolean\n        underline?: boolean\n        code?: boolean\n        color?:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n    }\n\ntype BlockObjectRequestWithoutChildren =\n  | {\n      embed: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"embed\"\n      object?: \"block\"\n    }\n  | {\n      bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"bookmark\"\n      object?: \"block\"\n    }\n  | {\n      image: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"image\"\n      object?: \"block\"\n    }\n  | {\n      video: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"video\"\n      object?: \"block\"\n    }\n  | {\n      pdf: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"pdf\"\n      object?: \"block\"\n    }\n  | {\n      file: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"file\"\n      object?: \"block\"\n    }\n  | {\n      audio: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"audio\"\n      object?: \"block\"\n    }\n  | {\n      code: {\n        text: Array<RichTextItemRequest>\n        language: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      object?: \"block\"\n    }\n  | { equation: { expression: string }; type?: \"equation\"; object?: \"block\" }\n  | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n  | {\n      table_of_contents: EmptyObject\n      type?: \"table_of_contents\"\n      object?: \"block\"\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n      type?: \"link_to_page\"\n      object?: \"block\"\n    }\n  | {\n      table_row: { cells: Array<Array<RichTextItemRequest>> }\n      type?: \"table_row\"\n      object?: \"block\"\n    }\n  | {\n      heading_1: { text: Array<RichTextItemRequest> }\n      type?: \"heading_1\"\n      object?: \"block\"\n    }\n  | {\n      heading_2: { text: Array<RichTextItemRequest> }\n      type?: \"heading_2\"\n      object?: \"block\"\n    }\n  | {\n      heading_3: { text: Array<RichTextItemRequest> }\n      type?: \"heading_3\"\n      object?: \"block\"\n    }\n  | {\n      paragraph: { text: Array<RichTextItemRequest> }\n      type?: \"paragraph\"\n      object?: \"block\"\n    }\n  | {\n      bulleted_list_item: { text: Array<RichTextItemRequest> }\n      type?: \"bulleted_list_item\"\n      object?: \"block\"\n    }\n  | {\n      numbered_list_item: { text: Array<RichTextItemRequest> }\n      type?: \"numbered_list_item\"\n      object?: \"block\"\n    }\n  | {\n      quote: { text: Array<RichTextItemRequest> }\n      type?: \"quote\"\n      object?: \"block\"\n    }\n  | {\n      to_do: { text: Array<RichTextItemRequest>; checked?: boolean }\n      type?: \"to_do\"\n      object?: \"block\"\n    }\n  | {\n      toggle: { text: Array<RichTextItemRequest> }\n      type?: \"toggle\"\n      object?: \"block\"\n    }\n  | {\n      template: { text: Array<RichTextItemRequest> }\n      type?: \"template\"\n      object?: \"block\"\n    }\n  | {\n      callout: {\n        text: Array<RichTextItemRequest>\n        icon?:\n          | { emoji: EmojiRequest; type?: \"emoji\" }\n          | { external: { url: TextRequest }; type?: \"external\" }\n      }\n      type?: \"callout\"\n      object?: \"block\"\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n      }\n      type?: \"synced_block\"\n      object?: \"block\"\n    }\n\ntype BlockObjectRequest =\n  | {\n      embed: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"embed\"\n      object?: \"block\"\n    }\n  | {\n      bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"bookmark\"\n      object?: \"block\"\n    }\n  | {\n      image: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"image\"\n      object?: \"block\"\n    }\n  | {\n      video: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"video\"\n      object?: \"block\"\n    }\n  | {\n      pdf: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"pdf\"\n      object?: \"block\"\n    }\n  | {\n      file: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"file\"\n      object?: \"block\"\n    }\n  | {\n      audio: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"audio\"\n      object?: \"block\"\n    }\n  | {\n      code: {\n        text: Array<RichTextItemRequest>\n        language: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      object?: \"block\"\n    }\n  | { equation: { expression: string }; type?: \"equation\"; object?: \"block\" }\n  | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n  | {\n      table_of_contents: EmptyObject\n      type?: \"table_of_contents\"\n      object?: \"block\"\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n      type?: \"link_to_page\"\n      object?: \"block\"\n    }\n  | {\n      table_row: { cells: Array<Array<RichTextItemRequest>> }\n      type?: \"table_row\"\n      object?: \"block\"\n    }\n  | {\n      column_list: {\n        children: Array<{\n          column: {\n            children: Array<\n              | {\n                  embed: { url: string; caption?: Array<RichTextItemRequest> }\n                  type?: \"embed\"\n                  object?: \"block\"\n                }\n              | {\n                  bookmark: {\n                    url: string\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"bookmark\"\n                  object?: \"block\"\n                }\n              | {\n                  image: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"image\"\n                  object?: \"block\"\n                }\n              | {\n                  video: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"video\"\n                  object?: \"block\"\n                }\n              | {\n                  pdf: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"pdf\"\n                  object?: \"block\"\n                }\n              | {\n                  file: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"file\"\n                  object?: \"block\"\n                }\n              | {\n                  audio: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"audio\"\n                  object?: \"block\"\n                }\n              | {\n                  code: {\n                    text: Array<RichTextItemRequest>\n                    language: LanguageRequest\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"code\"\n                  object?: \"block\"\n                }\n              | {\n                  equation: { expression: string }\n                  type?: \"equation\"\n                  object?: \"block\"\n                }\n              | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n              | {\n                  breadcrumb: EmptyObject\n                  type?: \"breadcrumb\"\n                  object?: \"block\"\n                }\n              | {\n                  table_of_contents: EmptyObject\n                  type?: \"table_of_contents\"\n                  object?: \"block\"\n                }\n              | {\n                  link_to_page:\n                    | { page_id: IdRequest; type?: \"page_id\" }\n                    | { database_id: IdRequest; type?: \"database_id\" }\n                  type?: \"link_to_page\"\n                  object?: \"block\"\n                }\n              | {\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }\n              | {\n                  heading_1: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"heading_1\"\n                  object?: \"block\"\n                }\n              | {\n                  heading_2: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"heading_2\"\n                  object?: \"block\"\n                }\n              | {\n                  heading_3: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"heading_3\"\n                  object?: \"block\"\n                }\n              | {\n                  paragraph: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"paragraph\"\n                  object?: \"block\"\n                }\n              | {\n                  bulleted_list_item: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"bulleted_list_item\"\n                  object?: \"block\"\n                }\n              | {\n                  numbered_list_item: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"numbered_list_item\"\n                  object?: \"block\"\n                }\n              | {\n                  quote: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"quote\"\n                  object?: \"block\"\n                }\n              | {\n                  to_do: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                    checked?: boolean\n                  }\n                  type?: \"to_do\"\n                  object?: \"block\"\n                }\n              | {\n                  toggle: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"toggle\"\n                  object?: \"block\"\n                }\n              | {\n                  template: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"template\"\n                  object?: \"block\"\n                }\n              | {\n                  callout: {\n                    text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                    icon?:\n                      | { emoji: EmojiRequest; type?: \"emoji\" }\n                      | { external: { url: TextRequest }; type?: \"external\" }\n                  }\n                  type?: \"callout\"\n                  object?: \"block\"\n                }\n              | {\n                  synced_block: {\n                    synced_from: {\n                      block_id: IdRequest\n                      type?: \"block_id\"\n                    } | null\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"synced_block\"\n                  object?: \"block\"\n                }\n            >\n          }\n          type?: \"column\"\n          object?: \"block\"\n        }>\n      }\n      type?: \"column_list\"\n      object?: \"block\"\n    }\n  | {\n      column: {\n        children: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"column\"\n      object?: \"block\"\n    }\n  | {\n      table: {\n        table_width: number\n        children: Array<BlockObjectRequestWithoutChildren>\n        has_column_header?: boolean\n        has_row_header?: boolean\n      }\n      type?: \"table\"\n      object?: \"block\"\n    }\n  | {\n      heading_1: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"heading_1\"\n      object?: \"block\"\n    }\n  | {\n      heading_2: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"heading_2\"\n      object?: \"block\"\n    }\n  | {\n      heading_3: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"heading_3\"\n      object?: \"block\"\n    }\n  | {\n      paragraph: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"paragraph\"\n      object?: \"block\"\n    }\n  | {\n      bulleted_list_item: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"bulleted_list_item\"\n      object?: \"block\"\n    }\n  | {\n      numbered_list_item: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"numbered_list_item\"\n      object?: \"block\"\n    }\n  | {\n      quote: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"quote\"\n      object?: \"block\"\n    }\n  | {\n      to_do: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n        checked?: boolean\n      }\n      type?: \"to_do\"\n      object?: \"block\"\n    }\n  | {\n      toggle: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"toggle\"\n      object?: \"block\"\n    }\n  | {\n      template: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"template\"\n      object?: \"block\"\n    }\n  | {\n      callout: {\n        text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n        icon?:\n          | { emoji: EmojiRequest; type?: \"emoji\" }\n          | { external: { url: TextRequest }; type?: \"external\" }\n      }\n      type?: \"callout\"\n      object?: \"block\"\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: EmptyObject\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"synced_block\"\n      object?: \"block\"\n    }\n\ntype PropertyFilter =\n  | {\n      title:\n        | { equals: string }\n        | { does_not_equal: string }\n        | { contains: string }\n        | { does_not_contain: string }\n        | { starts_with: string }\n        | { ends_with: string }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"title\"\n    }\n  | {\n      text:\n        | { equals: string }\n        | { does_not_equal: string }\n        | { contains: string }\n        | { does_not_contain: string }\n        | { starts_with: string }\n        | { ends_with: string }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"text\"\n    }\n  | {\n      rich_text:\n        | { equals: string }\n        | { does_not_equal: string }\n        | { contains: string }\n        | { does_not_contain: string }\n        | { starts_with: string }\n        | { ends_with: string }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"rich_text\"\n    }\n  | {\n      number:\n        | { equals: number }\n        | { does_not_equal: number }\n        | { greater_than: number }\n        | { less_than: number }\n        | { greater_than_or_equal_to: number }\n        | { less_than_or_equal_to: number }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"number\"\n    }\n  | {\n      checkbox: { equals: boolean } | { does_not_equal: boolean }\n      property: string\n      type?: \"checkbox\"\n    }\n  | {\n      select:\n        | { equals: string }\n        | { does_not_equal: string }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"select\"\n    }\n  | {\n      multi_select:\n        | { contains: string }\n        | { does_not_contain: string }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"multi_select\"\n    }\n  | {\n      date:\n        | { equals: string }\n        | { before: string }\n        | { after: string }\n        | { on_or_before: string }\n        | { on_or_after: string }\n        | { past_week: EmptyObject }\n        | { past_month: EmptyObject }\n        | { past_year: EmptyObject }\n        | { next_week: EmptyObject }\n        | { next_month: EmptyObject }\n        | { next_year: EmptyObject }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"date\"\n    }\n  | {\n      people:\n        | { contains: IdRequest }\n        | { does_not_contain: IdRequest }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"people\"\n    }\n  | {\n      files: { is_empty: true } | { is_not_empty: true }\n      property: string\n      type?: \"files\"\n    }\n  | {\n      url:\n        | { equals: string }\n        | { does_not_equal: string }\n        | { contains: string }\n        | { does_not_contain: string }\n        | { starts_with: string }\n        | { ends_with: string }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"url\"\n    }\n  | {\n      email:\n        | { equals: string }\n        | { does_not_equal: string }\n        | { contains: string }\n        | { does_not_contain: string }\n        | { starts_with: string }\n        | { ends_with: string }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"email\"\n    }\n  | {\n      phone:\n        | { equals: string }\n        | { does_not_equal: string }\n        | { contains: string }\n        | { does_not_contain: string }\n        | { starts_with: string }\n        | { ends_with: string }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"phone\"\n    }\n  | {\n      phone_number:\n        | { equals: string }\n        | { does_not_equal: string }\n        | { contains: string }\n        | { does_not_contain: string }\n        | { starts_with: string }\n        | { ends_with: string }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"phone_number\"\n    }\n  | {\n      relation:\n        | { contains: IdRequest }\n        | { does_not_contain: IdRequest }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"relation\"\n    }\n  | {\n      created_by:\n        | { contains: IdRequest }\n        | { does_not_contain: IdRequest }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"created_by\"\n    }\n  | {\n      created_time:\n        | { equals: string }\n        | { before: string }\n        | { after: string }\n        | { on_or_before: string }\n        | { on_or_after: string }\n        | { past_week: EmptyObject }\n        | { past_month: EmptyObject }\n        | { past_year: EmptyObject }\n        | { next_week: EmptyObject }\n        | { next_month: EmptyObject }\n        | { next_year: EmptyObject }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"created_time\"\n    }\n  | {\n      last_edited_by:\n        | { contains: IdRequest }\n        | { does_not_contain: IdRequest }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"last_edited_by\"\n    }\n  | {\n      last_edited_time:\n        | { equals: string }\n        | { before: string }\n        | { after: string }\n        | { on_or_before: string }\n        | { on_or_after: string }\n        | { past_week: EmptyObject }\n        | { past_month: EmptyObject }\n        | { past_year: EmptyObject }\n        | { next_week: EmptyObject }\n        | { next_month: EmptyObject }\n        | { next_year: EmptyObject }\n        | { is_empty: true }\n        | { is_not_empty: true }\n      property: string\n      type?: \"last_edited_time\"\n    }\n  | {\n      formula:\n        | {\n            text:\n              | { equals: string }\n              | { does_not_equal: string }\n              | { contains: string }\n              | { does_not_contain: string }\n              | { starts_with: string }\n              | { ends_with: string }\n              | { is_empty: true }\n              | { is_not_empty: true }\n          }\n        | { checkbox: { equals: boolean } | { does_not_equal: boolean } }\n        | {\n            number:\n              | { equals: number }\n              | { does_not_equal: number }\n              | { greater_than: number }\n              | { less_than: number }\n              | { greater_than_or_equal_to: number }\n              | { less_than_or_equal_to: number }\n              | { is_empty: true }\n              | { is_not_empty: true }\n          }\n        | {\n            date:\n              | { equals: string }\n              | { before: string }\n              | { after: string }\n              | { on_or_before: string }\n              | { on_or_after: string }\n              | { past_week: EmptyObject }\n              | { past_month: EmptyObject }\n              | { past_year: EmptyObject }\n              | { next_week: EmptyObject }\n              | { next_month: EmptyObject }\n              | { next_year: EmptyObject }\n              | { is_empty: true }\n              | { is_not_empty: true }\n          }\n      property: string\n      type?: \"formula\"\n    }\n  | {\n      rollup:\n        | {\n            any:\n              | {\n                  text:\n                    | { equals: string }\n                    | { does_not_equal: string }\n                    | { contains: string }\n                    | { does_not_contain: string }\n                    | { starts_with: string }\n                    | { ends_with: string }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  number:\n                    | { equals: number }\n                    | { does_not_equal: number }\n                    | { greater_than: number }\n                    | { less_than: number }\n                    | { greater_than_or_equal_to: number }\n                    | { less_than_or_equal_to: number }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | { checkbox: { equals: boolean } | { does_not_equal: boolean } }\n              | {\n                  select:\n                    | { equals: string }\n                    | { does_not_equal: string }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  multi_select:\n                    | { contains: string }\n                    | { does_not_contain: string }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  relation:\n                    | { contains: IdRequest }\n                    | { does_not_contain: IdRequest }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  date:\n                    | { equals: string }\n                    | { before: string }\n                    | { after: string }\n                    | { on_or_before: string }\n                    | { on_or_after: string }\n                    | { past_week: EmptyObject }\n                    | { past_month: EmptyObject }\n                    | { past_year: EmptyObject }\n                    | { next_week: EmptyObject }\n                    | { next_month: EmptyObject }\n                    | { next_year: EmptyObject }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  people:\n                    | { contains: IdRequest }\n                    | { does_not_contain: IdRequest }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | { files: { is_empty: true } | { is_not_empty: true } }\n          }\n        | {\n            none:\n              | {\n                  text:\n                    | { equals: string }\n                    | { does_not_equal: string }\n                    | { contains: string }\n                    | { does_not_contain: string }\n                    | { starts_with: string }\n                    | { ends_with: string }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  number:\n                    | { equals: number }\n                    | { does_not_equal: number }\n                    | { greater_than: number }\n                    | { less_than: number }\n                    | { greater_than_or_equal_to: number }\n                    | { less_than_or_equal_to: number }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | { checkbox: { equals: boolean } | { does_not_equal: boolean } }\n              | {\n                  select:\n                    | { equals: string }\n                    | { does_not_equal: string }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  multi_select:\n                    | { contains: string }\n                    | { does_not_contain: string }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  relation:\n                    | { contains: IdRequest }\n                    | { does_not_contain: IdRequest }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  date:\n                    | { equals: string }\n                    | { before: string }\n                    | { after: string }\n                    | { on_or_before: string }\n                    | { on_or_after: string }\n                    | { past_week: EmptyObject }\n                    | { past_month: EmptyObject }\n                    | { past_year: EmptyObject }\n                    | { next_week: EmptyObject }\n                    | { next_month: EmptyObject }\n                    | { next_year: EmptyObject }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  people:\n                    | { contains: IdRequest }\n                    | { does_not_contain: IdRequest }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | { files: { is_empty: true } | { is_not_empty: true } }\n          }\n        | {\n            every:\n              | {\n                  text:\n                    | { equals: string }\n                    | { does_not_equal: string }\n                    | { contains: string }\n                    | { does_not_contain: string }\n                    | { starts_with: string }\n                    | { ends_with: string }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  number:\n                    | { equals: number }\n                    | { does_not_equal: number }\n                    | { greater_than: number }\n                    | { less_than: number }\n                    | { greater_than_or_equal_to: number }\n                    | { less_than_or_equal_to: number }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | { checkbox: { equals: boolean } | { does_not_equal: boolean } }\n              | {\n                  select:\n                    | { equals: string }\n                    | { does_not_equal: string }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  multi_select:\n                    | { contains: string }\n                    | { does_not_contain: string }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  relation:\n                    | { contains: IdRequest }\n                    | { does_not_contain: IdRequest }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  date:\n                    | { equals: string }\n                    | { before: string }\n                    | { after: string }\n                    | { on_or_before: string }\n                    | { on_or_after: string }\n                    | { past_week: EmptyObject }\n                    | { past_month: EmptyObject }\n                    | { past_year: EmptyObject }\n                    | { next_week: EmptyObject }\n                    | { next_month: EmptyObject }\n                    | { next_year: EmptyObject }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | {\n                  people:\n                    | { contains: IdRequest }\n                    | { does_not_contain: IdRequest }\n                    | { is_empty: true }\n                    | { is_not_empty: true }\n                }\n              | { files: { is_empty: true } | { is_not_empty: true } }\n          }\n        | {\n            date:\n              | { equals: string }\n              | { before: string }\n              | { after: string }\n              | { on_or_before: string }\n              | { on_or_after: string }\n              | { past_week: EmptyObject }\n              | { past_month: EmptyObject }\n              | { past_year: EmptyObject }\n              | { next_week: EmptyObject }\n              | { next_month: EmptyObject }\n              | { next_year: EmptyObject }\n              | { is_empty: true }\n              | { is_not_empty: true }\n          }\n        | {\n            number:\n              | { equals: number }\n              | { does_not_equal: number }\n              | { greater_than: number }\n              | { less_than: number }\n              | { greater_than_or_equal_to: number }\n              | { less_than_or_equal_to: number }\n              | { is_empty: true }\n              | { is_not_empty: true }\n          }\n      property: string\n      type?: \"rollup\"\n    }\nexport type GetSelfParameters = Record<string, never>\n\nexport type GetSelfResponse = UserObjectResponse\n\nexport const getSelf = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [],\n  path: (): string => `users/me`,\n} as const\n\ntype GetUserPathParameters = {\n  user_id: IdRequest\n}\n\nexport type GetUserParameters = GetUserPathParameters\n\nexport type GetUserResponse = UserObjectResponse\n\nexport const getUser = {\n  method: \"get\",\n  pathParams: [\"user_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetUserPathParameters): string => `users/${p.user_id}`,\n} as const\n\ntype ListUsersQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListUsersParameters = ListUsersQueryParameters\n\nexport type ListUsersResponse =\n  | {\n      type: \"rollup\"\n      rollup:\n        | { type: \"number\"; number: number | null; function: RollupFunction }\n        | { type: \"date\"; date: DateResponse | null; function: RollupFunction }\n        | {\n            type: \"array\"\n            array: Array<\n              | { type: \"title\"; title: Array<RichTextItemResponse> }\n              | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse> }\n              | { type: \"number\"; number: number | null }\n              | { type: \"url\"; url: string | null }\n              | { type: \"select\"; select: SelectPropertyResponse | null }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                }\n              | { type: \"people\"; people: Array<PartialUserObjectResponse> }\n              | { type: \"email\"; email: string | null }\n              | { type: \"phone_number\"; phone_number: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                }\n              | { type: \"checkbox\"; checkbox: boolean }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                }\n              | { type: \"relation\"; relation: Array<{ id: string }> }\n              | { type: \"created_time\"; created_time: string }\n              | { type: \"created_by\"; created_by: PartialUserObjectResponse }\n              | { type: \"last_edited_time\"; last_edited_time: string }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                }\n            >\n            function: RollupFunction\n          }\n        | {\n            type: \"unsupported\"\n            unsupported: EmptyObject\n            function: RollupFunction\n          }\n      object: \"list\"\n      results: Array<UserObjectResponse>\n      next_cursor: string | null\n      has_more: boolean\n    }\n  | {\n      object: \"list\"\n      results: Array<UserObjectResponse>\n      next_cursor: string | null\n      has_more: boolean\n    }\n\nexport const listUsers = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (): string => `users`,\n} as const\n\ntype CreatePageBodyParameters =\n  | {\n      parent: { database_id: IdRequest; type?: \"database_id\" }\n      properties:\n        | Record<\n            string,\n            | { title: Array<RichTextItemRequest>; type?: \"title\" }\n            | { rich_text: Array<RichTextItemRequest>; type?: \"rich_text\" }\n            | { number: number | null; type?: \"number\" }\n            | { url: TextRequest | null; type?: \"url\" }\n            | {\n                select:\n                  | {\n                      id: StringRequest\n                      name?: StringRequest\n                      color?: SelectColor\n                    }\n                  | null\n                  | {\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }\n                  | null\n                type?: \"select\"\n              }\n            | {\n                multi_select: Array<\n                  | {\n                      id: StringRequest\n                      name?: StringRequest\n                      color?: SelectColor\n                    }\n                  | {\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }\n                >\n                type?: \"multi_select\"\n              }\n            | {\n                people: Array<\n                  | { id: IdRequest }\n                  | {\n                      person: { email?: string }\n                      id: IdRequest\n                      type?: \"person\"\n                      name?: string | null\n                      avatar_url?: string | null\n                      object?: \"user\"\n                    }\n                  | {\n                      bot:\n                        | EmptyObject\n                        | {\n                            owner:\n                              | {\n                                  type: \"user\"\n                                  user:\n                                    | {\n                                        type: \"person\"\n                                        person: { email: string }\n                                        name: string | null\n                                        avatar_url: string | null\n                                        id: IdRequest\n                                        object: \"user\"\n                                      }\n                                    | { id: IdRequest; object: \"user\" }\n                                }\n                              | { type: \"workspace\"; workspace: true }\n                          }\n                      id: IdRequest\n                      type?: \"bot\"\n                      name?: string | null\n                      avatar_url?: string | null\n                      object?: \"user\"\n                    }\n                >\n                type?: \"people\"\n              }\n            | { email: StringRequest | null; type?: \"email\" }\n            | { phone_number: StringRequest | null; type?: \"phone_number\" }\n            | { date: DateRequest | null; type?: \"date\" }\n            | { checkbox: boolean; type?: \"checkbox\" }\n            | { relation: Array<{ id: IdRequest }>; type?: \"relation\" }\n            | {\n                files: Array<\n                  | {\n                      file: { url: string; expiry_time?: string }\n                      name: StringRequest\n                      type?: \"file\"\n                    }\n                  | {\n                      external: { url: TextRequest }\n                      name: StringRequest\n                      type?: \"external\"\n                    }\n                >\n                type?: \"files\"\n              }\n          >\n        | Record<\n            string,\n            | Array<RichTextItemRequest>\n            | Array<RichTextItemRequest>\n            | number\n            | null\n            | TextRequest\n            | null\n            | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n            | null\n            | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n            | null\n            | Array<\n                | {\n                    id: StringRequest\n                    name?: StringRequest\n                    color?: SelectColor\n                  }\n                | {\n                    name: StringRequest\n                    id?: StringRequest\n                    color?: SelectColor\n                  }\n              >\n            | Array<\n                | { id: IdRequest }\n                | {\n                    person: { email?: string }\n                    id: IdRequest\n                    type?: \"person\"\n                    name?: string | null\n                    avatar_url?: string | null\n                    object?: \"user\"\n                  }\n                | {\n                    bot:\n                      | EmptyObject\n                      | {\n                          owner:\n                            | {\n                                type: \"user\"\n                                user:\n                                  | {\n                                      type: \"person\"\n                                      person: { email: string }\n                                      name: string | null\n                                      avatar_url: string | null\n                                      id: IdRequest\n                                      object: \"user\"\n                                    }\n                                  | { id: IdRequest; object: \"user\" }\n                              }\n                            | { type: \"workspace\"; workspace: true }\n                        }\n                    id: IdRequest\n                    type?: \"bot\"\n                    name?: string | null\n                    avatar_url?: string | null\n                    object?: \"user\"\n                  }\n              >\n            | StringRequest\n            | null\n            | StringRequest\n            | null\n            | DateRequest\n            | null\n            | boolean\n            | Array<{ id: IdRequest }>\n            | Array<\n                | {\n                    file: { url: string; expiry_time?: string }\n                    name: StringRequest\n                    type?: \"file\"\n                  }\n                | {\n                    external: { url: TextRequest }\n                    name: StringRequest\n                    type?: \"external\"\n                  }\n              >\n          >\n      icon?:\n        | { emoji: EmojiRequest; type?: \"emoji\" }\n        | null\n        | { external: { url: TextRequest }; type?: \"external\" }\n        | null\n      cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n      content?: Array<BlockObjectRequest>\n      children?: Array<BlockObjectRequest>\n    }\n  | {\n      parent: { page_id: IdRequest; type?: \"page_id\" }\n      properties: {\n        title?:\n          | { title: Array<RichTextItemRequest>; type?: \"title\" }\n          | Array<RichTextItemRequest>\n      }\n      icon?:\n        | { emoji: EmojiRequest; type?: \"emoji\" }\n        | null\n        | { external: { url: TextRequest }; type?: \"external\" }\n        | null\n      cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n      children?: Array<BlockObjectRequest>\n    }\n\nexport type CreatePageParameters = CreatePageBodyParameters\n\nexport type CreatePageResponse =\n  | {\n      parent:\n        | { type: \"database_id\"; database_id: IdRequest }\n        | { type: \"page_id\"; page_id: IdRequest }\n        | { type: \"workspace\"; workspace: true }\n      properties: Record<\n        string,\n        | { type: \"title\"; title: Array<RichTextItemResponse>; id: string }\n        | {\n            type: \"rich_text\"\n            rich_text: Array<RichTextItemResponse>\n            id: string\n          }\n        | { type: \"number\"; number: number | null; id: string }\n        | { type: \"url\"; url: string | null; id: string }\n        | { type: \"select\"; select: SelectPropertyResponse | null; id: string }\n        | {\n            type: \"multi_select\"\n            multi_select: Array<SelectPropertyResponse>\n            id: string\n          }\n        | {\n            type: \"people\"\n            people: Array<PartialUserObjectResponse>\n            id: string\n          }\n        | { type: \"email\"; email: string | null; id: string }\n        | { type: \"phone_number\"; phone_number: string | null; id: string }\n        | { type: \"date\"; date: DateResponse | null; id: string }\n        | {\n            type: \"files\"\n            files: Array<\n              | {\n                  file: { url: string; expiry_time: string }\n                  name: StringRequest\n                  type?: \"file\"\n                }\n              | {\n                  external: { url: TextRequest }\n                  name: StringRequest\n                  type?: \"external\"\n                }\n            >\n            id: string\n          }\n        | { type: \"checkbox\"; checkbox: boolean; id: string }\n        | {\n            type: \"formula\"\n            formula:\n              | { type: \"string\"; string: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | { type: \"number\"; number: number | null }\n              | { type: \"boolean\"; boolean: boolean | null }\n            id: string\n          }\n        | { type: \"relation\"; relation: Array<{ id: string }>; id: string }\n        | { type: \"created_time\"; created_time: string; id: string }\n        | {\n            type: \"created_by\"\n            created_by: PartialUserObjectResponse\n            id: string\n          }\n        | { type: \"last_edited_time\"; last_edited_time: string; id: string }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: PartialUserObjectResponse\n            id: string\n          }\n        | {\n            type: \"rollup\"\n            rollup:\n              | {\n                  type: \"number\"\n                  number: number | null\n                  function: RollupFunction\n                }\n              | {\n                  type: \"date\"\n                  date: DateResponse | null\n                  function: RollupFunction\n                }\n              | {\n                  type: \"array\"\n                  array: Array<\n                    | { type: \"title\"; title: Array<RichTextItemResponse> }\n                    | {\n                        type: \"rich_text\"\n                        rich_text: Array<RichTextItemResponse>\n                      }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"url\"; url: string | null }\n                    | { type: \"select\"; select: SelectPropertyResponse | null }\n                    | {\n                        type: \"multi_select\"\n                        multi_select: Array<SelectPropertyResponse>\n                      }\n                    | {\n                        type: \"people\"\n                        people: Array<PartialUserObjectResponse>\n                      }\n                    | { type: \"email\"; email: string | null }\n                    | { type: \"phone_number\"; phone_number: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | {\n                        type: \"files\"\n                        files: Array<\n                          | {\n                              file: { url: string; expiry_time: string }\n                              name: StringRequest\n                              type?: \"file\"\n                            }\n                          | {\n                              external: { url: TextRequest }\n                              name: StringRequest\n                              type?: \"external\"\n                            }\n                        >\n                      }\n                    | { type: \"checkbox\"; checkbox: boolean }\n                    | {\n                        type: \"formula\"\n                        formula:\n                          | { type: \"string\"; string: string | null }\n                          | { type: \"date\"; date: DateResponse | null }\n                          | { type: \"number\"; number: number | null }\n                          | { type: \"boolean\"; boolean: boolean | null }\n                      }\n                    | { type: \"relation\"; relation: Array<{ id: string }> }\n                    | { type: \"created_time\"; created_time: string }\n                    | {\n                        type: \"created_by\"\n                        created_by: PartialUserObjectResponse\n                      }\n                    | { type: \"last_edited_time\"; last_edited_time: string }\n                    | {\n                        type: \"last_edited_by\"\n                        last_edited_by: PartialUserObjectResponse\n                      }\n                  >\n                  function: RollupFunction\n                }\n              | {\n                  type: \"unsupported\"\n                  unsupported: EmptyObject\n                  function: RollupFunction\n                }\n            id: string\n          }\n      >\n      icon:\n        | { type: \"emoji\"; emoji: EmojiRequest }\n        | null\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      cover:\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      object: \"page\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      archived: boolean\n      url: string\n    }\n  | { object: \"page\"; id: string }\n\nexport const createPage = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"parent\", \"properties\", \"icon\", \"cover\", \"content\", \"children\"],\n  path: (): string => `pages`,\n} as const\n\ntype GetPagePathParameters = {\n  page_id: IdRequest\n}\n\nexport type GetPageParameters = GetPagePathParameters\n\nexport type GetPageResponse =\n  | {\n      parent:\n        | { type: \"database_id\"; database_id: IdRequest }\n        | { type: \"page_id\"; page_id: IdRequest }\n        | { type: \"workspace\"; workspace: true }\n      properties: Record<\n        string,\n        | { type: \"title\"; title: Array<RichTextItemResponse>; id: string }\n        | {\n            type: \"rich_text\"\n            rich_text: Array<RichTextItemResponse>\n            id: string\n          }\n        | { type: \"number\"; number: number | null; id: string }\n        | { type: \"url\"; url: string | null; id: string }\n        | { type: \"select\"; select: SelectPropertyResponse | null; id: string }\n        | {\n            type: \"multi_select\"\n            multi_select: Array<SelectPropertyResponse>\n            id: string\n          }\n        | {\n            type: \"people\"\n            people: Array<PartialUserObjectResponse>\n            id: string\n          }\n        | { type: \"email\"; email: string | null; id: string }\n        | { type: \"phone_number\"; phone_number: string | null; id: string }\n        | { type: \"date\"; date: DateResponse | null; id: string }\n        | {\n            type: \"files\"\n            files: Array<\n              | {\n                  file: { url: string; expiry_time: string }\n                  name: StringRequest\n                  type?: \"file\"\n                }\n              | {\n                  external: { url: TextRequest }\n                  name: StringRequest\n                  type?: \"external\"\n                }\n            >\n            id: string\n          }\n        | { type: \"checkbox\"; checkbox: boolean; id: string }\n        | {\n            type: \"formula\"\n            formula:\n              | { type: \"string\"; string: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | { type: \"number\"; number: number | null }\n              | { type: \"boolean\"; boolean: boolean | null }\n            id: string\n          }\n        | { type: \"relation\"; relation: Array<{ id: string }>; id: string }\n        | { type: \"created_time\"; created_time: string; id: string }\n        | {\n            type: \"created_by\"\n            created_by: PartialUserObjectResponse\n            id: string\n          }\n        | { type: \"last_edited_time\"; last_edited_time: string; id: string }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: PartialUserObjectResponse\n            id: string\n          }\n        | {\n            type: \"rollup\"\n            rollup:\n              | {\n                  type: \"number\"\n                  number: number | null\n                  function: RollupFunction\n                }\n              | {\n                  type: \"date\"\n                  date: DateResponse | null\n                  function: RollupFunction\n                }\n              | {\n                  type: \"array\"\n                  array: Array<\n                    | { type: \"title\"; title: Array<RichTextItemResponse> }\n                    | {\n                        type: \"rich_text\"\n                        rich_text: Array<RichTextItemResponse>\n                      }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"url\"; url: string | null }\n                    | { type: \"select\"; select: SelectPropertyResponse | null }\n                    | {\n                        type: \"multi_select\"\n                        multi_select: Array<SelectPropertyResponse>\n                      }\n                    | {\n                        type: \"people\"\n                        people: Array<PartialUserObjectResponse>\n                      }\n                    | { type: \"email\"; email: string | null }\n                    | { type: \"phone_number\"; phone_number: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | {\n                        type: \"files\"\n                        files: Array<\n                          | {\n                              file: { url: string; expiry_time: string }\n                              name: StringRequest\n                              type?: \"file\"\n                            }\n                          | {\n                              external: { url: TextRequest }\n                              name: StringRequest\n                              type?: \"external\"\n                            }\n                        >\n                      }\n                    | { type: \"checkbox\"; checkbox: boolean }\n                    | {\n                        type: \"formula\"\n                        formula:\n                          | { type: \"string\"; string: string | null }\n                          | { type: \"date\"; date: DateResponse | null }\n                          | { type: \"number\"; number: number | null }\n                          | { type: \"boolean\"; boolean: boolean | null }\n                      }\n                    | { type: \"relation\"; relation: Array<{ id: string }> }\n                    | { type: \"created_time\"; created_time: string }\n                    | {\n                        type: \"created_by\"\n                        created_by: PartialUserObjectResponse\n                      }\n                    | { type: \"last_edited_time\"; last_edited_time: string }\n                    | {\n                        type: \"last_edited_by\"\n                        last_edited_by: PartialUserObjectResponse\n                      }\n                  >\n                  function: RollupFunction\n                }\n              | {\n                  type: \"unsupported\"\n                  unsupported: EmptyObject\n                  function: RollupFunction\n                }\n            id: string\n          }\n      >\n      icon:\n        | { type: \"emoji\"; emoji: EmojiRequest }\n        | null\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      cover:\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      object: \"page\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      archived: boolean\n      url: string\n    }\n  | { object: \"page\"; id: string }\n\nexport const getPage = {\n  method: \"get\",\n  pathParams: [\"page_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetPagePathParameters): string => `pages/${p.page_id}`,\n} as const\n\ntype UpdatePagePathParameters = {\n  page_id: IdRequest\n}\n\ntype UpdatePageBodyParameters = {\n  properties?:\n    | Record<\n        string,\n        | { title: Array<RichTextItemRequest>; type?: \"title\" }\n        | { rich_text: Array<RichTextItemRequest>; type?: \"rich_text\" }\n        | { number: number | null; type?: \"number\" }\n        | { url: TextRequest | null; type?: \"url\" }\n        | {\n            select:\n              | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n              | null\n              | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n              | null\n            type?: \"select\"\n          }\n        | {\n            multi_select: Array<\n              | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n              | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n            >\n            type?: \"multi_select\"\n          }\n        | {\n            people: Array<\n              | { id: IdRequest }\n              | {\n                  person: { email?: string }\n                  id: IdRequest\n                  type?: \"person\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n              | {\n                  bot:\n                    | EmptyObject\n                    | {\n                        owner:\n                          | {\n                              type: \"user\"\n                              user:\n                                | {\n                                    type: \"person\"\n                                    person: { email: string }\n                                    name: string | null\n                                    avatar_url: string | null\n                                    id: IdRequest\n                                    object: \"user\"\n                                  }\n                                | { id: IdRequest; object: \"user\" }\n                            }\n                          | { type: \"workspace\"; workspace: true }\n                      }\n                  id: IdRequest\n                  type?: \"bot\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n            >\n            type?: \"people\"\n          }\n        | { email: StringRequest | null; type?: \"email\" }\n        | { phone_number: StringRequest | null; type?: \"phone_number\" }\n        | { date: DateRequest | null; type?: \"date\" }\n        | { checkbox: boolean; type?: \"checkbox\" }\n        | { relation: Array<{ id: IdRequest }>; type?: \"relation\" }\n        | {\n            files: Array<\n              | {\n                  file: { url: string; expiry_time?: string }\n                  name: StringRequest\n                  type?: \"file\"\n                }\n              | {\n                  external: { url: TextRequest }\n                  name: StringRequest\n                  type?: \"external\"\n                }\n            >\n            type?: \"files\"\n          }\n      >\n    | Record<\n        string,\n        | Array<RichTextItemRequest>\n        | Array<RichTextItemRequest>\n        | number\n        | null\n        | TextRequest\n        | null\n        | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n        | null\n        | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n        | null\n        | Array<\n            | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n            | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n          >\n        | Array<\n            | { id: IdRequest }\n            | {\n                person: { email?: string }\n                id: IdRequest\n                type?: \"person\"\n                name?: string | null\n                avatar_url?: string | null\n                object?: \"user\"\n              }\n            | {\n                bot:\n                  | EmptyObject\n                  | {\n                      owner:\n                        | {\n                            type: \"user\"\n                            user:\n                              | {\n                                  type: \"person\"\n                                  person: { email: string }\n                                  name: string | null\n                                  avatar_url: string | null\n                                  id: IdRequest\n                                  object: \"user\"\n                                }\n                              | { id: IdRequest; object: \"user\" }\n                          }\n                        | { type: \"workspace\"; workspace: true }\n                    }\n                id: IdRequest\n                type?: \"bot\"\n                name?: string | null\n                avatar_url?: string | null\n                object?: \"user\"\n              }\n          >\n        | StringRequest\n        | null\n        | StringRequest\n        | null\n        | DateRequest\n        | null\n        | boolean\n        | Array<{ id: IdRequest }>\n        | Array<\n            | {\n                file: { url: string; expiry_time?: string }\n                name: StringRequest\n                type?: \"file\"\n              }\n            | {\n                external: { url: TextRequest }\n                name: StringRequest\n                type?: \"external\"\n              }\n          >\n      >\n  icon?:\n    | { emoji: EmojiRequest; type?: \"emoji\" }\n    | null\n    | { external: { url: TextRequest }; type?: \"external\" }\n    | null\n  cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n  archived?: boolean\n}\n\nexport type UpdatePageParameters = UpdatePagePathParameters &\n  UpdatePageBodyParameters\n\nexport type UpdatePageResponse =\n  | {\n      parent:\n        | { type: \"database_id\"; database_id: IdRequest }\n        | { type: \"page_id\"; page_id: IdRequest }\n        | { type: \"workspace\"; workspace: true }\n      properties: Record<\n        string,\n        | { type: \"title\"; title: Array<RichTextItemResponse>; id: string }\n        | {\n            type: \"rich_text\"\n            rich_text: Array<RichTextItemResponse>\n            id: string\n          }\n        | { type: \"number\"; number: number | null; id: string }\n        | { type: \"url\"; url: string | null; id: string }\n        | { type: \"select\"; select: SelectPropertyResponse | null; id: string }\n        | {\n            type: \"multi_select\"\n            multi_select: Array<SelectPropertyResponse>\n            id: string\n          }\n        | {\n            type: \"people\"\n            people: Array<PartialUserObjectResponse>\n            id: string\n          }\n        | { type: \"email\"; email: string | null; id: string }\n        | { type: \"phone_number\"; phone_number: string | null; id: string }\n        | { type: \"date\"; date: DateResponse | null; id: string }\n        | {\n            type: \"files\"\n            files: Array<\n              | {\n                  file: { url: string; expiry_time: string }\n                  name: StringRequest\n                  type?: \"file\"\n                }\n              | {\n                  external: { url: TextRequest }\n                  name: StringRequest\n                  type?: \"external\"\n                }\n            >\n            id: string\n          }\n        | { type: \"checkbox\"; checkbox: boolean; id: string }\n        | {\n            type: \"formula\"\n            formula:\n              | { type: \"string\"; string: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | { type: \"number\"; number: number | null }\n              | { type: \"boolean\"; boolean: boolean | null }\n            id: string\n          }\n        | { type: \"relation\"; relation: Array<{ id: string }>; id: string }\n        | { type: \"created_time\"; created_time: string; id: string }\n        | {\n            type: \"created_by\"\n            created_by: PartialUserObjectResponse\n            id: string\n          }\n        | { type: \"last_edited_time\"; last_edited_time: string; id: string }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: PartialUserObjectResponse\n            id: string\n          }\n        | {\n            type: \"rollup\"\n            rollup:\n              | {\n                  type: \"number\"\n                  number: number | null\n                  function: RollupFunction\n                }\n              | {\n                  type: \"date\"\n                  date: DateResponse | null\n                  function: RollupFunction\n                }\n              | {\n                  type: \"array\"\n                  array: Array<\n                    | { type: \"title\"; title: Array<RichTextItemResponse> }\n                    | {\n                        type: \"rich_text\"\n                        rich_text: Array<RichTextItemResponse>\n                      }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"url\"; url: string | null }\n                    | { type: \"select\"; select: SelectPropertyResponse | null }\n                    | {\n                        type: \"multi_select\"\n                        multi_select: Array<SelectPropertyResponse>\n                      }\n                    | {\n                        type: \"people\"\n                        people: Array<PartialUserObjectResponse>\n                      }\n                    | { type: \"email\"; email: string | null }\n                    | { type: \"phone_number\"; phone_number: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | {\n                        type: \"files\"\n                        files: Array<\n                          | {\n                              file: { url: string; expiry_time: string }\n                              name: StringRequest\n                              type?: \"file\"\n                            }\n                          | {\n                              external: { url: TextRequest }\n                              name: StringRequest\n                              type?: \"external\"\n                            }\n                        >\n                      }\n                    | { type: \"checkbox\"; checkbox: boolean }\n                    | {\n                        type: \"formula\"\n                        formula:\n                          | { type: \"string\"; string: string | null }\n                          | { type: \"date\"; date: DateResponse | null }\n                          | { type: \"number\"; number: number | null }\n                          | { type: \"boolean\"; boolean: boolean | null }\n                      }\n                    | { type: \"relation\"; relation: Array<{ id: string }> }\n                    | { type: \"created_time\"; created_time: string }\n                    | {\n                        type: \"created_by\"\n                        created_by: PartialUserObjectResponse\n                      }\n                    | { type: \"last_edited_time\"; last_edited_time: string }\n                    | {\n                        type: \"last_edited_by\"\n                        last_edited_by: PartialUserObjectResponse\n                      }\n                  >\n                  function: RollupFunction\n                }\n              | {\n                  type: \"unsupported\"\n                  unsupported: EmptyObject\n                  function: RollupFunction\n                }\n            id: string\n          }\n      >\n      icon:\n        | { type: \"emoji\"; emoji: EmojiRequest }\n        | null\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      cover:\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      object: \"page\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      archived: boolean\n      url: string\n    }\n  | { object: \"page\"; id: string }\n\nexport const updatePage = {\n  method: \"patch\",\n  pathParams: [\"page_id\"],\n  queryParams: [],\n  bodyParams: [\"properties\", \"icon\", \"cover\", \"archived\"],\n  path: (p: UpdatePagePathParameters): string => `pages/${p.page_id}`,\n} as const\n\ntype GetPagePropertyPathParameters = {\n  page_id: IdRequest\n  property_id: string\n}\n\ntype GetPagePropertyQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type GetPagePropertyParameters = GetPagePropertyPathParameters &\n  GetPagePropertyQueryParameters\n\nexport type GetPagePropertyResponse =\n  | { type: \"number\"; number: number | null; object: \"property_item\" }\n  | { type: \"url\"; url: string | null; object: \"property_item\" }\n  | {\n      type: \"select\"\n      select: SelectPropertyResponse | null\n      object: \"property_item\"\n    }\n  | {\n      type: \"multi_select\"\n      multi_select: Array<SelectPropertyResponse>\n      object: \"property_item\"\n    }\n  | { type: \"date\"; date: DateResponse | null; object: \"property_item\" }\n  | { type: \"email\"; email: string | null; object: \"property_item\" }\n  | {\n      type: \"phone_number\"\n      phone_number: string | null\n      object: \"property_item\"\n    }\n  | { type: \"checkbox\"; checkbox: boolean; object: \"property_item\" }\n  | {\n      type: \"files\"\n      files: Array<\n        | {\n            file: { url: string; expiry_time: string }\n            name: StringRequest\n            type?: \"file\"\n          }\n        | {\n            external: { url: TextRequest }\n            name: StringRequest\n            type?: \"external\"\n          }\n      >\n      object: \"property_item\"\n    }\n  | {\n      type: \"created_by\"\n      created_by: PartialUserObjectResponse\n      object: \"property_item\"\n    }\n  | { type: \"created_time\"; created_time: string; object: \"property_item\" }\n  | {\n      type: \"last_edited_by\"\n      last_edited_by: PartialUserObjectResponse\n      object: \"property_item\"\n    }\n  | {\n      type: \"last_edited_time\"\n      last_edited_time: string\n      object: \"property_item\"\n    }\n  | {\n      type: \"formula\"\n      formula:\n        | { type: \"string\"; string: string | null }\n        | { type: \"date\"; date: DateResponse | null }\n        | { type: \"number\"; number: number | null }\n        | { type: \"boolean\"; boolean: boolean | null }\n      object: \"property_item\"\n    }\n  | { type: \"title\"; title: RichTextItemResponse; object: \"property_item\" }\n  | {\n      type: \"rich_text\"\n      rich_text: RichTextItemResponse\n      object: \"property_item\"\n    }\n  | {\n      type: \"people\"\n      people: PartialUserObjectResponse\n      object: \"property_item\"\n    }\n  | { type: \"relation\"; relation: { id: string }; object: \"property_item\" }\n  | {\n      type: \"rollup\"\n      rollup:\n        | { type: \"number\"; number: number | null; function: RollupFunction }\n        | { type: \"date\"; date: DateResponse | null; function: RollupFunction }\n        | {\n            type: \"array\"\n            array: Array<\n              | { type: \"title\"; title: Array<RichTextItemResponse> }\n              | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse> }\n              | { type: \"number\"; number: number | null }\n              | { type: \"url\"; url: string | null }\n              | { type: \"select\"; select: SelectPropertyResponse | null }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                }\n              | { type: \"people\"; people: Array<PartialUserObjectResponse> }\n              | { type: \"email\"; email: string | null }\n              | { type: \"phone_number\"; phone_number: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                }\n              | { type: \"checkbox\"; checkbox: boolean }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                }\n              | { type: \"relation\"; relation: Array<{ id: string }> }\n              | { type: \"created_time\"; created_time: string }\n              | { type: \"created_by\"; created_by: PartialUserObjectResponse }\n              | { type: \"last_edited_time\"; last_edited_time: string }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                }\n            >\n            function: RollupFunction\n          }\n        | {\n            type: \"unsupported\"\n            unsupported: EmptyObject\n            function: RollupFunction\n          }\n      object: \"list\"\n      results: Array<\n        | { type: \"number\"; number: number | null; object: \"property_item\" }\n        | { type: \"url\"; url: string | null; object: \"property_item\" }\n        | {\n            type: \"select\"\n            select: SelectPropertyResponse | null\n            object: \"property_item\"\n          }\n        | {\n            type: \"multi_select\"\n            multi_select: Array<SelectPropertyResponse>\n            object: \"property_item\"\n          }\n        | { type: \"date\"; date: DateResponse | null; object: \"property_item\" }\n        | { type: \"email\"; email: string | null; object: \"property_item\" }\n        | {\n            type: \"phone_number\"\n            phone_number: string | null\n            object: \"property_item\"\n          }\n        | { type: \"checkbox\"; checkbox: boolean; object: \"property_item\" }\n        | {\n            type: \"files\"\n            files: Array<\n              | {\n                  file: { url: string; expiry_time: string }\n                  name: StringRequest\n                  type?: \"file\"\n                }\n              | {\n                  external: { url: TextRequest }\n                  name: StringRequest\n                  type?: \"external\"\n                }\n            >\n            object: \"property_item\"\n          }\n        | {\n            type: \"created_by\"\n            created_by: PartialUserObjectResponse\n            object: \"property_item\"\n          }\n        | {\n            type: \"created_time\"\n            created_time: string\n            object: \"property_item\"\n          }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: PartialUserObjectResponse\n            object: \"property_item\"\n          }\n        | {\n            type: \"last_edited_time\"\n            last_edited_time: string\n            object: \"property_item\"\n          }\n        | {\n            type: \"formula\"\n            formula:\n              | { type: \"string\"; string: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | { type: \"number\"; number: number | null }\n              | { type: \"boolean\"; boolean: boolean | null }\n            object: \"property_item\"\n          }\n        | {\n            type: \"title\"\n            title: RichTextItemResponse\n            object: \"property_item\"\n          }\n        | {\n            type: \"rich_text\"\n            rich_text: RichTextItemResponse\n            object: \"property_item\"\n          }\n        | {\n            type: \"people\"\n            people: PartialUserObjectResponse\n            object: \"property_item\"\n          }\n        | {\n            type: \"relation\"\n            relation: { id: string }\n            object: \"property_item\"\n          }\n      >\n      next_cursor: string | null\n      has_more: boolean\n    }\n  | {\n      object: \"list\"\n      results: Array<\n        | { type: \"number\"; number: number | null; object: \"property_item\" }\n        | { type: \"url\"; url: string | null; object: \"property_item\" }\n        | {\n            type: \"select\"\n            select: SelectPropertyResponse | null\n            object: \"property_item\"\n          }\n        | {\n            type: \"multi_select\"\n            multi_select: Array<SelectPropertyResponse>\n            object: \"property_item\"\n          }\n        | { type: \"date\"; date: DateResponse | null; object: \"property_item\" }\n        | { type: \"email\"; email: string | null; object: \"property_item\" }\n        | {\n            type: \"phone_number\"\n            phone_number: string | null\n            object: \"property_item\"\n          }\n        | { type: \"checkbox\"; checkbox: boolean; object: \"property_item\" }\n        | {\n            type: \"files\"\n            files: Array<\n              | {\n                  file: { url: string; expiry_time: string }\n                  name: StringRequest\n                  type?: \"file\"\n                }\n              | {\n                  external: { url: TextRequest }\n                  name: StringRequest\n                  type?: \"external\"\n                }\n            >\n            object: \"property_item\"\n          }\n        | {\n            type: \"created_by\"\n            created_by: PartialUserObjectResponse\n            object: \"property_item\"\n          }\n        | {\n            type: \"created_time\"\n            created_time: string\n            object: \"property_item\"\n          }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: PartialUserObjectResponse\n            object: \"property_item\"\n          }\n        | {\n            type: \"last_edited_time\"\n            last_edited_time: string\n            object: \"property_item\"\n          }\n        | {\n            type: \"formula\"\n            formula:\n              | { type: \"string\"; string: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | { type: \"number\"; number: number | null }\n              | { type: \"boolean\"; boolean: boolean | null }\n            object: \"property_item\"\n          }\n        | {\n            type: \"title\"\n            title: RichTextItemResponse\n            object: \"property_item\"\n          }\n        | {\n            type: \"rich_text\"\n            rich_text: RichTextItemResponse\n            object: \"property_item\"\n          }\n        | {\n            type: \"people\"\n            people: PartialUserObjectResponse\n            object: \"property_item\"\n          }\n        | {\n            type: \"relation\"\n            relation: { id: string }\n            object: \"property_item\"\n          }\n      >\n      next_cursor: string | null\n      has_more: boolean\n    }\n\nexport const getPageProperty = {\n  method: \"get\",\n  pathParams: [\"page_id\", \"property_id\"],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (p: GetPagePropertyPathParameters): string =>\n    `pages/${p.page_id}/properties/${p.property_id}`,\n} as const\n\ntype GetBlockPathParameters = {\n  block_id: IdRequest\n}\n\nexport type GetBlockParameters = GetBlockPathParameters\n\nexport type GetBlockResponse = PartialBlockObjectResponse | BlockObjectResponse\n\nexport const getBlock = {\n  method: \"get\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype UpdateBlockPathParameters = {\n  block_id: IdRequest\n}\n\ntype UpdateBlockBodyParameters =\n  | {\n      embed: { url?: string; caption?: Array<RichTextItemRequest> }\n      type?: \"embed\"\n      archived?: boolean\n    }\n  | {\n      bookmark: { url?: string; caption?: Array<RichTextItemRequest> }\n      type?: \"bookmark\"\n      archived?: boolean\n    }\n  | {\n      image: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"image\"\n      archived?: boolean\n    }\n  | {\n      video: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"video\"\n      archived?: boolean\n    }\n  | {\n      pdf: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"pdf\"\n      archived?: boolean\n    }\n  | {\n      file: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"file\"\n      archived?: boolean\n    }\n  | {\n      audio: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"audio\"\n      archived?: boolean\n    }\n  | {\n      code: {\n        text?: Array<RichTextItemRequest>\n        language?: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      archived?: boolean\n    }\n  | { equation: { expression: string }; type?: \"equation\"; archived?: boolean }\n  | { divider: EmptyObject; type?: \"divider\"; archived?: boolean }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; archived?: boolean }\n  | {\n      table_of_contents: EmptyObject\n      type?: \"table_of_contents\"\n      archived?: boolean\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n      type?: \"link_to_page\"\n      archived?: boolean\n    }\n  | {\n      table_row: { cells: Array<Array<RichTextItemRequest>> }\n      type?: \"table_row\"\n      archived?: boolean\n    }\n  | {\n      heading_1: { text: Array<RichTextItemRequest> }\n      type?: \"heading_1\"\n      archived?: boolean\n    }\n  | {\n      heading_2: { text: Array<RichTextItemRequest> }\n      type?: \"heading_2\"\n      archived?: boolean\n    }\n  | {\n      heading_3: { text: Array<RichTextItemRequest> }\n      type?: \"heading_3\"\n      archived?: boolean\n    }\n  | {\n      paragraph: { text: Array<RichTextItemRequest> }\n      type?: \"paragraph\"\n      archived?: boolean\n    }\n  | {\n      bulleted_list_item: { text: Array<RichTextItemRequest> }\n      type?: \"bulleted_list_item\"\n      archived?: boolean\n    }\n  | {\n      numbered_list_item: { text: Array<RichTextItemRequest> }\n      type?: \"numbered_list_item\"\n      archived?: boolean\n    }\n  | {\n      quote: { text: Array<RichTextItemRequest> }\n      type?: \"quote\"\n      archived?: boolean\n    }\n  | {\n      to_do: { text?: Array<RichTextItemRequest>; checked?: boolean }\n      type?: \"to_do\"\n      archived?: boolean\n    }\n  | {\n      toggle: { text: Array<RichTextItemRequest> }\n      type?: \"toggle\"\n      archived?: boolean\n    }\n  | {\n      template: { text: Array<RichTextItemRequest> }\n      type?: \"template\"\n      archived?: boolean\n    }\n  | {\n      callout: {\n        text?: Array<RichTextItemRequest>\n        icon?:\n          | { emoji: EmojiRequest; type?: \"emoji\" }\n          | { external: { url: TextRequest }; type?: \"external\" }\n      }\n      type?: \"callout\"\n      archived?: boolean\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n      }\n      type?: \"synced_block\"\n      archived?: boolean\n    }\n  | {\n      table: { has_column_header?: boolean; has_row_header?: boolean }\n      type?: \"table\"\n      archived?: boolean\n    }\n  | { archived?: boolean }\n\nexport type UpdateBlockParameters = UpdateBlockPathParameters &\n  UpdateBlockBodyParameters\n\nexport type UpdateBlockResponse =\n  | PartialBlockObjectResponse\n  | BlockObjectResponse\n\nexport const updateBlock = {\n  method: \"patch\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [\n    \"embed\",\n    \"type\",\n    \"archived\",\n    \"bookmark\",\n    \"image\",\n    \"video\",\n    \"pdf\",\n    \"file\",\n    \"audio\",\n    \"code\",\n    \"equation\",\n    \"divider\",\n    \"breadcrumb\",\n    \"table_of_contents\",\n    \"link_to_page\",\n    \"table_row\",\n    \"heading_1\",\n    \"heading_2\",\n    \"heading_3\",\n    \"paragraph\",\n    \"bulleted_list_item\",\n    \"numbered_list_item\",\n    \"quote\",\n    \"to_do\",\n    \"toggle\",\n    \"template\",\n    \"callout\",\n    \"synced_block\",\n    \"table\",\n  ],\n  path: (p: UpdateBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype DeleteBlockPathParameters = {\n  block_id: IdRequest\n}\n\nexport type DeleteBlockParameters = DeleteBlockPathParameters\n\nexport type DeleteBlockResponse =\n  | PartialBlockObjectResponse\n  | BlockObjectResponse\n\nexport const deleteBlock = {\n  method: \"delete\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: DeleteBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype ListBlockChildrenPathParameters = {\n  block_id: IdRequest\n}\n\ntype ListBlockChildrenQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListBlockChildrenParameters = ListBlockChildrenPathParameters &\n  ListBlockChildrenQueryParameters\n\nexport type ListBlockChildrenResponse =\n  | {\n      type: \"rollup\"\n      rollup:\n        | { type: \"number\"; number: number | null; function: RollupFunction }\n        | { type: \"date\"; date: DateResponse | null; function: RollupFunction }\n        | {\n            type: \"array\"\n            array: Array<\n              | { type: \"title\"; title: Array<RichTextItemResponse> }\n              | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse> }\n              | { type: \"number\"; number: number | null }\n              | { type: \"url\"; url: string | null }\n              | { type: \"select\"; select: SelectPropertyResponse | null }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                }\n              | { type: \"people\"; people: Array<PartialUserObjectResponse> }\n              | { type: \"email\"; email: string | null }\n              | { type: \"phone_number\"; phone_number: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                }\n              | { type: \"checkbox\"; checkbox: boolean }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                }\n              | { type: \"relation\"; relation: Array<{ id: string }> }\n              | { type: \"created_time\"; created_time: string }\n              | { type: \"created_by\"; created_by: PartialUserObjectResponse }\n              | { type: \"last_edited_time\"; last_edited_time: string }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                }\n            >\n            function: RollupFunction\n          }\n        | {\n            type: \"unsupported\"\n            unsupported: EmptyObject\n            function: RollupFunction\n          }\n      object: \"list\"\n      results: Array<PartialBlockObjectResponse | BlockObjectResponse>\n      next_cursor: string | null\n      has_more: boolean\n    }\n  | {\n      object: \"list\"\n      results: Array<PartialBlockObjectResponse | BlockObjectResponse>\n      next_cursor: string | null\n      has_more: boolean\n    }\n\nexport const listBlockChildren = {\n  method: \"get\",\n  pathParams: [\"block_id\"],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (p: ListBlockChildrenPathParameters): string =>\n    `blocks/${p.block_id}/children`,\n} as const\n\ntype AppendBlockChildrenPathParameters = {\n  block_id: IdRequest\n}\n\ntype AppendBlockChildrenBodyParameters = { children: Array<BlockObjectRequest> }\n\nexport type AppendBlockChildrenParameters = AppendBlockChildrenPathParameters &\n  AppendBlockChildrenBodyParameters\n\nexport type AppendBlockChildrenResponse =\n  | {\n      type: \"rollup\"\n      rollup:\n        | { type: \"number\"; number: number | null; function: RollupFunction }\n        | { type: \"date\"; date: DateResponse | null; function: RollupFunction }\n        | {\n            type: \"array\"\n            array: Array<\n              | { type: \"title\"; title: Array<RichTextItemResponse> }\n              | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse> }\n              | { type: \"number\"; number: number | null }\n              | { type: \"url\"; url: string | null }\n              | { type: \"select\"; select: SelectPropertyResponse | null }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                }\n              | { type: \"people\"; people: Array<PartialUserObjectResponse> }\n              | { type: \"email\"; email: string | null }\n              | { type: \"phone_number\"; phone_number: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                }\n              | { type: \"checkbox\"; checkbox: boolean }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                }\n              | { type: \"relation\"; relation: Array<{ id: string }> }\n              | { type: \"created_time\"; created_time: string }\n              | { type: \"created_by\"; created_by: PartialUserObjectResponse }\n              | { type: \"last_edited_time\"; last_edited_time: string }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                }\n            >\n            function: RollupFunction\n          }\n        | {\n            type: \"unsupported\"\n            unsupported: EmptyObject\n            function: RollupFunction\n          }\n      object: \"list\"\n      results: Array<PartialBlockObjectResponse | BlockObjectResponse>\n      next_cursor: string | null\n      has_more: boolean\n    }\n  | {\n      object: \"list\"\n      results: Array<PartialBlockObjectResponse | BlockObjectResponse>\n      next_cursor: string | null\n      has_more: boolean\n    }\n\nexport const appendBlockChildren = {\n  method: \"patch\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [\"children\"],\n  path: (p: AppendBlockChildrenPathParameters): string =>\n    `blocks/${p.block_id}/children`,\n} as const\n\ntype GetDatabasePathParameters = {\n  database_id: IdRequest\n}\n\nexport type GetDatabaseParameters = GetDatabasePathParameters\n\nexport type GetDatabaseResponse =\n  | {\n      object: \"database\"\n      id: string\n      properties: Record<\n        string,\n        | {\n            type: \"number\"\n            number: { format: NumberFormat }\n            id: string\n            name: string\n          }\n        | {\n            type: \"formula\"\n            formula: { expression: string }\n            id: string\n            name: string\n          }\n        | {\n            type: \"select\"\n            select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"multi_select\"\n            multi_select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"relation\"\n            relation: {\n              database_id: IdRequest\n              synced_property_id: StringRequest\n              synced_property_name: StringRequest\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"rollup\"\n            rollup: {\n              rollup_property_name: string\n              relation_property_name: string\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n            }\n            id: string\n            name: string\n          }\n        | { type: \"title\"; title: EmptyObject; id: string; name: string }\n        | {\n            type: \"rich_text\"\n            rich_text: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"url\"; url: EmptyObject; id: string; name: string }\n        | { type: \"people\"; people: EmptyObject; id: string; name: string }\n        | { type: \"files\"; files: EmptyObject; id: string; name: string }\n        | { type: \"email\"; email: EmptyObject; id: string; name: string }\n        | {\n            type: \"phone_number\"\n            phone_number: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"date\"; date: EmptyObject; id: string; name: string }\n        | { type: \"checkbox\"; checkbox: EmptyObject; id: string; name: string }\n        | {\n            type: \"created_by\"\n            created_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"created_time\"\n            created_time: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_time\"\n            last_edited_time: EmptyObject\n            id: string\n            name: string\n          }\n      >\n    }\n  | {\n      title: Array<RichTextItemResponse>\n      icon:\n        | { type: \"emoji\"; emoji: EmojiRequest }\n        | null\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      cover:\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      properties: Record<\n        string,\n        | {\n            type: \"number\"\n            number: { format: NumberFormat }\n            id: string\n            name: string\n          }\n        | {\n            type: \"formula\"\n            formula: { expression: string }\n            id: string\n            name: string\n          }\n        | {\n            type: \"select\"\n            select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"multi_select\"\n            multi_select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"relation\"\n            relation: {\n              database_id: IdRequest\n              synced_property_id: StringRequest\n              synced_property_name: StringRequest\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"rollup\"\n            rollup: {\n              rollup_property_name: string\n              relation_property_name: string\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n            }\n            id: string\n            name: string\n          }\n        | { type: \"title\"; title: EmptyObject; id: string; name: string }\n        | {\n            type: \"rich_text\"\n            rich_text: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"url\"; url: EmptyObject; id: string; name: string }\n        | { type: \"people\"; people: EmptyObject; id: string; name: string }\n        | { type: \"files\"; files: EmptyObject; id: string; name: string }\n        | { type: \"email\"; email: EmptyObject; id: string; name: string }\n        | {\n            type: \"phone_number\"\n            phone_number: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"date\"; date: EmptyObject; id: string; name: string }\n        | { type: \"checkbox\"; checkbox: EmptyObject; id: string; name: string }\n        | {\n            type: \"created_by\"\n            created_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"created_time\"\n            created_time: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_time\"\n            last_edited_time: EmptyObject\n            id: string\n            name: string\n          }\n      >\n      parent:\n        | { type: \"page_id\"; page_id: string }\n        | { type: \"workspace\"; workspace: true }\n      object: \"database\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      url: string\n    }\n\nexport const getDatabase = {\n  method: \"get\",\n  pathParams: [\"database_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetDatabasePathParameters): string => `databases/${p.database_id}`,\n} as const\n\ntype UpdateDatabasePathParameters = {\n  database_id: IdRequest\n}\n\ntype UpdateDatabaseBodyParameters = {\n  title?: Array<RichTextItemRequest>\n  icon?:\n    | { emoji: EmojiRequest; type?: \"emoji\" }\n    | null\n    | { external: { url: TextRequest }; type?: \"external\" }\n    | null\n  cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n  properties?: Record<\n    string,\n    | { number: { format?: NumberFormat }; type?: \"number\"; name?: string }\n    | null\n    | { formula: { expression?: string }; type?: \"formula\"; name?: string }\n    | null\n    | {\n        select: {\n          options?: Array<\n            | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n            | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n          >\n        }\n        type?: \"select\"\n        name?: string\n      }\n    | null\n    | {\n        multi_select: {\n          options?: Array<\n            | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n            | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n          >\n        }\n        type?: \"multi_select\"\n        name?: string\n      }\n    | null\n    | { relation: { database_id: IdRequest }; type?: \"relation\"; name?: string }\n    | null\n    | {\n        rollup:\n          | {\n              rollup_property_name: string\n              relation_property_name: string\n              function: RollupFunction\n              rollup_property_id?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_name: string\n              relation_property_id: string\n              function: RollupFunction\n              relation_property_name?: string\n              rollup_property_id?: string\n            }\n          | {\n              relation_property_name: string\n              rollup_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_name?: string\n            }\n        type?: \"rollup\"\n        name?: string\n      }\n    | null\n    | { title: EmptyObject; type?: \"title\"; name?: string }\n    | null\n    | { rich_text: EmptyObject; type?: \"rich_text\"; name?: string }\n    | null\n    | { url: EmptyObject; type?: \"url\"; name?: string }\n    | null\n    | { people: EmptyObject; type?: \"people\"; name?: string }\n    | null\n    | { files: EmptyObject; type?: \"files\"; name?: string }\n    | null\n    | { email: EmptyObject; type?: \"email\"; name?: string }\n    | null\n    | { phone_number: EmptyObject; type?: \"phone_number\"; name?: string }\n    | null\n    | { date: EmptyObject; type?: \"date\"; name?: string }\n    | null\n    | { checkbox: EmptyObject; type?: \"checkbox\"; name?: string }\n    | null\n    | { created_by: EmptyObject; type?: \"created_by\"; name?: string }\n    | null\n    | { created_time: EmptyObject; type?: \"created_time\"; name?: string }\n    | null\n    | { last_edited_by: EmptyObject; type?: \"last_edited_by\"; name?: string }\n    | null\n    | {\n        last_edited_time: EmptyObject\n        type?: \"last_edited_time\"\n        name?: string\n      }\n    | null\n    | { name: string }\n    | null\n  >\n}\n\nexport type UpdateDatabaseParameters = UpdateDatabasePathParameters &\n  UpdateDatabaseBodyParameters\n\nexport type UpdateDatabaseResponse =\n  | {\n      object: \"database\"\n      id: string\n      properties: Record<\n        string,\n        | {\n            type: \"number\"\n            number: { format: NumberFormat }\n            id: string\n            name: string\n          }\n        | {\n            type: \"formula\"\n            formula: { expression: string }\n            id: string\n            name: string\n          }\n        | {\n            type: \"select\"\n            select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"multi_select\"\n            multi_select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"relation\"\n            relation: {\n              database_id: IdRequest\n              synced_property_id: StringRequest\n              synced_property_name: StringRequest\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"rollup\"\n            rollup: {\n              rollup_property_name: string\n              relation_property_name: string\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n            }\n            id: string\n            name: string\n          }\n        | { type: \"title\"; title: EmptyObject; id: string; name: string }\n        | {\n            type: \"rich_text\"\n            rich_text: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"url\"; url: EmptyObject; id: string; name: string }\n        | { type: \"people\"; people: EmptyObject; id: string; name: string }\n        | { type: \"files\"; files: EmptyObject; id: string; name: string }\n        | { type: \"email\"; email: EmptyObject; id: string; name: string }\n        | {\n            type: \"phone_number\"\n            phone_number: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"date\"; date: EmptyObject; id: string; name: string }\n        | { type: \"checkbox\"; checkbox: EmptyObject; id: string; name: string }\n        | {\n            type: \"created_by\"\n            created_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"created_time\"\n            created_time: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_time\"\n            last_edited_time: EmptyObject\n            id: string\n            name: string\n          }\n      >\n    }\n  | {\n      title: Array<RichTextItemResponse>\n      icon:\n        | { type: \"emoji\"; emoji: EmojiRequest }\n        | null\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      cover:\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      properties: Record<\n        string,\n        | {\n            type: \"number\"\n            number: { format: NumberFormat }\n            id: string\n            name: string\n          }\n        | {\n            type: \"formula\"\n            formula: { expression: string }\n            id: string\n            name: string\n          }\n        | {\n            type: \"select\"\n            select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"multi_select\"\n            multi_select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"relation\"\n            relation: {\n              database_id: IdRequest\n              synced_property_id: StringRequest\n              synced_property_name: StringRequest\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"rollup\"\n            rollup: {\n              rollup_property_name: string\n              relation_property_name: string\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n            }\n            id: string\n            name: string\n          }\n        | { type: \"title\"; title: EmptyObject; id: string; name: string }\n        | {\n            type: \"rich_text\"\n            rich_text: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"url\"; url: EmptyObject; id: string; name: string }\n        | { type: \"people\"; people: EmptyObject; id: string; name: string }\n        | { type: \"files\"; files: EmptyObject; id: string; name: string }\n        | { type: \"email\"; email: EmptyObject; id: string; name: string }\n        | {\n            type: \"phone_number\"\n            phone_number: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"date\"; date: EmptyObject; id: string; name: string }\n        | { type: \"checkbox\"; checkbox: EmptyObject; id: string; name: string }\n        | {\n            type: \"created_by\"\n            created_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"created_time\"\n            created_time: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_time\"\n            last_edited_time: EmptyObject\n            id: string\n            name: string\n          }\n      >\n      parent:\n        | { type: \"page_id\"; page_id: string }\n        | { type: \"workspace\"; workspace: true }\n      object: \"database\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      url: string\n    }\n\nexport const updateDatabase = {\n  method: \"patch\",\n  pathParams: [\"database_id\"],\n  queryParams: [],\n  bodyParams: [\"title\", \"icon\", \"cover\", \"properties\"],\n  path: (p: UpdateDatabasePathParameters): string =>\n    `databases/${p.database_id}`,\n} as const\n\ntype QueryDatabasePathParameters = {\n  database_id: IdRequest\n}\n\ntype QueryDatabaseBodyParameters = {\n  sorts?: Array<\n    | { property: string; direction: \"ascending\" | \"descending\" }\n    | {\n        timestamp: \"created_time\" | \"last_edited_time\"\n        direction: \"ascending\" | \"descending\"\n      }\n  >\n  filter?:\n    | {\n        or: Array<\n          | PropertyFilter\n          | { or: Array<PropertyFilter> }\n          | { and: Array<PropertyFilter> }\n        >\n      }\n    | {\n        and: Array<\n          | PropertyFilter\n          | { or: Array<PropertyFilter> }\n          | { and: Array<PropertyFilter> }\n        >\n      }\n    | PropertyFilter\n  start_cursor?: string\n  page_size?: number\n  archived?: boolean\n}\n\nexport type QueryDatabaseParameters = QueryDatabasePathParameters &\n  QueryDatabaseBodyParameters\n\nexport type QueryDatabaseResponse =\n  | {\n      type: \"rollup\"\n      rollup:\n        | { type: \"number\"; number: number | null; function: RollupFunction }\n        | { type: \"date\"; date: DateResponse | null; function: RollupFunction }\n        | {\n            type: \"array\"\n            array: Array<\n              | { type: \"title\"; title: Array<RichTextItemResponse> }\n              | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse> }\n              | { type: \"number\"; number: number | null }\n              | { type: \"url\"; url: string | null }\n              | { type: \"select\"; select: SelectPropertyResponse | null }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                }\n              | { type: \"people\"; people: Array<PartialUserObjectResponse> }\n              | { type: \"email\"; email: string | null }\n              | { type: \"phone_number\"; phone_number: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                }\n              | { type: \"checkbox\"; checkbox: boolean }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                }\n              | { type: \"relation\"; relation: Array<{ id: string }> }\n              | { type: \"created_time\"; created_time: string }\n              | { type: \"created_by\"; created_by: PartialUserObjectResponse }\n              | { type: \"last_edited_time\"; last_edited_time: string }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                }\n            >\n            function: RollupFunction\n          }\n        | {\n            type: \"unsupported\"\n            unsupported: EmptyObject\n            function: RollupFunction\n          }\n      object: \"list\"\n      results: Array<\n        | {\n            parent:\n              | { type: \"database_id\"; database_id: IdRequest }\n              | { type: \"page_id\"; page_id: IdRequest }\n              | { type: \"workspace\"; workspace: true }\n            properties: Record<\n              string,\n              | {\n                  type: \"title\"\n                  title: Array<RichTextItemResponse>\n                  id: string\n                }\n              | {\n                  type: \"rich_text\"\n                  rich_text: Array<RichTextItemResponse>\n                  id: string\n                }\n              | { type: \"number\"; number: number | null; id: string }\n              | { type: \"url\"; url: string | null; id: string }\n              | {\n                  type: \"select\"\n                  select: SelectPropertyResponse | null\n                  id: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                  id: string\n                }\n              | {\n                  type: \"people\"\n                  people: Array<PartialUserObjectResponse>\n                  id: string\n                }\n              | { type: \"email\"; email: string | null; id: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: string | null\n                  id: string\n                }\n              | { type: \"date\"; date: DateResponse | null; id: string }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                  id: string\n                }\n              | { type: \"checkbox\"; checkbox: boolean; id: string }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                  id: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: Array<{ id: string }>\n                  id: string\n                }\n              | { type: \"created_time\"; created_time: string; id: string }\n              | {\n                  type: \"created_by\"\n                  created_by: PartialUserObjectResponse\n                  id: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: string\n                  id: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                  id: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup:\n                    | {\n                        type: \"number\"\n                        number: number | null\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"date\"\n                        date: DateResponse | null\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"array\"\n                        array: Array<\n                          | {\n                              type: \"title\"\n                              title: Array<RichTextItemResponse>\n                            }\n                          | {\n                              type: \"rich_text\"\n                              rich_text: Array<RichTextItemResponse>\n                            }\n                          | { type: \"number\"; number: number | null }\n                          | { type: \"url\"; url: string | null }\n                          | {\n                              type: \"select\"\n                              select: SelectPropertyResponse | null\n                            }\n                          | {\n                              type: \"multi_select\"\n                              multi_select: Array<SelectPropertyResponse>\n                            }\n                          | {\n                              type: \"people\"\n                              people: Array<PartialUserObjectResponse>\n                            }\n                          | { type: \"email\"; email: string | null }\n                          | {\n                              type: \"phone_number\"\n                              phone_number: string | null\n                            }\n                          | { type: \"date\"; date: DateResponse | null }\n                          | {\n                              type: \"files\"\n                              files: Array<\n                                | {\n                                    file: { url: string; expiry_time: string }\n                                    name: StringRequest\n                                    type?: \"file\"\n                                  }\n                                | {\n                                    external: { url: TextRequest }\n                                    name: StringRequest\n                                    type?: \"external\"\n                                  }\n                              >\n                            }\n                          | { type: \"checkbox\"; checkbox: boolean }\n                          | {\n                              type: \"formula\"\n                              formula:\n                                | { type: \"string\"; string: string | null }\n                                | { type: \"date\"; date: DateResponse | null }\n                                | { type: \"number\"; number: number | null }\n                                | { type: \"boolean\"; boolean: boolean | null }\n                            }\n                          | {\n                              type: \"relation\"\n                              relation: Array<{ id: string }>\n                            }\n                          | { type: \"created_time\"; created_time: string }\n                          | {\n                              type: \"created_by\"\n                              created_by: PartialUserObjectResponse\n                            }\n                          | {\n                              type: \"last_edited_time\"\n                              last_edited_time: string\n                            }\n                          | {\n                              type: \"last_edited_by\"\n                              last_edited_by: PartialUserObjectResponse\n                            }\n                        >\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"unsupported\"\n                        unsupported: EmptyObject\n                        function: RollupFunction\n                      }\n                  id: string\n                }\n            >\n            icon:\n              | { type: \"emoji\"; emoji: EmojiRequest }\n              | null\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            cover:\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            object: \"page\"\n            id: string\n            created_time: string\n            last_edited_time: string\n            archived: boolean\n            url: string\n          }\n        | { object: \"page\"; id: string }\n      >\n      next_cursor: string | null\n      has_more: boolean\n    }\n  | {\n      object: \"list\"\n      results: Array<\n        | {\n            parent:\n              | { type: \"database_id\"; database_id: IdRequest }\n              | { type: \"page_id\"; page_id: IdRequest }\n              | { type: \"workspace\"; workspace: true }\n            properties: Record<\n              string,\n              | {\n                  type: \"title\"\n                  title: Array<RichTextItemResponse>\n                  id: string\n                }\n              | {\n                  type: \"rich_text\"\n                  rich_text: Array<RichTextItemResponse>\n                  id: string\n                }\n              | { type: \"number\"; number: number | null; id: string }\n              | { type: \"url\"; url: string | null; id: string }\n              | {\n                  type: \"select\"\n                  select: SelectPropertyResponse | null\n                  id: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                  id: string\n                }\n              | {\n                  type: \"people\"\n                  people: Array<PartialUserObjectResponse>\n                  id: string\n                }\n              | { type: \"email\"; email: string | null; id: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: string | null\n                  id: string\n                }\n              | { type: \"date\"; date: DateResponse | null; id: string }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                  id: string\n                }\n              | { type: \"checkbox\"; checkbox: boolean; id: string }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                  id: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: Array<{ id: string }>\n                  id: string\n                }\n              | { type: \"created_time\"; created_time: string; id: string }\n              | {\n                  type: \"created_by\"\n                  created_by: PartialUserObjectResponse\n                  id: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: string\n                  id: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                  id: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup:\n                    | {\n                        type: \"number\"\n                        number: number | null\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"date\"\n                        date: DateResponse | null\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"array\"\n                        array: Array<\n                          | {\n                              type: \"title\"\n                              title: Array<RichTextItemResponse>\n                            }\n                          | {\n                              type: \"rich_text\"\n                              rich_text: Array<RichTextItemResponse>\n                            }\n                          | { type: \"number\"; number: number | null }\n                          | { type: \"url\"; url: string | null }\n                          | {\n                              type: \"select\"\n                              select: SelectPropertyResponse | null\n                            }\n                          | {\n                              type: \"multi_select\"\n                              multi_select: Array<SelectPropertyResponse>\n                            }\n                          | {\n                              type: \"people\"\n                              people: Array<PartialUserObjectResponse>\n                            }\n                          | { type: \"email\"; email: string | null }\n                          | {\n                              type: \"phone_number\"\n                              phone_number: string | null\n                            }\n                          | { type: \"date\"; date: DateResponse | null }\n                          | {\n                              type: \"files\"\n                              files: Array<\n                                | {\n                                    file: { url: string; expiry_time: string }\n                                    name: StringRequest\n                                    type?: \"file\"\n                                  }\n                                | {\n                                    external: { url: TextRequest }\n                                    name: StringRequest\n                                    type?: \"external\"\n                                  }\n                              >\n                            }\n                          | { type: \"checkbox\"; checkbox: boolean }\n                          | {\n                              type: \"formula\"\n                              formula:\n                                | { type: \"string\"; string: string | null }\n                                | { type: \"date\"; date: DateResponse | null }\n                                | { type: \"number\"; number: number | null }\n                                | { type: \"boolean\"; boolean: boolean | null }\n                            }\n                          | {\n                              type: \"relation\"\n                              relation: Array<{ id: string }>\n                            }\n                          | { type: \"created_time\"; created_time: string }\n                          | {\n                              type: \"created_by\"\n                              created_by: PartialUserObjectResponse\n                            }\n                          | {\n                              type: \"last_edited_time\"\n                              last_edited_time: string\n                            }\n                          | {\n                              type: \"last_edited_by\"\n                              last_edited_by: PartialUserObjectResponse\n                            }\n                        >\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"unsupported\"\n                        unsupported: EmptyObject\n                        function: RollupFunction\n                      }\n                  id: string\n                }\n            >\n            icon:\n              | { type: \"emoji\"; emoji: EmojiRequest }\n              | null\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            cover:\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            object: \"page\"\n            id: string\n            created_time: string\n            last_edited_time: string\n            archived: boolean\n            url: string\n          }\n        | { object: \"page\"; id: string }\n      >\n      next_cursor: string | null\n      has_more: boolean\n    }\n\nexport const queryDatabase = {\n  method: \"post\",\n  pathParams: [\"database_id\"],\n  queryParams: [],\n  bodyParams: [\"sorts\", \"filter\", \"start_cursor\", \"page_size\", \"archived\"],\n  path: (p: QueryDatabasePathParameters): string =>\n    `databases/${p.database_id}/query`,\n} as const\n\ntype ListDatabasesQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListDatabasesParameters = ListDatabasesQueryParameters\n\nexport type ListDatabasesResponse =\n  | {\n      type: \"rollup\"\n      rollup:\n        | { type: \"number\"; number: number | null; function: RollupFunction }\n        | { type: \"date\"; date: DateResponse | null; function: RollupFunction }\n        | {\n            type: \"array\"\n            array: Array<\n              | { type: \"title\"; title: Array<RichTextItemResponse> }\n              | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse> }\n              | { type: \"number\"; number: number | null }\n              | { type: \"url\"; url: string | null }\n              | { type: \"select\"; select: SelectPropertyResponse | null }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                }\n              | { type: \"people\"; people: Array<PartialUserObjectResponse> }\n              | { type: \"email\"; email: string | null }\n              | { type: \"phone_number\"; phone_number: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                }\n              | { type: \"checkbox\"; checkbox: boolean }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                }\n              | { type: \"relation\"; relation: Array<{ id: string }> }\n              | { type: \"created_time\"; created_time: string }\n              | { type: \"created_by\"; created_by: PartialUserObjectResponse }\n              | { type: \"last_edited_time\"; last_edited_time: string }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                }\n            >\n            function: RollupFunction\n          }\n        | {\n            type: \"unsupported\"\n            unsupported: EmptyObject\n            function: RollupFunction\n          }\n      object: \"list\"\n      results: Array<\n        | {\n            object: \"database\"\n            id: string\n            properties: Record<\n              string,\n              | {\n                  type: \"number\"\n                  number: { format: NumberFormat }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"formula\"\n                  formula: { expression: string }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"select\"\n                  select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: {\n                    database_id: IdRequest\n                    synced_property_id: StringRequest\n                    synced_property_name: StringRequest\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup: {\n                    rollup_property_name: string\n                    relation_property_name: string\n                    rollup_property_id: string\n                    relation_property_id: string\n                    function: RollupFunction\n                  }\n                  id: string\n                  name: string\n                }\n              | { type: \"title\"; title: EmptyObject; id: string; name: string }\n              | {\n                  type: \"rich_text\"\n                  rich_text: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"url\"; url: EmptyObject; id: string; name: string }\n              | {\n                  type: \"people\"\n                  people: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"files\"; files: EmptyObject; id: string; name: string }\n              | { type: \"email\"; email: EmptyObject; id: string; name: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"date\"; date: EmptyObject; id: string; name: string }\n              | {\n                  type: \"checkbox\"\n                  checkbox: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_by\"\n                  created_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_time\"\n                  created_time: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: EmptyObject\n                  id: string\n                  name: string\n                }\n            >\n          }\n        | {\n            title: Array<RichTextItemResponse>\n            icon:\n              | { type: \"emoji\"; emoji: EmojiRequest }\n              | null\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            cover:\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            properties: Record<\n              string,\n              | {\n                  type: \"number\"\n                  number: { format: NumberFormat }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"formula\"\n                  formula: { expression: string }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"select\"\n                  select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: {\n                    database_id: IdRequest\n                    synced_property_id: StringRequest\n                    synced_property_name: StringRequest\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup: {\n                    rollup_property_name: string\n                    relation_property_name: string\n                    rollup_property_id: string\n                    relation_property_id: string\n                    function: RollupFunction\n                  }\n                  id: string\n                  name: string\n                }\n              | { type: \"title\"; title: EmptyObject; id: string; name: string }\n              | {\n                  type: \"rich_text\"\n                  rich_text: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"url\"; url: EmptyObject; id: string; name: string }\n              | {\n                  type: \"people\"\n                  people: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"files\"; files: EmptyObject; id: string; name: string }\n              | { type: \"email\"; email: EmptyObject; id: string; name: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"date\"; date: EmptyObject; id: string; name: string }\n              | {\n                  type: \"checkbox\"\n                  checkbox: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_by\"\n                  created_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_time\"\n                  created_time: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: EmptyObject\n                  id: string\n                  name: string\n                }\n            >\n            parent:\n              | { type: \"page_id\"; page_id: string }\n              | { type: \"workspace\"; workspace: true }\n            object: \"database\"\n            id: string\n            created_time: string\n            last_edited_time: string\n            url: string\n          }\n      >\n      next_cursor: string | null\n      has_more: boolean\n    }\n  | {\n      object: \"list\"\n      results: Array<\n        | {\n            object: \"database\"\n            id: string\n            properties: Record<\n              string,\n              | {\n                  type: \"number\"\n                  number: { format: NumberFormat }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"formula\"\n                  formula: { expression: string }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"select\"\n                  select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: {\n                    database_id: IdRequest\n                    synced_property_id: StringRequest\n                    synced_property_name: StringRequest\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup: {\n                    rollup_property_name: string\n                    relation_property_name: string\n                    rollup_property_id: string\n                    relation_property_id: string\n                    function: RollupFunction\n                  }\n                  id: string\n                  name: string\n                }\n              | { type: \"title\"; title: EmptyObject; id: string; name: string }\n              | {\n                  type: \"rich_text\"\n                  rich_text: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"url\"; url: EmptyObject; id: string; name: string }\n              | {\n                  type: \"people\"\n                  people: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"files\"; files: EmptyObject; id: string; name: string }\n              | { type: \"email\"; email: EmptyObject; id: string; name: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"date\"; date: EmptyObject; id: string; name: string }\n              | {\n                  type: \"checkbox\"\n                  checkbox: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_by\"\n                  created_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_time\"\n                  created_time: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: EmptyObject\n                  id: string\n                  name: string\n                }\n            >\n          }\n        | {\n            title: Array<RichTextItemResponse>\n            icon:\n              | { type: \"emoji\"; emoji: EmojiRequest }\n              | null\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            cover:\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            properties: Record<\n              string,\n              | {\n                  type: \"number\"\n                  number: { format: NumberFormat }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"formula\"\n                  formula: { expression: string }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"select\"\n                  select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: {\n                    database_id: IdRequest\n                    synced_property_id: StringRequest\n                    synced_property_name: StringRequest\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup: {\n                    rollup_property_name: string\n                    relation_property_name: string\n                    rollup_property_id: string\n                    relation_property_id: string\n                    function: RollupFunction\n                  }\n                  id: string\n                  name: string\n                }\n              | { type: \"title\"; title: EmptyObject; id: string; name: string }\n              | {\n                  type: \"rich_text\"\n                  rich_text: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"url\"; url: EmptyObject; id: string; name: string }\n              | {\n                  type: \"people\"\n                  people: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"files\"; files: EmptyObject; id: string; name: string }\n              | { type: \"email\"; email: EmptyObject; id: string; name: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"date\"; date: EmptyObject; id: string; name: string }\n              | {\n                  type: \"checkbox\"\n                  checkbox: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_by\"\n                  created_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_time\"\n                  created_time: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: EmptyObject\n                  id: string\n                  name: string\n                }\n            >\n            parent:\n              | { type: \"page_id\"; page_id: string }\n              | { type: \"workspace\"; workspace: true }\n            object: \"database\"\n            id: string\n            created_time: string\n            last_edited_time: string\n            url: string\n          }\n      >\n      next_cursor: string | null\n      has_more: boolean\n    }\n\nexport const listDatabases = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (): string => `databases`,\n} as const\n\ntype CreateDatabaseBodyParameters = {\n  parent: { page_id: IdRequest; type?: \"page_id\" }\n  properties: Record<\n    string,\n    | { number: { format?: NumberFormat }; type?: \"number\" }\n    | { formula: { expression?: string }; type?: \"formula\" }\n    | {\n        select: {\n          options?: Array<{ name: StringRequest; color?: SelectColor }>\n        }\n        type?: \"select\"\n      }\n    | {\n        multi_select: {\n          options?: Array<{ name: StringRequest; color?: SelectColor }>\n        }\n        type?: \"multi_select\"\n      }\n    | { relation: { database_id: IdRequest }; type?: \"relation\" }\n    | {\n        rollup:\n          | {\n              rollup_property_name: string\n              relation_property_name: string\n              function: RollupFunction\n              rollup_property_id?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_name: string\n              relation_property_id: string\n              function: RollupFunction\n              relation_property_name?: string\n              rollup_property_id?: string\n            }\n          | {\n              relation_property_name: string\n              rollup_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_name?: string\n            }\n        type?: \"rollup\"\n      }\n    | { title: EmptyObject; type?: \"title\" }\n    | { rich_text: EmptyObject; type?: \"rich_text\" }\n    | { url: EmptyObject; type?: \"url\" }\n    | { people: EmptyObject; type?: \"people\" }\n    | { files: EmptyObject; type?: \"files\" }\n    | { email: EmptyObject; type?: \"email\" }\n    | { phone_number: EmptyObject; type?: \"phone_number\" }\n    | { date: EmptyObject; type?: \"date\" }\n    | { checkbox: EmptyObject; type?: \"checkbox\" }\n    | { created_by: EmptyObject; type?: \"created_by\" }\n    | { created_time: EmptyObject; type?: \"created_time\" }\n    | { last_edited_by: EmptyObject; type?: \"last_edited_by\" }\n    | { last_edited_time: EmptyObject; type?: \"last_edited_time\" }\n  >\n  icon?:\n    | { emoji: EmojiRequest; type?: \"emoji\" }\n    | null\n    | { external: { url: TextRequest }; type?: \"external\" }\n    | null\n  cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n  title?: Array<RichTextItemRequest>\n}\n\nexport type CreateDatabaseParameters = CreateDatabaseBodyParameters\n\nexport type CreateDatabaseResponse =\n  | {\n      object: \"database\"\n      id: string\n      properties: Record<\n        string,\n        | {\n            type: \"number\"\n            number: { format: NumberFormat }\n            id: string\n            name: string\n          }\n        | {\n            type: \"formula\"\n            formula: { expression: string }\n            id: string\n            name: string\n          }\n        | {\n            type: \"select\"\n            select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"multi_select\"\n            multi_select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"relation\"\n            relation: {\n              database_id: IdRequest\n              synced_property_id: StringRequest\n              synced_property_name: StringRequest\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"rollup\"\n            rollup: {\n              rollup_property_name: string\n              relation_property_name: string\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n            }\n            id: string\n            name: string\n          }\n        | { type: \"title\"; title: EmptyObject; id: string; name: string }\n        | {\n            type: \"rich_text\"\n            rich_text: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"url\"; url: EmptyObject; id: string; name: string }\n        | { type: \"people\"; people: EmptyObject; id: string; name: string }\n        | { type: \"files\"; files: EmptyObject; id: string; name: string }\n        | { type: \"email\"; email: EmptyObject; id: string; name: string }\n        | {\n            type: \"phone_number\"\n            phone_number: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"date\"; date: EmptyObject; id: string; name: string }\n        | { type: \"checkbox\"; checkbox: EmptyObject; id: string; name: string }\n        | {\n            type: \"created_by\"\n            created_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"created_time\"\n            created_time: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_time\"\n            last_edited_time: EmptyObject\n            id: string\n            name: string\n          }\n      >\n    }\n  | {\n      title: Array<RichTextItemResponse>\n      icon:\n        | { type: \"emoji\"; emoji: EmojiRequest }\n        | null\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      cover:\n        | { type: \"external\"; external: { url: TextRequest } }\n        | null\n        | { type: \"file\"; file: { url: string; expiry_time: string } }\n        | null\n      properties: Record<\n        string,\n        | {\n            type: \"number\"\n            number: { format: NumberFormat }\n            id: string\n            name: string\n          }\n        | {\n            type: \"formula\"\n            formula: { expression: string }\n            id: string\n            name: string\n          }\n        | {\n            type: \"select\"\n            select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"multi_select\"\n            multi_select: {\n              options: Array<{\n                name: StringRequest\n                id?: StringRequest\n                color?: SelectColor\n              }>\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"relation\"\n            relation: {\n              database_id: IdRequest\n              synced_property_id: StringRequest\n              synced_property_name: StringRequest\n            }\n            id: string\n            name: string\n          }\n        | {\n            type: \"rollup\"\n            rollup: {\n              rollup_property_name: string\n              relation_property_name: string\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n            }\n            id: string\n            name: string\n          }\n        | { type: \"title\"; title: EmptyObject; id: string; name: string }\n        | {\n            type: \"rich_text\"\n            rich_text: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"url\"; url: EmptyObject; id: string; name: string }\n        | { type: \"people\"; people: EmptyObject; id: string; name: string }\n        | { type: \"files\"; files: EmptyObject; id: string; name: string }\n        | { type: \"email\"; email: EmptyObject; id: string; name: string }\n        | {\n            type: \"phone_number\"\n            phone_number: EmptyObject\n            id: string\n            name: string\n          }\n        | { type: \"date\"; date: EmptyObject; id: string; name: string }\n        | { type: \"checkbox\"; checkbox: EmptyObject; id: string; name: string }\n        | {\n            type: \"created_by\"\n            created_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"created_time\"\n            created_time: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_by\"\n            last_edited_by: EmptyObject\n            id: string\n            name: string\n          }\n        | {\n            type: \"last_edited_time\"\n            last_edited_time: EmptyObject\n            id: string\n            name: string\n          }\n      >\n      parent:\n        | { type: \"page_id\"; page_id: string }\n        | { type: \"workspace\"; workspace: true }\n      object: \"database\"\n      id: string\n      created_time: string\n      last_edited_time: string\n      url: string\n    }\n\nexport const createDatabase = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"parent\", \"properties\", \"icon\", \"cover\", \"title\"],\n  path: (): string => `databases`,\n} as const\n\ntype SearchBodyParameters = {\n  sort?: {\n    timestamp: \"last_edited_time\"\n    direction: \"ascending\" | \"descending\"\n  }\n  query?: string\n  start_cursor?: string\n  page_size?: number\n  filter?: { property: \"object\"; value: \"page\" | \"database\" }\n}\n\nexport type SearchParameters = SearchBodyParameters\n\nexport type SearchResponse =\n  | {\n      type: \"rollup\"\n      rollup:\n        | { type: \"number\"; number: number | null; function: RollupFunction }\n        | { type: \"date\"; date: DateResponse | null; function: RollupFunction }\n        | {\n            type: \"array\"\n            array: Array<\n              | { type: \"title\"; title: Array<RichTextItemResponse> }\n              | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse> }\n              | { type: \"number\"; number: number | null }\n              | { type: \"url\"; url: string | null }\n              | { type: \"select\"; select: SelectPropertyResponse | null }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                }\n              | { type: \"people\"; people: Array<PartialUserObjectResponse> }\n              | { type: \"email\"; email: string | null }\n              | { type: \"phone_number\"; phone_number: string | null }\n              | { type: \"date\"; date: DateResponse | null }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                }\n              | { type: \"checkbox\"; checkbox: boolean }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                }\n              | { type: \"relation\"; relation: Array<{ id: string }> }\n              | { type: \"created_time\"; created_time: string }\n              | { type: \"created_by\"; created_by: PartialUserObjectResponse }\n              | { type: \"last_edited_time\"; last_edited_time: string }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                }\n            >\n            function: RollupFunction\n          }\n        | {\n            type: \"unsupported\"\n            unsupported: EmptyObject\n            function: RollupFunction\n          }\n      object: \"list\"\n      results: Array<\n        | {\n            parent:\n              | { type: \"database_id\"; database_id: IdRequest }\n              | { type: \"page_id\"; page_id: IdRequest }\n              | { type: \"workspace\"; workspace: true }\n            properties: Record<\n              string,\n              | {\n                  type: \"title\"\n                  title: Array<RichTextItemResponse>\n                  id: string\n                }\n              | {\n                  type: \"rich_text\"\n                  rich_text: Array<RichTextItemResponse>\n                  id: string\n                }\n              | { type: \"number\"; number: number | null; id: string }\n              | { type: \"url\"; url: string | null; id: string }\n              | {\n                  type: \"select\"\n                  select: SelectPropertyResponse | null\n                  id: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                  id: string\n                }\n              | {\n                  type: \"people\"\n                  people: Array<PartialUserObjectResponse>\n                  id: string\n                }\n              | { type: \"email\"; email: string | null; id: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: string | null\n                  id: string\n                }\n              | { type: \"date\"; date: DateResponse | null; id: string }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                  id: string\n                }\n              | { type: \"checkbox\"; checkbox: boolean; id: string }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                  id: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: Array<{ id: string }>\n                  id: string\n                }\n              | { type: \"created_time\"; created_time: string; id: string }\n              | {\n                  type: \"created_by\"\n                  created_by: PartialUserObjectResponse\n                  id: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: string\n                  id: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                  id: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup:\n                    | {\n                        type: \"number\"\n                        number: number | null\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"date\"\n                        date: DateResponse | null\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"array\"\n                        array: Array<\n                          | {\n                              type: \"title\"\n                              title: Array<RichTextItemResponse>\n                            }\n                          | {\n                              type: \"rich_text\"\n                              rich_text: Array<RichTextItemResponse>\n                            }\n                          | { type: \"number\"; number: number | null }\n                          | { type: \"url\"; url: string | null }\n                          | {\n                              type: \"select\"\n                              select: SelectPropertyResponse | null\n                            }\n                          | {\n                              type: \"multi_select\"\n                              multi_select: Array<SelectPropertyResponse>\n                            }\n                          | {\n                              type: \"people\"\n                              people: Array<PartialUserObjectResponse>\n                            }\n                          | { type: \"email\"; email: string | null }\n                          | {\n                              type: \"phone_number\"\n                              phone_number: string | null\n                            }\n                          | { type: \"date\"; date: DateResponse | null }\n                          | {\n                              type: \"files\"\n                              files: Array<\n                                | {\n                                    file: { url: string; expiry_time: string }\n                                    name: StringRequest\n                                    type?: \"file\"\n                                  }\n                                | {\n                                    external: { url: TextRequest }\n                                    name: StringRequest\n                                    type?: \"external\"\n                                  }\n                              >\n                            }\n                          | { type: \"checkbox\"; checkbox: boolean }\n                          | {\n                              type: \"formula\"\n                              formula:\n                                | { type: \"string\"; string: string | null }\n                                | { type: \"date\"; date: DateResponse | null }\n                                | { type: \"number\"; number: number | null }\n                                | { type: \"boolean\"; boolean: boolean | null }\n                            }\n                          | {\n                              type: \"relation\"\n                              relation: Array<{ id: string }>\n                            }\n                          | { type: \"created_time\"; created_time: string }\n                          | {\n                              type: \"created_by\"\n                              created_by: PartialUserObjectResponse\n                            }\n                          | {\n                              type: \"last_edited_time\"\n                              last_edited_time: string\n                            }\n                          | {\n                              type: \"last_edited_by\"\n                              last_edited_by: PartialUserObjectResponse\n                            }\n                        >\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"unsupported\"\n                        unsupported: EmptyObject\n                        function: RollupFunction\n                      }\n                  id: string\n                }\n            >\n            icon:\n              | { type: \"emoji\"; emoji: EmojiRequest }\n              | null\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            cover:\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            object: \"page\"\n            id: string\n            created_time: string\n            last_edited_time: string\n            archived: boolean\n            url: string\n          }\n        | { object: \"page\"; id: string }\n        | {\n            object: \"database\"\n            id: string\n            properties: Record<\n              string,\n              | {\n                  type: \"number\"\n                  number: { format: NumberFormat }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"formula\"\n                  formula: { expression: string }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"select\"\n                  select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: {\n                    database_id: IdRequest\n                    synced_property_id: StringRequest\n                    synced_property_name: StringRequest\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup: {\n                    rollup_property_name: string\n                    relation_property_name: string\n                    rollup_property_id: string\n                    relation_property_id: string\n                    function: RollupFunction\n                  }\n                  id: string\n                  name: string\n                }\n              | { type: \"title\"; title: EmptyObject; id: string; name: string }\n              | {\n                  type: \"rich_text\"\n                  rich_text: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"url\"; url: EmptyObject; id: string; name: string }\n              | {\n                  type: \"people\"\n                  people: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"files\"; files: EmptyObject; id: string; name: string }\n              | { type: \"email\"; email: EmptyObject; id: string; name: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"date\"; date: EmptyObject; id: string; name: string }\n              | {\n                  type: \"checkbox\"\n                  checkbox: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_by\"\n                  created_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_time\"\n                  created_time: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: EmptyObject\n                  id: string\n                  name: string\n                }\n            >\n          }\n        | {\n            title: Array<RichTextItemResponse>\n            icon:\n              | { type: \"emoji\"; emoji: EmojiRequest }\n              | null\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            cover:\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            properties: Record<\n              string,\n              | {\n                  type: \"number\"\n                  number: { format: NumberFormat }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"formula\"\n                  formula: { expression: string }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"select\"\n                  select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: {\n                    database_id: IdRequest\n                    synced_property_id: StringRequest\n                    synced_property_name: StringRequest\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup: {\n                    rollup_property_name: string\n                    relation_property_name: string\n                    rollup_property_id: string\n                    relation_property_id: string\n                    function: RollupFunction\n                  }\n                  id: string\n                  name: string\n                }\n              | { type: \"title\"; title: EmptyObject; id: string; name: string }\n              | {\n                  type: \"rich_text\"\n                  rich_text: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"url\"; url: EmptyObject; id: string; name: string }\n              | {\n                  type: \"people\"\n                  people: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"files\"; files: EmptyObject; id: string; name: string }\n              | { type: \"email\"; email: EmptyObject; id: string; name: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"date\"; date: EmptyObject; id: string; name: string }\n              | {\n                  type: \"checkbox\"\n                  checkbox: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_by\"\n                  created_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_time\"\n                  created_time: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: EmptyObject\n                  id: string\n                  name: string\n                }\n            >\n            parent:\n              | { type: \"page_id\"; page_id: string }\n              | { type: \"workspace\"; workspace: true }\n            object: \"database\"\n            id: string\n            created_time: string\n            last_edited_time: string\n            url: string\n          }\n      >\n      next_cursor: string | null\n      has_more: boolean\n    }\n  | {\n      object: \"list\"\n      results: Array<\n        | {\n            parent:\n              | { type: \"database_id\"; database_id: IdRequest }\n              | { type: \"page_id\"; page_id: IdRequest }\n              | { type: \"workspace\"; workspace: true }\n            properties: Record<\n              string,\n              | {\n                  type: \"title\"\n                  title: Array<RichTextItemResponse>\n                  id: string\n                }\n              | {\n                  type: \"rich_text\"\n                  rich_text: Array<RichTextItemResponse>\n                  id: string\n                }\n              | { type: \"number\"; number: number | null; id: string }\n              | { type: \"url\"; url: string | null; id: string }\n              | {\n                  type: \"select\"\n                  select: SelectPropertyResponse | null\n                  id: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: Array<SelectPropertyResponse>\n                  id: string\n                }\n              | {\n                  type: \"people\"\n                  people: Array<PartialUserObjectResponse>\n                  id: string\n                }\n              | { type: \"email\"; email: string | null; id: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: string | null\n                  id: string\n                }\n              | { type: \"date\"; date: DateResponse | null; id: string }\n              | {\n                  type: \"files\"\n                  files: Array<\n                    | {\n                        file: { url: string; expiry_time: string }\n                        name: StringRequest\n                        type?: \"file\"\n                      }\n                    | {\n                        external: { url: TextRequest }\n                        name: StringRequest\n                        type?: \"external\"\n                      }\n                  >\n                  id: string\n                }\n              | { type: \"checkbox\"; checkbox: boolean; id: string }\n              | {\n                  type: \"formula\"\n                  formula:\n                    | { type: \"string\"; string: string | null }\n                    | { type: \"date\"; date: DateResponse | null }\n                    | { type: \"number\"; number: number | null }\n                    | { type: \"boolean\"; boolean: boolean | null }\n                  id: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: Array<{ id: string }>\n                  id: string\n                }\n              | { type: \"created_time\"; created_time: string; id: string }\n              | {\n                  type: \"created_by\"\n                  created_by: PartialUserObjectResponse\n                  id: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: string\n                  id: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: PartialUserObjectResponse\n                  id: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup:\n                    | {\n                        type: \"number\"\n                        number: number | null\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"date\"\n                        date: DateResponse | null\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"array\"\n                        array: Array<\n                          | {\n                              type: \"title\"\n                              title: Array<RichTextItemResponse>\n                            }\n                          | {\n                              type: \"rich_text\"\n                              rich_text: Array<RichTextItemResponse>\n                            }\n                          | { type: \"number\"; number: number | null }\n                          | { type: \"url\"; url: string | null }\n                          | {\n                              type: \"select\"\n                              select: SelectPropertyResponse | null\n                            }\n                          | {\n                              type: \"multi_select\"\n                              multi_select: Array<SelectPropertyResponse>\n                            }\n                          | {\n                              type: \"people\"\n                              people: Array<PartialUserObjectResponse>\n                            }\n                          | { type: \"email\"; email: string | null }\n                          | {\n                              type: \"phone_number\"\n                              phone_number: string | null\n                            }\n                          | { type: \"date\"; date: DateResponse | null }\n                          | {\n                              type: \"files\"\n                              files: Array<\n                                | {\n                                    file: { url: string; expiry_time: string }\n                                    name: StringRequest\n                                    type?: \"file\"\n                                  }\n                                | {\n                                    external: { url: TextRequest }\n                                    name: StringRequest\n                                    type?: \"external\"\n                                  }\n                              >\n                            }\n                          | { type: \"checkbox\"; checkbox: boolean }\n                          | {\n                              type: \"formula\"\n                              formula:\n                                | { type: \"string\"; string: string | null }\n                                | { type: \"date\"; date: DateResponse | null }\n                                | { type: \"number\"; number: number | null }\n                                | { type: \"boolean\"; boolean: boolean | null }\n                            }\n                          | {\n                              type: \"relation\"\n                              relation: Array<{ id: string }>\n                            }\n                          | { type: \"created_time\"; created_time: string }\n                          | {\n                              type: \"created_by\"\n                              created_by: PartialUserObjectResponse\n                            }\n                          | {\n                              type: \"last_edited_time\"\n                              last_edited_time: string\n                            }\n                          | {\n                              type: \"last_edited_by\"\n                              last_edited_by: PartialUserObjectResponse\n                            }\n                        >\n                        function: RollupFunction\n                      }\n                    | {\n                        type: \"unsupported\"\n                        unsupported: EmptyObject\n                        function: RollupFunction\n                      }\n                  id: string\n                }\n            >\n            icon:\n              | { type: \"emoji\"; emoji: EmojiRequest }\n              | null\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            cover:\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            object: \"page\"\n            id: string\n            created_time: string\n            last_edited_time: string\n            archived: boolean\n            url: string\n          }\n        | { object: \"page\"; id: string }\n        | {\n            object: \"database\"\n            id: string\n            properties: Record<\n              string,\n              | {\n                  type: \"number\"\n                  number: { format: NumberFormat }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"formula\"\n                  formula: { expression: string }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"select\"\n                  select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: {\n                    database_id: IdRequest\n                    synced_property_id: StringRequest\n                    synced_property_name: StringRequest\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup: {\n                    rollup_property_name: string\n                    relation_property_name: string\n                    rollup_property_id: string\n                    relation_property_id: string\n                    function: RollupFunction\n                  }\n                  id: string\n                  name: string\n                }\n              | { type: \"title\"; title: EmptyObject; id: string; name: string }\n              | {\n                  type: \"rich_text\"\n                  rich_text: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"url\"; url: EmptyObject; id: string; name: string }\n              | {\n                  type: \"people\"\n                  people: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"files\"; files: EmptyObject; id: string; name: string }\n              | { type: \"email\"; email: EmptyObject; id: string; name: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"date\"; date: EmptyObject; id: string; name: string }\n              | {\n                  type: \"checkbox\"\n                  checkbox: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_by\"\n                  created_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_time\"\n                  created_time: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: EmptyObject\n                  id: string\n                  name: string\n                }\n            >\n          }\n        | {\n            title: Array<RichTextItemResponse>\n            icon:\n              | { type: \"emoji\"; emoji: EmojiRequest }\n              | null\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            cover:\n              | { type: \"external\"; external: { url: TextRequest } }\n              | null\n              | { type: \"file\"; file: { url: string; expiry_time: string } }\n              | null\n            properties: Record<\n              string,\n              | {\n                  type: \"number\"\n                  number: { format: NumberFormat }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"formula\"\n                  formula: { expression: string }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"select\"\n                  select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"multi_select\"\n                  multi_select: {\n                    options: Array<{\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }>\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"relation\"\n                  relation: {\n                    database_id: IdRequest\n                    synced_property_id: StringRequest\n                    synced_property_name: StringRequest\n                  }\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"rollup\"\n                  rollup: {\n                    rollup_property_name: string\n                    relation_property_name: string\n                    rollup_property_id: string\n                    relation_property_id: string\n                    function: RollupFunction\n                  }\n                  id: string\n                  name: string\n                }\n              | { type: \"title\"; title: EmptyObject; id: string; name: string }\n              | {\n                  type: \"rich_text\"\n                  rich_text: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"url\"; url: EmptyObject; id: string; name: string }\n              | {\n                  type: \"people\"\n                  people: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"files\"; files: EmptyObject; id: string; name: string }\n              | { type: \"email\"; email: EmptyObject; id: string; name: string }\n              | {\n                  type: \"phone_number\"\n                  phone_number: EmptyObject\n                  id: string\n                  name: string\n                }\n              | { type: \"date\"; date: EmptyObject; id: string; name: string }\n              | {\n                  type: \"checkbox\"\n                  checkbox: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_by\"\n                  created_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"created_time\"\n                  created_time: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_by\"\n                  last_edited_by: EmptyObject\n                  id: string\n                  name: string\n                }\n              | {\n                  type: \"last_edited_time\"\n                  last_edited_time: EmptyObject\n                  id: string\n                  name: string\n                }\n            >\n            parent:\n              | { type: \"page_id\"; page_id: string }\n              | { type: \"workspace\"; workspace: true }\n            object: \"database\"\n            id: string\n            created_time: string\n            last_edited_time: string\n            url: string\n          }\n      >\n      next_cursor: string | null\n      has_more: boolean\n    }\n\nexport const search = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"sort\", \"query\", \"start_cursor\", \"page_size\", \"filter\"],\n  path: (): string => `search`,\n} as const\n", "\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n", "\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n", "\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n", "\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n", "\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n", "import type { Agent } from \"http\"\nimport {\n  Logger,\n  LogLevel,\n  logLevelSeverity,\n  makeConsoleLogger,\n} from \"./logging\"\nimport {\n  buildRequestError,\n  isHTTPResponseError,\n  isNotionClientError,\n  RequestTimeoutError,\n} from \"./errors\"\nimport { pick } from \"./helpers\"\nimport {\n  GetBlockParameters,\n  GetBlockResponse,\n  getBlock,\n  UpdateBlockParameters,\n  UpdateBlockResponse,\n  updateBlock,\n  DeleteBlockParameters,\n  DeleteBlockResponse,\n  deleteBlock,\n  AppendBlockChildrenParameters,\n  AppendBlockChildrenResponse,\n  appendBlockChildren,\n  ListBlockChildrenParameters,\n  ListBlockChildrenResponse,\n  listBlockChildren,\n  ListDatabasesParameters,\n  ListDatabasesResponse,\n  listDatabases,\n  GetDatabaseParameters,\n  GetDatabaseResponse,\n  getDatabase,\n  QueryDatabaseParameters,\n  QueryDatabaseResponse,\n  queryDatabase,\n  CreateDatabaseParameters,\n  CreateDatabaseResponse,\n  createDatabase,\n  UpdateDatabaseParameters,\n  UpdateDatabaseResponse,\n  updateDatabase,\n  CreatePageParameters,\n  CreatePageResponse,\n  createPage,\n  GetPageParameters,\n  GetPageResponse,\n  getPage,\n  UpdatePageParameters,\n  UpdatePageResponse,\n  updatePage,\n  GetUserParameters,\n  GetUserResponse,\n  getUser,\n  ListUsersParameters,\n  ListUsersResponse,\n  listUsers,\n  SearchParameters,\n  SearchResponse,\n  search,\n  GetSelfParameters,\n  GetSelfResponse,\n  getSelf,\n  GetPagePropertyParameters,\n  GetPagePropertyResponse,\n  getPageProperty,\n} from \"./api-endpoints\"\nimport nodeFetch from \"node-fetch\"\nimport {\n  version as PACKAGE_VERSION,\n  name as PACKAGE_NAME,\n} from \"../package.json\"\nimport { SupportedFetch } from \"./fetch-types\"\n\nexport interface ClientOptions {\n  auth?: string\n  timeoutMs?: number\n  baseUrl?: string\n  logLevel?: LogLevel\n  logger?: Logger\n  notionVersion?: string\n  fetch?: SupportedFetch\n  /** Silently ignored in the browser */\n  agent?: Agent\n}\n\nexport interface RequestParameters {\n  path: string\n  method: Method\n  query?: QueryParams\n  body?: Record<string, unknown>\n  auth?: string\n}\n\nexport default class Client {\n  #auth?: string\n  #logLevel: LogLevel\n  #logger: Logger\n  #prefixUrl: string\n  #timeoutMs: number\n  #notionVersion: string\n  #fetch: SupportedFetch\n  #agent: Agent | undefined\n  #userAgent: string\n\n  static readonly defaultNotionVersion = \"2021-08-16\"\n\n  public constructor(options?: ClientOptions) {\n    this.#auth = options?.auth\n    this.#logLevel = options?.logLevel ?? LogLevel.WARN\n    this.#logger = options?.logger ?? makeConsoleLogger(PACKAGE_NAME)\n    this.#prefixUrl = (options?.baseUrl ?? \"https://api.notion.com\") + \"/v1/\"\n    this.#timeoutMs = options?.timeoutMs ?? 60_000\n    this.#notionVersion = options?.notionVersion ?? Client.defaultNotionVersion\n    this.#fetch = options?.fetch ?? nodeFetch\n    this.#agent = options?.agent\n    this.#userAgent = `notionhq-client/${PACKAGE_VERSION}`\n  }\n\n  /**\n   * Sends a request.\n   *\n   * @param path\n   * @param method\n   * @param query\n   * @param body\n   * @returns\n   */\n  public async request<ResponseBody>({\n    path,\n    method,\n    query,\n    body,\n    auth,\n  }: RequestParameters): Promise<ResponseBody> {\n    this.log(LogLevel.INFO, \"request start\", { method, path })\n\n    // If the body is empty, don't send the body in the HTTP request\n    const bodyAsJsonString =\n      !body || Object.entries(body).length === 0\n        ? undefined\n        : JSON.stringify(body)\n\n    const url = new URL(`${this.#prefixUrl}${path}`)\n    if (query) {\n      for (const [key, value] of Object.entries(query)) {\n        if (value !== undefined) {\n          url.searchParams.append(key, String(value))\n        }\n      }\n    }\n\n    const headers: Record<string, string> = {\n      ...this.authAsHeaders(auth),\n      \"Notion-Version\": this.#notionVersion,\n      \"user-agent\": this.#userAgent,\n    }\n\n    if (bodyAsJsonString !== undefined) {\n      headers[\"content-type\"] = \"application/json\"\n    }\n    try {\n      const response = await RequestTimeoutError.rejectAfterTimeout(\n        this.#fetch(url.toString(), {\n          method,\n          headers,\n          body: bodyAsJsonString,\n          agent: this.#agent,\n        }),\n        this.#timeoutMs\n      )\n\n      const responseText = await response.text()\n      if (!response.ok) {\n        throw buildRequestError(response, responseText)\n      }\n\n      const responseJson: ResponseBody = JSON.parse(responseText)\n      this.log(LogLevel.INFO, `request success`, { method, path })\n      return responseJson\n    } catch (error: unknown) {\n      if (!isNotionClientError(error)) {\n        throw error\n      }\n\n      // Log the error if it's one of our known error types\n      this.log(LogLevel.WARN, `request fail`, {\n        code: error.code,\n        message: error.message,\n      })\n\n      if (isHTTPResponseError(error)) {\n        // The response body may contain sensitive information so it is logged separately at the DEBUG level\n        this.log(LogLevel.DEBUG, `failed response body`, {\n          body: error.body,\n        })\n      }\n\n      throw error\n    }\n  }\n\n  /*\n   * Notion API endpoints\n   */\n\n  public readonly blocks = {\n    /**\n     * Retrieve block\n     */\n    retrieve: (\n      args: WithAuth<GetBlockParameters>\n    ): Promise<GetBlockResponse> => {\n      return this.request<GetBlockResponse>({\n        path: getBlock.path(args),\n        method: getBlock.method,\n        query: pick(args, getBlock.queryParams),\n        body: pick(args, getBlock.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Update block\n     */\n    update: (\n      args: WithAuth<UpdateBlockParameters>\n    ): Promise<UpdateBlockResponse> => {\n      return this.request<UpdateBlockResponse>({\n        path: updateBlock.path(args),\n        method: updateBlock.method,\n        query: pick(args, updateBlock.queryParams),\n        body: pick(args, updateBlock.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Delete block\n     */\n    delete: (\n      args: WithAuth<DeleteBlockParameters>\n    ): Promise<DeleteBlockResponse> => {\n      return this.request<DeleteBlockResponse>({\n        path: deleteBlock.path(args),\n        method: deleteBlock.method,\n        query: pick(args, deleteBlock.queryParams),\n        body: pick(args, deleteBlock.bodyParams),\n        auth: args?.auth,\n      })\n    },\n    children: {\n      /**\n       * Append block children\n       */\n      append: (\n        args: WithAuth<AppendBlockChildrenParameters>\n      ): Promise<AppendBlockChildrenResponse> => {\n        return this.request<AppendBlockChildrenResponse>({\n          path: appendBlockChildren.path(args),\n          method: appendBlockChildren.method,\n          query: pick(args, appendBlockChildren.queryParams),\n          body: pick(args, appendBlockChildren.bodyParams),\n          auth: args?.auth,\n        })\n      },\n\n      /**\n       * Retrieve block children\n       */\n      list: (\n        args: WithAuth<ListBlockChildrenParameters>\n      ): Promise<ListBlockChildrenResponse> => {\n        return this.request<ListBlockChildrenResponse>({\n          path: listBlockChildren.path(args),\n          method: listBlockChildren.method,\n          query: pick(args, listBlockChildren.queryParams),\n          body: pick(args, listBlockChildren.bodyParams),\n          auth: args?.auth,\n        })\n      },\n    },\n  }\n\n  public readonly databases = {\n    /**\n     * List databases\n     *\n     * @deprecated Please use `search`\n     */\n    list: (\n      args: WithAuth<ListDatabasesParameters>\n    ): Promise<ListDatabasesResponse> => {\n      return this.request<ListDatabasesResponse>({\n        path: listDatabases.path(),\n        method: listDatabases.method,\n        query: pick(args, listDatabases.queryParams),\n        body: pick(args, listDatabases.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Retrieve a database\n     */\n    retrieve: (\n      args: WithAuth<GetDatabaseParameters>\n    ): Promise<GetDatabaseResponse> => {\n      return this.request<GetDatabaseResponse>({\n        path: getDatabase.path(args),\n        method: getDatabase.method,\n        query: pick(args, getDatabase.queryParams),\n        body: pick(args, getDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Query a database\n     */\n    query: (\n      args: WithAuth<QueryDatabaseParameters>\n    ): Promise<QueryDatabaseResponse> => {\n      return this.request<QueryDatabaseResponse>({\n        path: queryDatabase.path(args),\n        method: queryDatabase.method,\n        query: pick(args, queryDatabase.queryParams),\n        body: pick(args, queryDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Create a database\n     */\n    create: (\n      args: WithAuth<CreateDatabaseParameters>\n    ): Promise<CreateDatabaseResponse> => {\n      return this.request<CreateDatabaseResponse>({\n        path: createDatabase.path(),\n        method: createDatabase.method,\n        query: pick(args, createDatabase.queryParams),\n        body: pick(args, createDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Update a database\n     */\n    update: (\n      args: WithAuth<UpdateDatabaseParameters>\n    ): Promise<UpdateDatabaseResponse> => {\n      return this.request<UpdateDatabaseResponse>({\n        path: updateDatabase.path(args),\n        method: updateDatabase.method,\n        query: pick(args, updateDatabase.queryParams),\n        body: pick(args, updateDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n  }\n\n  public readonly pages = {\n    /**\n     * Create a page\n     */\n    create: (\n      args: WithAuth<CreatePageParameters>\n    ): Promise<CreatePageResponse> => {\n      return this.request<CreatePageResponse>({\n        path: createPage.path(),\n        method: createPage.method,\n        query: pick(args, createPage.queryParams),\n        body: pick(args, createPage.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Retrieve a page\n     */\n    retrieve: (args: WithAuth<GetPageParameters>): Promise<GetPageResponse> => {\n      return this.request<GetPageResponse>({\n        path: getPage.path(args),\n        method: getPage.method,\n        query: pick(args, getPage.queryParams),\n        body: pick(args, getPage.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Update page properties\n     */\n    update: (\n      args: WithAuth<UpdatePageParameters>\n    ): Promise<UpdatePageResponse> => {\n      return this.request<UpdatePageResponse>({\n        path: updatePage.path(args),\n        method: updatePage.method,\n        query: pick(args, updatePage.queryParams),\n        body: pick(args, updatePage.bodyParams),\n        auth: args?.auth,\n      })\n    },\n    properties: {\n      /**\n       * Retrieve page property\n       */\n      retrieve: (\n        args: WithAuth<GetPagePropertyParameters>\n      ): Promise<GetPagePropertyResponse> => {\n        return this.request<GetPagePropertyResponse>({\n          path: getPageProperty.path(args),\n          method: getPageProperty.method,\n          query: pick(args, getPageProperty.queryParams),\n          body: pick(args, getPageProperty.bodyParams),\n          auth: args?.auth,\n        })\n      },\n    },\n  }\n\n  public readonly users = {\n    /**\n     * Retrieve a user\n     */\n    retrieve: (args: WithAuth<GetUserParameters>): Promise<GetUserResponse> => {\n      return this.request<GetUserResponse>({\n        path: getUser.path(args),\n        method: getUser.method,\n        query: pick(args, getUser.queryParams),\n        body: pick(args, getUser.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * List all users\n     */\n    list: (args: WithAuth<ListUsersParameters>): Promise<ListUsersResponse> => {\n      return this.request<ListUsersResponse>({\n        path: listUsers.path(),\n        method: listUsers.method,\n        query: pick(args, listUsers.queryParams),\n        body: pick(args, listUsers.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Get details about bot\n     */\n    me: (args: WithAuth<GetSelfParameters>): Promise<GetSelfResponse> => {\n      return this.request<GetSelfResponse>({\n        path: getSelf.path(),\n        method: getSelf.method,\n        query: pick(args, getSelf.queryParams),\n        body: pick(args, getSelf.bodyParams),\n        auth: args?.auth,\n      })\n    },\n  }\n\n  /**\n   * Search\n   */\n  public search(args: WithAuth<SearchParameters>): Promise<SearchResponse> {\n    return this.request<SearchResponse>({\n      path: search.path(),\n      method: search.method,\n      query: pick(args, search.queryParams),\n      body: pick(args, search.bodyParams),\n      auth: args?.auth,\n    })\n  }\n\n  /**\n   * Emits a log message to the console.\n   *\n   * @param level The level for this message\n   * @param args Arguments to send to the console\n   */\n  private log(\n    level: LogLevel,\n    message: string,\n    extraInfo: Record<string, unknown>\n  ) {\n    if (logLevelSeverity(level) >= logLevelSeverity(this.#logLevel)) {\n      this.#logger(level, message, extraInfo)\n    }\n  }\n\n  /**\n   * Transforms an API key or access token into a headers object suitable for an HTTP request.\n   *\n   * This method uses the instance's value as the default when the input is undefined. If neither are defined, it returns\n   * an empty object\n   *\n   * @param auth API key or access token\n   * @returns headers key-value object\n   */\n  private authAsHeaders(auth?: string): Record<string, string> {\n    const headers: Record<string, string> = {}\n    const authHeaderValue = auth ?? this.#auth\n    if (authHeaderValue !== undefined) {\n      headers[\"authorization\"] = `Bearer ${authHeaderValue}`\n    }\n    return headers\n  }\n}\n\n/*\n * Type aliases to support the generic request interface.\n */\ntype Method = \"get\" | \"post\" | \"patch\" | \"delete\"\ntype QueryParams = Record<string, string | number> | URLSearchParams\n\ntype WithAuth<P> = P & { auth?: string }\n", "export { default as Client } from \"./Client\"\nexport { LogLevel, Logger } from \"./logging\"\nexport {\n  // Error codes\n  NotionErrorCode,\n  APIErrorCode,\n  ClientErrorCode,\n  // Error types\n  NotionClientError,\n  APIResponseError,\n  UnknownHTTPResponseError,\n  RequestTimeoutError,\n  // Error helpers\n  isNotionClientError,\n} from \"./errors\"\n", "/// <reference lib=\"es2015.symbol\" />\n\nconst SymbolPolyfill: (description?: string) => symbol =\n  typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n    Symbol :\n    description => `Symbol(${description})` as any as symbol;\n\nexport default SymbolPolyfill;\n", "/// <reference lib=\"dom\" />\n\nexport function noop(): undefined {\n  return undefined;\n}\n\nfunction getGlobals() {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n}\n\nexport const globals = getGlobals();\n", "import { noop } from '../../utils';\nimport { AssertionError } from '../../stub/assert';\n\nexport function typeIsObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport const rethrowAssertionErrorRejection: (e: any) => void =\n  DEBUG ? e => {\n    // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\n    // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\n    // expect any errors, but assertion errors are always problematic.\n    if (e && e instanceof AssertionError) {\n      setTimeout(() => {\n        throw e;\n      }, 0);\n    }\n  } : noop;\n", "import { globals } from '../../utils';\nimport { rethrowAssertionErrorRejection } from './miscellaneous';\nimport assert from '../../stub/assert';\n\nconst originalPromise = Promise;\nconst originalPromiseThen = Promise.prototype.then;\nconst originalPromiseResolve = Promise.resolve.bind(originalPromise);\nconst originalPromiseReject = Promise.reject.bind(originalPromise);\n\nexport function newPromise<T>(executor: (\n  resolve: (value: T | PromiseLike<T>) => void,\n  reject: (reason?: any) => void\n) => void): Promise<T> {\n  return new originalPromise(executor);\n}\n\nexport function promiseResolvedWith<T>(value: T | PromiseLike<T>): Promise<T> {\n  return originalPromiseResolve(value);\n}\n\nexport function promiseRejectedWith<T = never>(reason: any): Promise<T> {\n  return originalPromiseReject(reason);\n}\n\nexport function PerformPromiseThen<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  onRejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n  // approximation.\n  return originalPromiseThen.call(promise, onFulfilled, onRejected) as Promise<TResult1 | TResult2>;\n}\n\nexport function uponPromise<T>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => void | PromiseLike<void>,\n  onRejected?: (reason: any) => void | PromiseLike<void>): void {\n  PerformPromiseThen(\n    PerformPromiseThen(promise, onFulfilled, onRejected),\n    undefined,\n    rethrowAssertionErrorRejection\n  );\n}\n\nexport function uponFulfillment<T>(promise: Promise<T>, onFulfilled: (value: T) => void | PromiseLike<void>): void {\n  uponPromise(promise, onFulfilled);\n}\n\nexport function uponRejection(promise: Promise<unknown>, onRejected: (reason: any) => void | PromiseLike<void>): void {\n  uponPromise(promise, undefined, onRejected);\n}\n\nexport function transformPromiseWith<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  fulfillmentHandler?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  rejectionHandler?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n}\n\nexport function setPromiseIsHandledToTrue(promise: Promise<unknown>): void {\n  PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n}\n\nexport const queueMicrotask: (fn: () => void) => void = (() => {\n  const globalQueueMicrotask = globals && globals.queueMicrotask;\n  if (typeof globalQueueMicrotask === 'function') {\n    return globalQueueMicrotask;\n  }\n\n  const resolvedPromise = promiseResolvedWith(undefined);\n  return (fn: () => void) => PerformPromiseThen(resolvedPromise, fn);\n})();\n\nexport function reflectCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R, V: T, args: A): R {\n  if (typeof F !== 'function') {\n    throw new TypeError('Argument is not a function');\n  }\n  return Function.prototype.apply.call(F, V, args);\n}\n\nexport function promiseCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R | PromiseLike<R>,\n                                                   V: T,\n                                                   args: A): Promise<R> {\n  assert(typeof F === 'function');\n  assert(V !== undefined);\n  assert(Array.isArray(args));\n  try {\n    return promiseResolvedWith(reflectCall(F, V, args));\n  } catch (value) {\n    return promiseRejectedWith(value);\n  }\n}\n", "import assert from '../stub/assert';\n\n// Original from Chromium\n// https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n\nconst QUEUE_MAX_ARRAY_SIZE = 16384;\n\ninterface Node<T> {\n  _elements: T[];\n  _next: Node<T> | undefined;\n}\n\n/**\n * Simple queue structure.\n *\n * Avoids scalability issues with using a packed array directly by using\n * multiple arrays in a linked list and keeping the array size bounded.\n */\nexport class SimpleQueue<T> {\n  private _front: Node<T>;\n  private _back: Node<T>;\n  private _cursor = 0;\n  private _size = 0;\n\n  constructor() {\n    // _front and _back are always defined.\n    this._front = {\n      _elements: [],\n      _next: undefined\n    };\n    this._back = this._front;\n    // The cursor is used to avoid calling Array.shift().\n    // It contains the index of the front element of the array inside the\n    // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n    this._cursor = 0;\n    // When there is only one node, size === elements.length - cursor.\n    this._size = 0;\n  }\n\n  get length(): number {\n    return this._size;\n  }\n\n  // For exception safety, this method is structured in order:\n  // 1. Read state\n  // 2. Calculate required state mutations\n  // 3. Perform state mutations\n  push(element: T): void {\n    const oldBack = this._back;\n    let newBack = oldBack;\n    assert(oldBack._next === undefined);\n    if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n      newBack = {\n        _elements: [],\n        _next: undefined\n      };\n    }\n\n    // push() is the mutation most likely to throw an exception, so it\n    // goes first.\n    oldBack._elements.push(element);\n    if (newBack !== oldBack) {\n      this._back = newBack;\n      oldBack._next = newBack;\n    }\n    ++this._size;\n  }\n\n  // Like push(), shift() follows the read -> calculate -> mutate pattern for\n  // exception safety.\n  shift(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const oldFront = this._front;\n    let newFront = oldFront;\n    const oldCursor = this._cursor;\n    let newCursor = oldCursor + 1;\n\n    const elements = oldFront._elements;\n    const element = elements[oldCursor];\n\n    if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n      assert(elements.length === QUEUE_MAX_ARRAY_SIZE);\n      assert(oldFront._next !== undefined);\n      newFront = oldFront._next!;\n      newCursor = 0;\n    }\n\n    // No mutations before this point.\n    --this._size;\n    this._cursor = newCursor;\n    if (oldFront !== newFront) {\n      this._front = newFront;\n    }\n\n    // Permit shifted element to be garbage collected.\n    elements[oldCursor] = undefined!;\n\n    return element;\n  }\n\n  // The tricky thing about forEach() is that it can be called\n  // re-entrantly. The queue may be mutated inside the callback. It is easy to\n  // see that push() within the callback has no negative effects since the end\n  // of the queue is checked for on every iteration. If shift() is called\n  // repeatedly within the callback then the next iteration may return an\n  // element that has been removed. In this case the callback will be called\n  // with undefined values until we either \"catch up\" with elements that still\n  // exist or reach the back of the queue.\n  forEach(callback: (element: T) => void): void {\n    let i = this._cursor;\n    let node = this._front;\n    let elements = node._elements;\n    while (i !== elements.length || node._next !== undefined) {\n      if (i === elements.length) {\n        assert(node._next !== undefined);\n        assert(i === QUEUE_MAX_ARRAY_SIZE);\n        node = node._next!;\n        elements = node._elements;\n        i = 0;\n        if (elements.length === 0) {\n          break;\n        }\n      }\n      callback(elements[i]);\n      ++i;\n    }\n  }\n\n  // Return the element that would be returned if shift() was called now,\n  // without modifying the queue.\n  peek(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const front = this._front;\n    const cursor = this._cursor;\n    return front._elements[cursor];\n  }\n}\n", "import assert from '../../stub/assert';\nimport { ReadableStream, ReadableStreamCancel, ReadableStreamReader } from '../readable-stream';\nimport { newPromise, setPromiseIsHandledToTrue } from '../helpers/webidl';\n\nexport function ReadableStreamReaderGenericInitialize<R>(reader: ReadableStreamReader<R>, stream: ReadableStream<R>) {\n  reader._ownerReadableStream = stream;\n  stream._reader = reader;\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseInitialize(reader);\n  } else if (stream._state === 'closed') {\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\n  } else {\n    assert(stream._state === 'errored');\n\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n  }\n}\n\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\n\nexport function ReadableStreamReaderGenericCancel(reader: ReadableStreamReader<any>, reason: any): Promise<undefined> {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  return ReadableStreamCancel(stream, reason);\n}\n\nexport function ReadableStreamReaderGenericRelease(reader: ReadableStreamReader<any>) {\n  assert(reader._ownerReadableStream !== undefined);\n  assert(reader._ownerReadableStream._reader === reader);\n\n  if (reader._ownerReadableStream._state === 'readable') {\n    defaultReaderClosedPromiseReject(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  } else {\n    defaultReaderClosedPromiseResetToRejected(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  }\n\n  reader._ownerReadableStream._reader = undefined;\n  reader._ownerReadableStream = undefined!;\n}\n\n// Helper functions for the readers.\n\nexport function readerLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nexport function defaultReaderClosedPromiseInitialize(reader: ReadableStreamReader<any>) {\n  reader._closedPromise = newPromise((resolve, reject) => {\n    reader._closedPromise_resolve = resolve;\n    reader._closedPromise_reject = reject;\n  });\n}\n\nexport function defaultReaderClosedPromiseInitializeAsRejected(reader: ReadableStreamReader<any>, reason: any) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseReject(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseInitializeAsResolved(reader: ReadableStreamReader<any>) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseResolve(reader);\n}\n\nexport function defaultReaderClosedPromiseReject(reader: ReadableStreamReader<any>, reason: any) {\n  if (reader._closedPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(reader._closedPromise);\n  reader._closedPromise_reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nexport function defaultReaderClosedPromiseResetToRejected(reader: ReadableStreamReader<any>, reason: any) {\n  assert(reader._closedPromise_resolve === undefined);\n  assert(reader._closedPromise_reject === undefined);\n\n  defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseResolve(reader: ReadableStreamReader<any>) {\n  if (reader._closedPromise_resolve === undefined) {\n    return;\n  }\n\n  reader._closedPromise_resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n", "export const AbortSteps = Symbol('[[AbortSteps]]');\nexport const ErrorSteps = Symbol('[[ErrorSteps]]');\nexport const CancelSteps = Symbol('[[CancelSteps]]');\nexport const PullSteps = Symbol('[[PullSteps]]');\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\nconst NumberIsFinite: typeof Number.isFinite = Number.isFinite || function (x) {\n  return typeof x === 'number' && isFinite(x);\n};\n\nexport default NumberIsFinite;\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\nconst MathTrunc: typeof Math.trunc = Math.trunc || function (v) {\n  return v < 0 ? Math.ceil(v) : Math.floor(v);\n};\n\nexport default MathTrunc;\n", "import NumberIsFinite from '../../stub/number-isfinite';\nimport MathTrunc from '../../stub/math-trunc';\n\n// https://heycam.github.io/webidl/#idl-dictionaries\nexport function isDictionary(x: any): x is object | null {\n  return typeof x === 'object' || typeof x === 'function';\n}\n\nexport function assertDictionary(obj: unknown,\n                                 context: string): asserts obj is object | null | undefined {\n  if (obj !== undefined && !isDictionary(obj)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport type AnyFunction = (...args: any[]) => any;\n\n// https://heycam.github.io/webidl/#idl-callback-functions\nexport function assertFunction(x: unknown, context: string): asserts x is AnyFunction {\n  if (typeof x !== 'function') {\n    throw new TypeError(`${context} is not a function.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-object\nexport function isObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport function assertObject(x: unknown,\n                             context: string): asserts x is object {\n  if (!isObject(x)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport function assertRequiredArgument<T extends any>(x: T | undefined,\n                                                      position: number,\n                                                      context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n  }\n}\n\nexport function assertRequiredField<T extends any>(x: T | undefined,\n                                                   field: string,\n                                                   context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`${field} is required in '${context}'.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-unrestricted-double\nexport function convertUnrestrictedDouble(value: unknown): number {\n  return Number(value);\n}\n\nfunction censorNegativeZero(x: number): number {\n  return x === 0 ? 0 : x;\n}\n\nfunction integerPart(x: number): number {\n  return censorNegativeZero(MathTrunc(x));\n}\n\n// https://heycam.github.io/webidl/#idl-unsigned-long-long\nexport function convertUnsignedLongLongWithEnforceRange(value: unknown, context: string): number {\n  const lowerBound = 0;\n  const upperBound = Number.MAX_SAFE_INTEGER;\n\n  let x = Number(value);\n  x = censorNegativeZero(x);\n\n  if (!NumberIsFinite(x)) {\n    throw new TypeError(`${context} is not a finite number`);\n  }\n\n  x = integerPart(x);\n\n  if (x < lowerBound || x > upperBound) {\n    throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n  }\n\n  if (!NumberIsFinite(x) || x === 0) {\n    return 0;\n  }\n\n  // TODO Use BigInt if supported?\n  // let xBigInt = BigInt(integerPart(x));\n  // xBigInt = BigInt.asUintN(64, xBigInt);\n  // return Number(xBigInt);\n\n  return x;\n}\n", "import { IsReadableStream, ReadableStream } from '../readable-stream';\n\nexport function assertReadableStream(x: unknown, context: string): asserts x is ReadableStream {\n  if (!IsReadableStream(x)) {\n    throw new TypeError(`${context} is not a ReadableStream.`);\n  }\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableStream } from '../readable-stream';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { PullSteps } from '../abstract-ops/internal-methods';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\n\n/**\n * A result returned by {@link ReadableStreamDefaultReader.read}.\n *\n * @public\n */\nexport type ReadableStreamDefaultReadResult<T> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value?: undefined;\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamDefaultReader<R>(stream: ReadableStream): ReadableStreamDefaultReader<R> {\n  return new ReadableStreamDefaultReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadRequest<R>(stream: ReadableStream<R>,\n                                                readRequest: ReadRequest<R>): void {\n  assert(IsReadableStreamDefaultReader(stream._reader));\n  assert(stream._state === 'readable');\n\n  (stream._reader! as ReadableStreamDefaultReader<R>)._readRequests.push(readRequest);\n}\n\nexport function ReadableStreamFulfillReadRequest<R>(stream: ReadableStream<R>, chunk: R | undefined, done: boolean) {\n  const reader = stream._reader as ReadableStreamDefaultReader<R>;\n\n  assert(reader._readRequests.length > 0);\n\n  const readRequest = reader._readRequests.shift()!;\n  if (done) {\n    readRequest._closeSteps();\n  } else {\n    readRequest._chunkSteps(chunk!);\n  }\n}\n\nexport function ReadableStreamGetNumReadRequests<R>(stream: ReadableStream<R>): number {\n  return (stream._reader as ReadableStreamDefaultReader<R>)._readRequests.length;\n}\n\nexport function ReadableStreamHasDefaultReader(stream: ReadableStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamDefaultReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadRequest<R> {\n  _chunkSteps(chunk: R): void;\n\n  _closeSteps(): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A default reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamDefaultReader<R = any> {\n  /** @internal */\n  _ownerReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readRequests: SimpleQueue<ReadRequest<R>>;\n\n  constructor(stream: ReadableStream<R>) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed,\n   * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamDefaultReaderRead(this, readRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamDefaultReader(this)) {\n      throw defaultReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamDefaultReader<R = any>(x: any): x is ReadableStreamDefaultReader<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultReader;\n}\n\nexport function ReadableStreamDefaultReaderRead<R>(reader: ReadableStreamDefaultReader<R>,\n                                                   readRequest: ReadRequest<R>): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    readRequest._closeSteps();\n  } else if (stream._state === 'errored') {\n    readRequest._errorSteps(stream._storedError);\n  } else {\n    assert(stream._state === 'readable');\n    stream._readableStreamController[PullSteps](readRequest as ReadRequest<any>);\n  }\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction defaultReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n", "/// <reference lib=\"es2018.asynciterable\" />\n\n/* eslint-disable @typescript-eslint/no-empty-function */\nexport const AsyncIteratorPrototype: AsyncIterable<any> | undefined =\n  Object.getPrototypeOf(Object.getPrototypeOf(async function* (): AsyncIterableIterator<any> {}).prototype);\n", "/// <reference lib=\"es2018.asynciterable\" />\n\nimport { ReadableStream } from '../readable-stream';\nimport {\n  AcquireReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  ReadableStreamDefaultReadResult,\n  ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport assert from '../../stub/assert';\nimport { AsyncIteratorPrototype } from '@@target/stub/async-iterator-prototype';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  queueMicrotask,\n  transformPromiseWith\n} from '../helpers/webidl';\n\n/**\n * An async iterator returned by {@link ReadableStream.values}.\n *\n * @public\n */\nexport interface ReadableStreamAsyncIterator<R> extends AsyncIterator<R> {\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nexport class ReadableStreamAsyncIteratorImpl<R> {\n  private readonly _reader: ReadableStreamDefaultReader<R>;\n  private readonly _preventCancel: boolean;\n  private _ongoingPromise: Promise<ReadableStreamDefaultReadResult<R>> | undefined = undefined;\n  private _isFinished = false;\n\n  constructor(reader: ReadableStreamDefaultReader<R>, preventCancel: boolean) {\n    this._reader = reader;\n    this._preventCancel = preventCancel;\n  }\n\n  next(): Promise<ReadableStreamDefaultReadResult<R>> {\n    const nextSteps = () => this._nextSteps();\n    this._ongoingPromise = this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n      nextSteps();\n    return this._ongoingPromise;\n  }\n\n  return(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    const returnSteps = () => this._returnSteps(value);\n    return this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n      returnSteps();\n  }\n\n  private _nextSteps(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value: undefined, done: true });\n    }\n\n    const reader = this._reader;\n    if (reader._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('iterate'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        this._ongoingPromise = undefined;\n        // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n        // FIXME Is this a bug in the specification, or in the test?\n        queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n      },\n      _closeSteps: () => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        resolvePromise({ value: undefined, done: true });\n      },\n      _errorSteps: reason => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        rejectPromise(reason);\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n    return promise;\n  }\n\n  private _returnSteps(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value, done: true });\n    }\n    this._isFinished = true;\n\n    const reader = this._reader;\n    if (reader._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('finish iterating'));\n    }\n\n    assert(reader._readRequests.length === 0);\n\n    if (!this._preventCancel) {\n      const result = ReadableStreamReaderGenericCancel(reader, value);\n      ReadableStreamReaderGenericRelease(reader);\n      return transformPromiseWith(result, () => ({ value, done: true }));\n    }\n\n    ReadableStreamReaderGenericRelease(reader);\n    return promiseResolvedWith({ value, done: true });\n  }\n}\n\ndeclare class ReadableStreamAsyncIteratorInstance<R> implements ReadableStreamAsyncIterator<R> {\n  /** @interal */\n  _asyncIteratorImpl: ReadableStreamAsyncIteratorImpl<R>;\n\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nconst ReadableStreamAsyncIteratorPrototype: ReadableStreamAsyncIteratorInstance<any> = {\n  next(this: ReadableStreamAsyncIteratorInstance<any>): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n    }\n    return this._asyncIteratorImpl.next();\n  },\n\n  return(this: ReadableStreamAsyncIteratorInstance<any>, value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n    }\n    return this._asyncIteratorImpl.return(value);\n  }\n} as any;\nif (AsyncIteratorPrototype !== undefined) {\n  Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamAsyncIterator<R>(stream: ReadableStream<R>,\n                                                      preventCancel: boolean): ReadableStreamAsyncIterator<R> {\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n  const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n  const iterator: ReadableStreamAsyncIteratorInstance<R> = Object.create(ReadableStreamAsyncIteratorPrototype);\n  iterator._asyncIteratorImpl = impl;\n  return iterator;\n}\n\nfunction IsReadableStreamAsyncIterator<R = any>(x: any): x is ReadableStreamAsyncIterator<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n    return false;\n  }\n\n  try {\n    // noinspection SuspiciousTypeOfGuard\n    return (x as ReadableStreamAsyncIteratorInstance<any>)._asyncIteratorImpl instanceof\n      ReadableStreamAsyncIteratorImpl;\n  } catch {\n    return false;\n  }\n}\n\n// Helper functions for the ReadableStream.\n\nfunction streamAsyncIteratorBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n}\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN: typeof Number.isNaN = Number.isNaN || function (x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n};\n\nexport default NumberIsNaN;\n", "export function CreateArrayFromList<T extends any[]>(elements: T): T {\n  // We use arrays to represent lists, so this is basically a no-op.\n  // Do a slice though just in case we happen to depend on the unique-ness.\n  return elements.slice() as T;\n}\n\nexport function CopyDataBlockBytes(dest: ArrayBuffer,\n                                   destOffset: number,\n                                   src: ArrayBuffer,\n                                   srcOffset: number,\n                                   n: number) {\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n}\n\n// Not implemented correctly\nexport function TransferArrayBuffer<T extends ArrayBufferLike>(O: T): T {\n  return O;\n}\n\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function CanTransferArrayBuffer(O: ArrayBufferLike): boolean {\n  return true;\n}\n\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function IsDetachedBuffer(O: ArrayBufferLike): boolean {\n  return false;\n}\n\nexport function ArrayBufferSlice(buffer: ArrayBufferLike, begin: number, end: number): ArrayBufferLike {\n  // ArrayBuffer.prototype.slice is not available on IE10\n  // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n  if (buffer.slice) {\n    return buffer.slice(begin, end);\n  }\n  const length = end - begin;\n  const slice = new ArrayBuffer(length);\n  CopyDataBlockBytes(slice, 0, buffer, begin, length);\n  return slice;\n}\n", "import NumberIsNaN from '../../stub/number-isnan';\nimport { ArrayBufferSlice } from './ecmascript';\n\nexport function IsNonNegativeNumber(v: number): boolean {\n  if (typeof v !== 'number') {\n    return false;\n  }\n\n  if (NumberIsNaN(v)) {\n    return false;\n  }\n\n  if (v < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function CloneAsUint8Array(O: ArrayBufferView): Uint8Array {\n  const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n  return new Uint8Array(buffer);\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsNonNegativeNumber } from './miscellaneous';\n\nexport interface QueueContainer<T> {\n  _queue: SimpleQueue<T>;\n  _queueTotalSize: number;\n}\n\nexport interface QueuePair<T> {\n  value: T;\n  size: number;\n}\n\nexport function DequeueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.shift()!;\n  container._queueTotalSize -= pair.size;\n  if (container._queueTotalSize < 0) {\n    container._queueTotalSize = 0;\n  }\n\n  return pair.value;\n}\n\nexport function EnqueueValueWithSize<T>(container: QueueContainer<QueuePair<T>>, value: T, size: number) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  if (!IsNonNegativeNumber(size) || size === Infinity) {\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n  }\n\n  container._queue.push({ value, size });\n  container._queueTotalSize += size;\n}\n\nexport function PeekQueueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.peek();\n  return pair.value;\n}\n\nexport function ResetQueue<T>(container: QueueContainer<T>) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  container._queue = new SimpleQueue<T>();\n  container._queueTotalSize = 0;\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadableStreamHasDefaultReader,\n  ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamAddReadIntoRequest,\n  ReadableStreamFulfillReadIntoRequest,\n  ReadableStreamGetNumReadIntoRequests,\n  ReadableStreamHasBYOBReader,\n  ReadIntoRequest\n} from './byob-reader';\nimport NumberIsInteger from '../../stub/number-isinteger';\nimport {\n  IsReadableStreamLocked,\n  ReadableByteStream,\n  ReadableStreamClose,\n  ReadableStreamError\n} from '../readable-stream';\nimport { ValidatedUnderlyingByteSource } from './underlying-source';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  ArrayBufferSlice,\n  CanTransferArrayBuffer,\n  CopyDataBlockBytes,\n  IsDetachedBuffer,\n  TransferArrayBuffer\n} from '../abstract-ops/ecmascript';\nimport { CancelSteps, PullSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\nimport { assertRequiredArgument, convertUnsignedLongLongWithEnforceRange } from '../validators/basic';\n\n/**\n * A pull-into request in a {@link ReadableByteStreamController}.\n *\n * @public\n */\nexport class ReadableStreamBYOBRequest {\n  /** @internal */\n  _associatedReadableByteStreamController!: ReadableByteStreamController;\n  /** @internal */\n  _view!: ArrayBufferView | null;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n   */\n  get view(): ArrayBufferView | null {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('view');\n    }\n\n    return this._view;\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that `bytesWritten` bytes were written into\n   * {@link ReadableStreamBYOBRequest.view | view}, causing the result be surfaced to the consumer.\n   *\n   * After this method is called, {@link ReadableStreamBYOBRequest.view | view} will be transferred and no longer\n   * modifiable.\n   */\n  respond(bytesWritten: number): void;\n  respond(bytesWritten: number | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respond');\n    }\n    assertRequiredArgument(bytesWritten, 1, 'respond');\n    bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(this._view!.buffer)) {\n      throw new TypeError(`The BYOB request's buffer has been detached and so cannot be used as a response`);\n    }\n\n    assert(this._view!.byteLength > 0);\n    assert(this._view!.buffer.byteLength > 0);\n\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that instead of writing into\n   * {@link ReadableStreamBYOBRequest.view | view}, the underlying byte source is providing a new `ArrayBufferView`,\n   * which will be given to the consumer of the readable byte stream.\n   *\n   * After this method is called, `view` will be transferred and no longer modifiable.\n   */\n  respondWithNewView(view: ArrayBufferView): void;\n  respondWithNewView(view: ArrayBufferView | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respondWithNewView');\n    }\n    assertRequiredArgument(view, 1, 'respondWithNewView');\n\n    if (!ArrayBuffer.isView(view)) {\n      throw new TypeError('You can only respond with array buffer views');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(view.buffer)) {\n      throw new TypeError('The given view\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBRequest.prototype, {\n  respond: { enumerable: true },\n  respondWithNewView: { enumerable: true },\n  view: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBRequest.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBRequest',\n    configurable: true\n  });\n}\n\ninterface ArrayBufferViewConstructor<T extends ArrayBufferView = ArrayBufferView> {\n  new(buffer: ArrayBufferLike, byteOffset: number, length?: number): T;\n\n  readonly prototype: T;\n  readonly BYTES_PER_ELEMENT: number;\n}\n\ninterface ByteQueueElement {\n  buffer: ArrayBufferLike;\n  byteOffset: number;\n  byteLength: number;\n}\n\ntype PullIntoDescriptor<T extends ArrayBufferView = ArrayBufferView> =\n  DefaultPullIntoDescriptor\n  | BYOBPullIntoDescriptor<T>;\n\ninterface DefaultPullIntoDescriptor {\n  buffer: ArrayBufferLike;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<Uint8Array>;\n  readerType: 'default';\n}\n\ninterface BYOBPullIntoDescriptor<T extends ArrayBufferView = ArrayBufferView> {\n  buffer: ArrayBufferLike;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<T>;\n  readerType: 'byob';\n}\n\n/**\n * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableByteStreamController {\n  /** @internal */\n  _controlledReadableByteStream!: ReadableByteStream;\n  /** @internal */\n  _queue!: SimpleQueue<ByteQueueElement>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n  /** @internal */\n  _autoAllocateChunkSize: number | undefined;\n  /** @internal */\n  _byobRequest: ReadableStreamBYOBRequest | null;\n  /** @internal */\n  _pendingPullIntos!: SimpleQueue<PullIntoDescriptor>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the current BYOB pull request, or `null` if there isn't one.\n   */\n  get byobRequest(): ReadableStreamBYOBRequest | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('byobRequest');\n    }\n\n    return ReadableByteStreamControllerGetBYOBRequest(this);\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableByteStreamControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableByteStreamControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk chunk in the controlled readable stream.\n   * The chunk has to be an `ArrayBufferView` instance, or else a `TypeError` will be thrown.\n   */\n  enqueue(chunk: ArrayBufferView): void;\n  enqueue(chunk: ArrayBufferView | undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('enqueue');\n    }\n\n    assertRequiredArgument(chunk, 1, 'enqueue');\n    if (!ArrayBuffer.isView(chunk)) {\n      throw new TypeError('chunk must be an array buffer view');\n    }\n    if (chunk.byteLength === 0) {\n      throw new TypeError('chunk must have non-zero byteLength');\n    }\n    if (chunk.buffer.byteLength === 0) {\n      throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    ReadableByteStreamControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('error');\n    }\n\n    ReadableByteStreamControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ReadableByteStreamControllerClearPendingPullIntos(this);\n\n    ResetQueue(this);\n\n    const result = this._cancelAlgorithm(reason);\n    ReadableByteStreamControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<Uint8Array>): void {\n    const stream = this._controlledReadableByteStream;\n    assert(ReadableStreamHasDefaultReader(stream));\n\n    if (this._queueTotalSize > 0) {\n      assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\n      const entry = this._queue.shift()!;\n      this._queueTotalSize -= entry.byteLength;\n\n      ReadableByteStreamControllerHandleQueueDrain(this);\n\n      const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n\n      readRequest._chunkSteps(view);\n      return;\n    }\n\n    const autoAllocateChunkSize = this._autoAllocateChunkSize;\n    if (autoAllocateChunkSize !== undefined) {\n      let buffer: ArrayBuffer;\n      try {\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\n      } catch (bufferE) {\n        readRequest._errorSteps(bufferE);\n        return;\n      }\n\n      const pullIntoDescriptor: DefaultPullIntoDescriptor = {\n        buffer,\n        bufferByteLength: autoAllocateChunkSize,\n        byteOffset: 0,\n        byteLength: autoAllocateChunkSize,\n        bytesFilled: 0,\n        elementSize: 1,\n        viewConstructor: Uint8Array,\n        readerType: 'default'\n      };\n\n      this._pendingPullIntos.push(pullIntoDescriptor);\n    }\n\n    ReadableStreamAddReadRequest(stream, readRequest);\n    ReadableByteStreamControllerCallPullIfNeeded(this);\n  }\n}\n\nObject.defineProperties(ReadableByteStreamController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  byobRequest: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableByteStreamController.prototype, Symbol.toStringTag, {\n    value: 'ReadableByteStreamController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableByteStreamController.\n\nexport function IsReadableByteStreamController(x: any): x is ReadableByteStreamController {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableByteStreamController;\n}\n\nfunction IsReadableStreamBYOBRequest(x: any): x is ReadableStreamBYOBRequest {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBRequest;\n}\n\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller: ReadableByteStreamController): void {\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  // TODO: Test controller argument\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableByteStreamControllerError(controller, e);\n    }\n  );\n}\n\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller: ReadableByteStreamController) {\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller._pendingPullIntos = new SimpleQueue();\n}\n\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor<T extends ArrayBufferView>(\n  stream: ReadableByteStream,\n  pullIntoDescriptor: PullIntoDescriptor<T>\n) {\n  assert(stream._state !== 'errored');\n\n  let done = false;\n  if (stream._state === 'closed') {\n    assert(pullIntoDescriptor.bytesFilled === 0);\n    done = true;\n  }\n\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n  if (pullIntoDescriptor.readerType === 'default') {\n    ReadableStreamFulfillReadRequest(stream, filledView as unknown as Uint8Array, done);\n  } else {\n    assert(pullIntoDescriptor.readerType === 'byob');\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n  }\n}\n\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor<T extends ArrayBufferView>(\n  pullIntoDescriptor: PullIntoDescriptor<T>\n): T {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert(bytesFilled % elementSize === 0);\n\n  return new pullIntoDescriptor.viewConstructor(\n    pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize) as T;\n}\n\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller: ReadableByteStreamController,\n                                                         buffer: ArrayBufferLike,\n                                                         byteOffset: number,\n                                                         byteLength: number) {\n  controller._queue.push({ buffer, byteOffset, byteLength });\n  controller._queueTotalSize += byteLength;\n}\n\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller: ReadableByteStreamController,\n                                                                     pullIntoDescriptor: PullIntoDescriptor) {\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\n  const maxBytesToCopy = Math.min(controller._queueTotalSize,\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  if (maxAlignedBytes > currentAlignedBytes) {\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n\n  const queue = controller._queue;\n\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue.peek();\n\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.shift();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller._queueTotalSize -= bytesToCopy;\n\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (!ready) {\n    assert(controller._queueTotalSize === 0);\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n  }\n\n  return ready;\n}\n\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller: ReadableByteStreamController,\n                                                                size: number,\n                                                                pullIntoDescriptor: PullIntoDescriptor) {\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos.peek() === pullIntoDescriptor);\n  assert(controller._byobRequest === null);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\nfunction ReadableByteStreamControllerHandleQueueDrain(controller: ReadableByteStreamController) {\n  assert(controller._controlledReadableByteStream._state === 'readable');\n\n  if (controller._queueTotalSize === 0 && controller._closeRequested) {\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(controller._controlledReadableByteStream);\n  } else {\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller: ReadableByteStreamController) {\n  if (controller._byobRequest === null) {\n    return;\n  }\n\n  controller._byobRequest._associatedReadableByteStreamController = undefined!;\n  controller._byobRequest._view = null!;\n  controller._byobRequest = null;\n}\n\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller: ReadableByteStreamController) {\n  assert(!controller._closeRequested);\n\n  while (controller._pendingPullIntos.length > 0) {\n    if (controller._queueTotalSize === 0) {\n      return;\n    }\n\n    const pullIntoDescriptor = controller._pendingPullIntos.peek();\n\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n      ReadableByteStreamControllerCommitPullIntoDescriptor(\n        controller._controlledReadableByteStream,\n        pullIntoDescriptor\n      );\n    }\n  }\n}\n\nexport function ReadableByteStreamControllerPullInto<T extends ArrayBufferView>(\n  controller: ReadableByteStreamController,\n  view: T,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = controller._controlledReadableByteStream;\n\n  let elementSize = 1;\n  if (view.constructor !== DataView) {\n    elementSize = (view.constructor as ArrayBufferViewConstructor<T>).BYTES_PER_ELEMENT;\n  }\n\n  const ctor = view.constructor as ArrayBufferViewConstructor<T>;\n\n  // try {\n  const buffer = TransferArrayBuffer(view.buffer);\n  // } catch (e) {\n  //   readIntoRequest._errorSteps(e);\n  //   return;\n  // }\n\n  const pullIntoDescriptor: BYOBPullIntoDescriptor<T> = {\n    buffer,\n    bufferByteLength: buffer.byteLength,\n    byteOffset: view.byteOffset,\n    byteLength: view.byteLength,\n    bytesFilled: 0,\n    elementSize,\n    viewConstructor: ctor,\n    readerType: 'byob'\n  };\n\n  if (controller._pendingPullIntos.length > 0) {\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n    // - No change happens on desiredSize\n    // - The source has already been notified of that there's at least 1 pending read(view)\n\n    ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n    return;\n  }\n\n  if (stream._state === 'closed') {\n    const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n    readIntoRequest._closeSteps(emptyView);\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n\n      ReadableByteStreamControllerHandleQueueDrain(controller);\n\n      readIntoRequest._chunkSteps(filledView);\n      return;\n    }\n\n    if (controller._closeRequested) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      readIntoRequest._errorSteps(e);\n      return;\n    }\n  }\n\n  controller._pendingPullIntos.push(pullIntoDescriptor);\n\n  ReadableStreamAddReadIntoRequest<T>(stream, readIntoRequest);\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInClosedState(controller: ReadableByteStreamController,\n                                                          firstDescriptor: PullIntoDescriptor) {\n  assert(firstDescriptor.bytesFilled === 0);\n\n  const stream = controller._controlledReadableByteStream;\n  if (ReadableStreamHasBYOBReader(stream)) {\n    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerRespondInReadableState(controller: ReadableByteStreamController,\n                                                            bytesWritten: number,\n                                                            pullIntoDescriptor: PullIntoDescriptor) {\n  assert(pullIntoDescriptor.bytesFilled + bytesWritten <= pullIntoDescriptor.byteLength);\n\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n    return;\n  }\n\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n  }\n\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInternal(controller: ReadableByteStreamController, bytesWritten: number) {\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  assert(CanTransferArrayBuffer(firstDescriptor.buffer));\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  const state = controller._controlledReadableByteStream._state;\n  if (state === 'closed') {\n    assert(bytesWritten === 0);\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n  } else {\n    assert(state === 'readable');\n    assert(bytesWritten > 0);\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerShiftPendingPullInto(\n  controller: ReadableByteStreamController\n): PullIntoDescriptor {\n  assert(controller._byobRequest === null);\n  const descriptor = controller._pendingPullIntos.shift()!;\n  return descriptor;\n}\n\nfunction ReadableByteStreamControllerShouldCallPull(controller: ReadableByteStreamController): boolean {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return false;\n  }\n\n  if (controller._closeRequested) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableByteStreamControllerClearAlgorithms(controller: ReadableByteStreamController) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n}\n\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\nexport function ReadableByteStreamControllerClose(controller: ReadableByteStreamController) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    controller._closeRequested = true;\n\n    return;\n  }\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (firstPendingPullInto.bytesFilled > 0) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      throw e;\n    }\n  }\n\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamClose(stream);\n}\n\nexport function ReadableByteStreamControllerEnqueue(controller: ReadableByteStreamController, chunk: ArrayBufferView) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  const buffer = chunk.buffer;\n  const byteOffset = chunk.byteOffset;\n  const byteLength = chunk.byteLength;\n  if (IsDetachedBuffer(buffer)) {\n    throw new TypeError('chunk\\'s buffer is detached and so cannot be enqueued');\n  }\n  const transferredBuffer = TransferArrayBuffer(buffer);\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (IsDetachedBuffer(firstPendingPullInto.buffer)) {\n      throw new TypeError(\n        'The BYOB request\\'s buffer has been detached and so cannot be filled with an enqueued chunk'\n      );\n    }\n    firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n  }\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  if (ReadableStreamHasDefaultReader(stream)) {\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      assert(controller._pendingPullIntos.length === 0);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    } else {\n      assert(controller._queue.length === 0);\n      if (controller._pendingPullIntos.length > 0) {\n        assert(controller._pendingPullIntos.peek().readerType === 'default');\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n      }\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n      ReadableStreamFulfillReadRequest(stream, transferredView, false);\n    }\n  } else if (ReadableStreamHasBYOBReader(stream)) {\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  } else {\n    assert(!IsReadableStreamLocked(stream));\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableByteStreamControllerError(controller: ReadableByteStreamController, e: any) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  ResetQueue(controller);\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableByteStreamControllerGetBYOBRequest(\n  controller: ReadableByteStreamController\n): ReadableStreamBYOBRequest | null {\n  if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n    const firstDescriptor = controller._pendingPullIntos.peek();\n    const view = new Uint8Array(firstDescriptor.buffer,\n                                firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\n                                firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\n    const byobRequest: ReadableStreamBYOBRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n    SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n    controller._byobRequest = byobRequest;\n  }\n  return controller._byobRequest;\n}\n\nfunction ReadableByteStreamControllerGetDesiredSize(controller: ReadableByteStreamController): number | null {\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nexport function ReadableByteStreamControllerRespond(controller: ReadableByteStreamController, bytesWritten: number) {\n  assert(controller._pendingPullIntos.length > 0);\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (bytesWritten !== 0) {\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (bytesWritten === 0) {\n      throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n    }\n    if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n  }\n\n  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\n\nexport function ReadableByteStreamControllerRespondWithNewView(controller: ReadableByteStreamController,\n                                                               view: ArrayBufferView) {\n  assert(controller._pendingPullIntos.length > 0);\n  assert(!IsDetachedBuffer(view.buffer));\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (view.byteLength !== 0) {\n      throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (view.byteLength === 0) {\n      throw new TypeError(\n        'The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream'\n      );\n    }\n  }\n\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n    throw new RangeError('The region specified by view does not match byobRequest');\n  }\n  if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\n  }\n  if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n    throw new RangeError('The region specified by view is larger than byobRequest');\n  }\n\n  const viewByteLength = view.byteLength;\n  firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n  ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n}\n\nexport function SetUpReadableByteStreamController(stream: ReadableByteStream,\n                                                  controller: ReadableByteStreamController,\n                                                  startAlgorithm: () => void | PromiseLike<void>,\n                                                  pullAlgorithm: () => Promise<void>,\n                                                  cancelAlgorithm: (reason: any) => Promise<void>,\n                                                  highWaterMark: number,\n                                                  autoAllocateChunkSize: number | undefined) {\n  assert(stream._readableStreamController === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(NumberIsInteger(autoAllocateChunkSize));\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  controller._controlledReadableByteStream = stream;\n\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._byobRequest = null;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._closeRequested = false;\n  controller._started = false;\n\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\n  controller._pendingPullIntos = new SimpleQueue();\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableByteStreamControllerError(controller, r);\n    }\n  );\n}\n\nexport function SetUpReadableByteStreamControllerFromUnderlyingSource(\n  stream: ReadableByteStream,\n  underlyingByteSource: ValidatedUnderlyingByteSource,\n  highWaterMark: number\n) {\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let pullAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let cancelAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingByteSource.start !== undefined) {\n    startAlgorithm = () => underlyingByteSource.start!(controller);\n  }\n  if (underlyingByteSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingByteSource.pull!(controller);\n  }\n  if (underlyingByteSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingByteSource.cancel!(reason);\n  }\n\n  const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n  if (autoAllocateChunkSize === 0) {\n    throw new TypeError('autoAllocateChunkSize must be greater than 0');\n  }\n\n  SetUpReadableByteStreamController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize\n  );\n}\n\nfunction SetUpReadableStreamBYOBRequest(request: ReadableStreamBYOBRequest,\n                                        controller: ReadableByteStreamController,\n                                        view: ArrayBufferView) {\n  assert(IsReadableByteStreamController(controller));\n  assert(typeof view === 'object');\n  assert(ArrayBuffer.isView(view));\n  assert(!IsDetachedBuffer(view.buffer));\n  request._associatedReadableByteStreamController = controller;\n  request._view = view;\n}\n\n// Helper functions for the ReadableStreamBYOBRequest.\n\nfunction byobRequestBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n\n// Helper functions for the ReadableByteStreamController.\n\nfunction byteStreamControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableByteStream, ReadableStream } from '../readable-stream';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamController,\n  ReadableByteStreamControllerPullInto\n} from './byte-stream-controller';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\nimport { IsDetachedBuffer } from '../abstract-ops/ecmascript';\n\n/**\n * A result returned by {@link ReadableStreamBYOBReader.read}.\n *\n * @public\n */\nexport type ReadableStreamBYOBReadResult<T extends ArrayBufferView> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value: T | undefined;\n};\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamBYOBReader(stream: ReadableByteStream): ReadableStreamBYOBReader {\n  return new ReadableStreamBYOBReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadIntoRequest<T extends ArrayBufferView>(stream: ReadableByteStream,\n                                                                            readIntoRequest: ReadIntoRequest<T>): void {\n  assert(IsReadableStreamBYOBReader(stream._reader));\n  assert(stream._state === 'readable' || stream._state === 'closed');\n\n  (stream._reader! as ReadableStreamBYOBReader)._readIntoRequests.push(readIntoRequest);\n}\n\nexport function ReadableStreamFulfillReadIntoRequest(stream: ReadableByteStream,\n                                                     chunk: ArrayBufferView,\n                                                     done: boolean) {\n  const reader = stream._reader as ReadableStreamBYOBReader;\n\n  assert(reader._readIntoRequests.length > 0);\n\n  const readIntoRequest = reader._readIntoRequests.shift()!;\n  if (done) {\n    readIntoRequest._closeSteps(chunk);\n  } else {\n    readIntoRequest._chunkSteps(chunk);\n  }\n}\n\nexport function ReadableStreamGetNumReadIntoRequests(stream: ReadableByteStream): number {\n  return (stream._reader as ReadableStreamBYOBReader)._readIntoRequests.length;\n}\n\nexport function ReadableStreamHasBYOBReader(stream: ReadableByteStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamBYOBReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadIntoRequest<T extends ArrayBufferView> {\n  _chunkSteps(chunk: T): void;\n\n  _closeSteps(chunk: T | undefined): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A BYOB reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamBYOBReader {\n  /** @internal */\n  _ownerReadableStream!: ReadableByteStream;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readIntoRequests: SimpleQueue<ReadIntoRequest<any>>;\n\n  constructor(stream: ReadableByteStream) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    if (!IsReadableByteStreamController(stream._readableStreamController)) {\n      throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n        'source');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readIntoRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Attempts to reads bytes into view, and returns a promise resolved with the result.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read<T extends ArrayBufferView>(view: T): Promise<ReadableStreamBYOBReadResult<T>> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('read'));\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n    }\n    if (view.byteLength === 0) {\n      return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n    }\n    if (view.buffer.byteLength === 0) {\n      return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n    }\n    if (IsDetachedBuffer(view.buffer)) {\n      return promiseRejectedWith(new TypeError('view\\'s buffer has been detached'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamBYOBReadResult<T>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamBYOBReadResult<T>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readIntoRequest: ReadIntoRequest<T> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamBYOBReader(this)) {\n      throw byobReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readIntoRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamBYOBReader(x: any): x is ReadableStreamBYOBReader {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBReader;\n}\n\nexport function ReadableStreamBYOBReaderRead<T extends ArrayBufferView>(\n  reader: ReadableStreamBYOBReader,\n  view: T,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'errored') {\n    readIntoRequest._errorSteps(stream._storedError);\n  } else {\n    ReadableByteStreamControllerPullInto(\n      stream._readableStreamController as ReadableByteStreamController,\n      view,\n      readIntoRequest\n    );\n  }\n}\n\n// Helper functions for the ReadableStreamBYOBReader.\n\nfunction byobReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n", "import { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport NumberIsNaN from '../../stub/number-isnan';\n\nexport function ExtractHighWaterMark(strategy: QueuingStrategy, defaultHWM: number): number {\n  const { highWaterMark } = strategy;\n\n  if (highWaterMark === undefined) {\n    return defaultHWM;\n  }\n\n  if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n    throw new RangeError('Invalid highWaterMark');\n  }\n\n  return highWaterMark;\n}\n\nexport function ExtractSizeAlgorithm<T>(strategy: QueuingStrategy<T>): QueuingStrategySizeCallback<T> {\n  const { size } = strategy;\n\n  if (!size) {\n    return () => 1;\n  }\n\n  return size;\n}\n", "import { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport { assertDictionary, assertFunction, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategy<T>(init: QueuingStrategy<T> | null | undefined,\n                                          context: string): QueuingStrategy<T> {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  const size = init?.size;\n  return {\n    highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n    size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n  };\n}\n\nfunction convertQueuingStrategySize<T>(fn: QueuingStrategySizeCallback<T>,\n                                       context: string): QueuingStrategySizeCallback<T> {\n  assertFunction(fn, context);\n  return chunk => convertUnrestrictedDouble(fn(chunk));\n}\n", "import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from '../writable-stream/underlying-sink';\nimport { WritableStreamDefaultController } from '../writable-stream';\n\nexport function convertUnderlyingSink<W>(original: UnderlyingSink<W> | null,\n                                         context: string): ValidatedUnderlyingSink<W> {\n  assertDictionary(original, context);\n  const abort = original?.abort;\n  const close = original?.close;\n  const start = original?.start;\n  const type = original?.type;\n  const write = original?.write;\n  return {\n    abort: abort === undefined ?\n      undefined :\n      convertUnderlyingSinkAbortCallback(abort, original!, `${context} has member 'abort' that`),\n    close: close === undefined ?\n      undefined :\n      convertUnderlyingSinkCloseCallback(close, original!, `${context} has member 'close' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSinkStartCallback(start, original!, `${context} has member 'start' that`),\n    write: write === undefined ?\n      undefined :\n      convertUnderlyingSinkWriteCallback(write, original!, `${context} has member 'write' that`),\n    type\n  };\n}\n\nfunction convertUnderlyingSinkAbortCallback(\n  fn: UnderlyingSinkAbortCallback,\n  original: UnderlyingSink,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSinkCloseCallback(\n  fn: UnderlyingSinkCloseCallback,\n  original: UnderlyingSink,\n  context: string\n): () => Promise<void> {\n  assertFunction(fn, context);\n  return () => promiseCall(fn, original, []);\n}\n\nfunction convertUnderlyingSinkStartCallback(\n  fn: UnderlyingSinkStartCallback,\n  original: UnderlyingSink,\n  context: string\n): UnderlyingSinkStartCallback {\n  assertFunction(fn, context);\n  return (controller: WritableStreamDefaultController) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSinkWriteCallback<W>(\n  fn: UnderlyingSinkWriteCallback<W>,\n  original: UnderlyingSink<W>,\n  context: string\n): (chunk: W, controller: WritableStreamDefaultController) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: W, controller: WritableStreamDefaultController) => promiseCall(fn, original, [chunk, controller]);\n}\n", "import { IsWritableStream, WritableStream } from '../writable-stream';\n\nexport function assertWritableStream(x: unknown, context: string): asserts x is WritableStream {\n  if (!IsWritableStream(x)) {\n    throw new TypeError(`${context} is not a WritableStream.`);\n  }\n}\n", "/**\n * A signal object that allows you to communicate with a request and abort it if required\n * via its associated `AbortController` object.\n *\n * @remarks\n *   This interface is compatible with the `AbortSignal` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @public\n */\nexport interface AbortSignal {\n  /**\n   * Whether the request is aborted.\n   */\n  readonly aborted: boolean;\n\n  /**\n   * Add an event listener to be triggered when this signal becomes aborted.\n   */\n  addEventListener(type: 'abort', listener: () => void): void;\n\n  /**\n   * Remove an event listener that was previously added with {@link AbortSignal.addEventListener}.\n   */\n  removeEventListener(type: 'abort', listener: () => void): void;\n}\n\nexport function isAbortSignal(value: unknown): value is AbortSignal {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n  try {\n    return typeof (value as AbortSignal).aborted === 'boolean';\n  } catch {\n    // AbortSignal.prototype.aborted throws if its brand check fails\n    return false;\n  }\n}\n\n/**\n * A controller object that allows you to abort an `AbortSignal` when desired.\n *\n * @remarks\n *   This interface is compatible with the `AbortController` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @internal\n */\nexport interface AbortController {\n  readonly signal: AbortSignal;\n\n  abort(): void;\n}\n\ninterface AbortControllerConstructor {\n  new(): AbortController;\n}\n\nconst supportsAbortController = typeof (AbortController as any) === 'function';\n\n/**\n * Construct a new AbortController, if supported by the platform.\n *\n * @internal\n */\nexport function createAbortController(): AbortController | undefined {\n  if (supportsAbortController) {\n    return new (AbortController as AbortControllerConstructor)();\n  }\n  return undefined;\n}\n", "import assert from '../stub/assert';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponPromise\n} from './helpers/webidl';\nimport {\n  DequeueValue,\n  EnqueueValueWithSize,\n  PeekQueueValue,\n  QueuePair,\n  ResetQueue\n} from './abstract-ops/queue-with-sizes';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { SimpleQueue } from './simple-queue';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { AbortSteps, ErrorSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from './writable-stream/underlying-sink';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertUnderlyingSink } from './validators/underlying-sink';\nimport { assertWritableStream } from './validators/writable-stream';\nimport { AbortController, AbortSignal, createAbortController } from './abort-signal';\n\ntype WritableStreamState = 'writable' | 'closed' | 'erroring' | 'errored';\n\ninterface WriteOrCloseRequest {\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n}\n\ntype WriteRequest = WriteOrCloseRequest;\ntype CloseRequest = WriteOrCloseRequest;\n\ninterface PendingAbortRequest {\n  _promise: Promise<undefined>;\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n  _reason: any;\n  _wasAlreadyErroring: boolean;\n}\n\n/**\n * A writable stream represents a destination for data, into which you can write.\n *\n * @public\n */\nclass WritableStream<W = any> {\n  /** @internal */\n  _state!: WritableStreamState;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _writer: WritableStreamDefaultWriter<W> | undefined;\n  /** @internal */\n  _writableStreamController!: WritableStreamDefaultController<W>;\n  /** @internal */\n  _writeRequests!: SimpleQueue<WriteRequest>;\n  /** @internal */\n  _inFlightWriteRequest: WriteRequest | undefined;\n  /** @internal */\n  _closeRequest: CloseRequest | undefined;\n  /** @internal */\n  _inFlightCloseRequest: CloseRequest | undefined;\n  /** @internal */\n  _pendingAbortRequest: PendingAbortRequest | undefined;\n  /** @internal */\n  _backpressure!: boolean;\n\n  constructor(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>);\n  constructor(rawUnderlyingSink: UnderlyingSink<W> | null | undefined = {},\n              rawStrategy: QueuingStrategy<W> | null | undefined = {}) {\n    if (rawUnderlyingSink === undefined) {\n      rawUnderlyingSink = null;\n    } else {\n      assertObject(rawUnderlyingSink, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n\n    InitializeWritableStream(this);\n\n    const type = underlyingSink.type;\n    if (type !== undefined) {\n      throw new RangeError('Invalid type is specified');\n    }\n\n    const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n    const highWaterMark = ExtractHighWaterMark(strategy, 1);\n\n    SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n  }\n\n  /**\n   * Returns whether or not the writable stream is locked to a writer.\n   */\n  get locked(): boolean {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsWritableStreamLocked(this);\n  }\n\n  /**\n   * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n   * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n   * mechanism of the underlying sink.\n   *\n   * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n   * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n   * the stream) if the stream is currently locked.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('abort'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n    }\n\n    return WritableStreamAbort(this, reason);\n  }\n\n  /**\n   * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n   * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n   *\n   * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n   * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n   * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n   */\n  close() {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('close'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamClose(this);\n  }\n\n  /**\n   * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n   * is locked, no other writer can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n   * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n   * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n   */\n  getWriter(): WritableStreamDefaultWriter<W> {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('getWriter');\n    }\n\n    return AcquireWritableStreamDefaultWriter(this);\n  }\n}\n\nObject.defineProperties(WritableStream.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  getWriter: { enumerable: true },\n  locked: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStream.prototype, Symbol.toStringTag, {\n    value: 'WritableStream',\n    configurable: true\n  });\n}\n\nexport {\n  AcquireWritableStreamDefaultWriter,\n  CreateWritableStream,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamDefaultControllerErrorIfNeeded,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite,\n  WritableStreamCloseQueuedOrInFlight,\n  UnderlyingSink,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkAbortCallback\n};\n\n// Abstract operations for the WritableStream.\n\nfunction AcquireWritableStreamDefaultWriter<W>(stream: WritableStream<W>): WritableStreamDefaultWriter<W> {\n  return new WritableStreamDefaultWriter(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream<W>(startAlgorithm: () => void | PromiseLike<void>,\n                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                 closeAlgorithm: () => Promise<void>,\n                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                 highWaterMark = 1,\n                                 sizeAlgorithm: QueuingStrategySizeCallback<W> = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: WritableStream<W> = Object.create(WritableStream.prototype);\n  InitializeWritableStream(stream);\n\n  const controller: WritableStreamDefaultController<W> = Object.create(WritableStreamDefaultController.prototype);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n  return stream;\n}\n\nfunction InitializeWritableStream<W>(stream: WritableStream<W>) {\n  stream._state = 'writable';\n\n  // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n  // 'erroring' or 'errored'. May be set to an undefined value.\n  stream._storedError = undefined;\n\n  stream._writer = undefined;\n\n  // Initialize to undefined first because the constructor of the controller checks this\n  // variable to validate the caller.\n  stream._writableStreamController = undefined!;\n\n  // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n  // producer without waiting for the queued writes to finish.\n  stream._writeRequests = new SimpleQueue();\n\n  // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n  // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n  stream._inFlightWriteRequest = undefined;\n\n  // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n  // has been detached.\n  stream._closeRequest = undefined;\n\n  // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n  // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n  stream._inFlightCloseRequest = undefined;\n\n  // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n  stream._pendingAbortRequest = undefined;\n\n  // The backpressure signal set by the controller.\n  stream._backpressure = false;\n}\n\nfunction IsWritableStream(x: unknown): x is WritableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n    return false;\n  }\n\n  return x instanceof WritableStream;\n}\n\nfunction IsWritableStreamLocked(stream: WritableStream): boolean {\n  assert(IsWritableStream(stream));\n\n  if (stream._writer === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamAbort(stream: WritableStream, reason: any): Promise<undefined> {\n  if (stream._state === 'closed' || stream._state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  stream._writableStreamController._abortReason = reason;\n  stream._writableStreamController._abortController?.abort();\n\n  // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n  // but it doesn't know that signaling abort runs author code that might have changed the state.\n  // Widen the type again by casting to WritableStreamState.\n  const state = stream._state as WritableStreamState;\n\n  if (state === 'closed' || state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._pendingAbortRequest !== undefined) {\n    return stream._pendingAbortRequest._promise;\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  let wasAlreadyErroring = false;\n  if (state === 'erroring') {\n    wasAlreadyErroring = true;\n    // reason will not be used, so don't keep a reference to it.\n    reason = undefined;\n  }\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    stream._pendingAbortRequest = {\n      _promise: undefined!,\n      _resolve: resolve,\n      _reject: reject,\n      _reason: reason,\n      _wasAlreadyErroring: wasAlreadyErroring\n    };\n  });\n  stream._pendingAbortRequest!._promise = promise;\n\n  if (!wasAlreadyErroring) {\n    WritableStreamStartErroring(stream, reason);\n  }\n\n  return promise;\n}\n\nfunction WritableStreamClose(stream: WritableStream<any>): Promise<undefined> {\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return promiseRejectedWith(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const closeRequest: CloseRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._closeRequest = closeRequest;\n  });\n\n  const writer = stream._writer;\n  if (writer !== undefined && stream._backpressure && state === 'writable') {\n    defaultWriterReadyPromiseResolve(writer);\n  }\n\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\n\n  return promise;\n}\n\n// WritableStream API exposed for controllers.\n\nfunction WritableStreamAddWriteRequest(stream: WritableStream): Promise<undefined> {\n  assert(IsWritableStreamLocked(stream));\n  assert(stream._state === 'writable');\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const writeRequest: WriteRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._writeRequests.push(writeRequest);\n  });\n\n  return promise;\n}\n\nfunction WritableStreamDealWithRejection(stream: WritableStream, error: any) {\n  const state = stream._state;\n\n  if (state === 'writable') {\n    WritableStreamStartErroring(stream, error);\n    return;\n  }\n\n  assert(state === 'erroring');\n  WritableStreamFinishErroring(stream);\n}\n\nfunction WritableStreamStartErroring(stream: WritableStream, reason: any) {\n  assert(stream._storedError === undefined);\n  assert(stream._state === 'writable');\n\n  const controller = stream._writableStreamController;\n  assert(controller !== undefined);\n\n  stream._state = 'erroring';\n  stream._storedError = reason;\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n  }\n\n  if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n    WritableStreamFinishErroring(stream);\n  }\n}\n\nfunction WritableStreamFinishErroring(stream: WritableStream) {\n  assert(stream._state === 'erroring');\n  assert(!WritableStreamHasOperationMarkedInFlight(stream));\n  stream._state = 'errored';\n  stream._writableStreamController[ErrorSteps]();\n\n  const storedError = stream._storedError;\n  stream._writeRequests.forEach(writeRequest => {\n    writeRequest._reject(storedError);\n  });\n  stream._writeRequests = new SimpleQueue();\n\n  if (stream._pendingAbortRequest === undefined) {\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const abortRequest = stream._pendingAbortRequest;\n  stream._pendingAbortRequest = undefined;\n\n  if (abortRequest._wasAlreadyErroring) {\n    abortRequest._reject(storedError);\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n  uponPromise(\n    promise,\n    () => {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    },\n    (reason: any) => {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n}\n\nfunction WritableStreamFinishInFlightWrite(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._resolve(undefined);\n  stream._inFlightWriteRequest = undefined;\n}\n\nfunction WritableStreamFinishInFlightWriteWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._reject(error);\n  stream._inFlightWriteRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  WritableStreamDealWithRejection(stream, error);\n}\n\nfunction WritableStreamFinishInFlightClose(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._resolve(undefined);\n  stream._inFlightCloseRequest = undefined;\n\n  const state = stream._state;\n\n  assert(state === 'writable' || state === 'erroring');\n\n  if (state === 'erroring') {\n    // The error was too late to do anything, so it is ignored.\n    stream._storedError = undefined;\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._resolve();\n      stream._pendingAbortRequest = undefined;\n    }\n  }\n\n  stream._state = 'closed';\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseResolve(writer);\n  }\n\n  assert(stream._pendingAbortRequest === undefined);\n  assert(stream._storedError === undefined);\n}\n\nfunction WritableStreamFinishInFlightCloseWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._reject(error);\n  stream._inFlightCloseRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  // Never execute sink abort() after sink close().\n  if (stream._pendingAbortRequest !== undefined) {\n    stream._pendingAbortRequest._reject(error);\n    stream._pendingAbortRequest = undefined;\n  }\n  WritableStreamDealWithRejection(stream, error);\n}\n\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream: WritableStream): boolean {\n  if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamHasOperationMarkedInFlight(stream: WritableStream): boolean {\n  if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamMarkCloseRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest === undefined);\n  assert(stream._closeRequest !== undefined);\n  stream._inFlightCloseRequest = stream._closeRequest;\n  stream._closeRequest = undefined;\n}\n\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest === undefined);\n  assert(stream._writeRequests.length !== 0);\n  stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\n\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream: WritableStream) {\n  assert(stream._state === 'errored');\n  if (stream._closeRequest !== undefined) {\n    assert(stream._inFlightCloseRequest === undefined);\n\n    stream._closeRequest._reject(stream._storedError);\n    stream._closeRequest = undefined;\n  }\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseReject(writer, stream._storedError);\n  }\n}\n\nfunction WritableStreamUpdateBackpressure(stream: WritableStream, backpressure: boolean) {\n  assert(stream._state === 'writable');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const writer = stream._writer;\n  if (writer !== undefined && backpressure !== stream._backpressure) {\n    if (backpressure) {\n      defaultWriterReadyPromiseReset(writer);\n    } else {\n      assert(!backpressure);\n\n      defaultWriterReadyPromiseResolve(writer);\n    }\n  }\n\n  stream._backpressure = backpressure;\n}\n\n/**\n * A default writer vended by a {@link WritableStream}.\n *\n * @public\n */\nexport class WritableStreamDefaultWriter<W = any> {\n  /** @internal */\n  _ownerWritableStream: WritableStream<W>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _closedPromiseState!: 'pending' | 'resolved' | 'rejected';\n  /** @internal */\n  _readyPromise!: Promise<undefined>;\n  /** @internal */\n  _readyPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _readyPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readyPromiseState!: 'pending' | 'fulfilled' | 'rejected';\n\n  constructor(stream: WritableStream<W>) {\n    assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n    assertWritableStream(stream, 'First parameter');\n\n    if (IsWritableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n    }\n\n    this._ownerWritableStream = stream;\n    stream._writer = this;\n\n    const state = stream._state;\n\n    if (state === 'writable') {\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n        defaultWriterReadyPromiseInitialize(this);\n      } else {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n      }\n\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'erroring') {\n      defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'closed') {\n      defaultWriterReadyPromiseInitializeAsResolved(this);\n      defaultWriterClosedPromiseInitializeAsResolved(this);\n    } else {\n      assert(state === 'errored');\n\n      const storedError = stream._storedError;\n      defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n      defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n    }\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the writer\u2019s lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * Returns the desired size to fill the stream\u2019s internal queue. It can be negative, if the queue is over-full.\n   * A producer can use this information to determine the right amount of data to write.\n   *\n   * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n   * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n   * the writer\u2019s lock is released.\n   */\n  get desiredSize(): number | null {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('desiredSize');\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      throw defaultWriterLockException('desiredSize');\n    }\n\n    return WritableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the desired size to fill the stream\u2019s internal queue transitions\n   * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n   * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n   *\n   * If the stream becomes errored or aborted, or the writer\u2019s lock is released, the returned promise will become\n   * rejected.\n   */\n  get ready(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n    }\n\n    return this._readyPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('abort'));\n    }\n\n    return WritableStreamDefaultWriterAbort(this, reason);\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n   */\n  close(): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('close'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(stream)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamDefaultWriterClose(this);\n  }\n\n  /**\n   * Releases the writer\u2019s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n   * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n   * now on; otherwise, the writer will appear closed.\n   *\n   * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n   * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n   * It\u2019s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n   * other producers from writing in an interleaved manner.\n   */\n  releaseLock(): void {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('releaseLock');\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return;\n    }\n\n    assert(stream._writer !== undefined);\n\n    WritableStreamDefaultWriterRelease(this);\n  }\n\n  /**\n   * Writes the given chunk to the writable stream, by waiting until any previous writes have finished successfully,\n   * and then sending the chunk to the underlying sink's {@link UnderlyingSink.write | write()} method. It will return\n   * a promise that fulfills with undefined upon a successful write, or rejects if the write fails or stream becomes\n   * errored before the writing process is initiated.\n   *\n   * Note that what \"success\" means is up to the underlying sink; it might indicate simply that the chunk has been\n   * accepted, and not necessarily that it is safely saved to its ultimate destination.\n   */\n  write(chunk: W): Promise<void>;\n  write(chunk: W = undefined!): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('write to'));\n    }\n\n    return WritableStreamDefaultWriterWrite(this, chunk);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultWriter.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  releaseLock: { enumerable: true },\n  write: { enumerable: true },\n  closed: { enumerable: true },\n  desiredSize: { enumerable: true },\n  ready: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultWriter.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultWriter',\n    configurable: true\n  });\n}\n\n// Abstract operations for the WritableStreamDefaultWriter.\n\nfunction IsWritableStreamDefaultWriter<W = any>(x: any): x is WritableStreamDefaultWriter<W> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultWriter;\n}\n\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultWriterAbort(writer: WritableStreamDefaultWriter, reason: any) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamAbort(stream, reason);\n}\n\nfunction WritableStreamDefaultWriterClose(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamClose(stream);\n}\n\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  return WritableStreamDefaultWriterClose(writer);\n}\n\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._closedPromiseState === 'pending') {\n    defaultWriterClosedPromiseReject(writer, error);\n  } else {\n    defaultWriterClosedPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._readyPromiseState === 'pending') {\n    defaultWriterReadyPromiseReject(writer, error);\n  } else {\n    defaultWriterReadyPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterGetDesiredSize(writer: WritableStreamDefaultWriter): number | null {\n  const stream = writer._ownerWritableStream;\n  const state = stream._state;\n\n  if (state === 'errored' || state === 'erroring') {\n    return null;\n  }\n\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\n\nfunction WritableStreamDefaultWriterRelease(writer: WritableStreamDefaultWriter) {\n  const stream = writer._ownerWritableStream;\n  assert(stream !== undefined);\n  assert(stream._writer === writer);\n\n  const releasedError = new TypeError(\n    `Writer was released and can no longer be used to monitor the stream's closedness`);\n\n  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\n  // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n  // rejected until afterwards. This means that simply testing state will not work.\n  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\n  stream._writer = undefined;\n  writer._ownerWritableStream = undefined!;\n}\n\nfunction WritableStreamDefaultWriterWrite<W>(writer: WritableStreamDefaultWriter<W>, chunk: W): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const controller = stream._writableStreamController;\n\n  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\n  if (stream !== writer._ownerWritableStream) {\n    return promiseRejectedWith(defaultWriterLockException('write to'));\n  }\n\n  const state = stream._state;\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n  }\n  if (state === 'erroring') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable');\n\n  const promise = WritableStreamAddWriteRequest(stream);\n\n  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\n  return promise;\n}\n\nconst closeSentinel: unique symbol = {} as any;\n\ntype QueueRecord<W> = W | typeof closeSentinel;\n\n/**\n * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n *\n * @public\n */\nexport class WritableStreamDefaultController<W = any> {\n  /** @internal */\n  _controlledWritableStream!: WritableStream<W>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<QueueRecord<W>>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _abortReason: any;\n  /** @internal */\n  _abortController: AbortController | undefined;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<W>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _writeAlgorithm!: (chunk: W) => Promise<void>;\n  /** @internal */\n  _closeAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _abortAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n   *\n   * @deprecated\n   *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n   *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n   */\n  get abortReason(): any {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('abortReason');\n    }\n    return this._abortReason;\n  }\n\n  /**\n   * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n   */\n  get signal(): AbortSignal {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('signal');\n    }\n    if (this._abortController === undefined) {\n      // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n      // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n      // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n      throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n    }\n    return this._abortController.signal;\n  }\n\n  /**\n   * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n   *\n   * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n   * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n   * normal lifecycle of interactions with the underlying sink.\n   */\n  error(e: any = undefined): void {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n    const state = this._controlledWritableStream._state;\n    if (state !== 'writable') {\n      // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n      // just treat it as a no-op.\n      return;\n    }\n\n    WritableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [AbortSteps](reason: any): Promise<void> {\n    const result = this._abortAlgorithm(reason);\n    WritableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [ErrorSteps]() {\n    ResetQueue(this);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultController.prototype, {\n  abortReason: { enumerable: true },\n  signal: { enumerable: true },\n  error: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations implementing interface required by the WritableStream.\n\nfunction IsWritableStreamDefaultController(x: any): x is WritableStreamDefaultController<any> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultController;\n}\n\nfunction SetUpWritableStreamDefaultController<W>(stream: WritableStream<W>,\n                                                 controller: WritableStreamDefaultController<W>,\n                                                 startAlgorithm: () => void | PromiseLike<void>,\n                                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                                 closeAlgorithm: () => Promise<void>,\n                                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                                 highWaterMark: number,\n                                                 sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  assert(IsWritableStream(stream));\n  assert(stream._writableStreamController === undefined);\n\n  controller._controlledWritableStream = stream;\n  stream._writableStreamController = controller;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._abortReason = undefined;\n  controller._abortController = createAbortController();\n  controller._started = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._writeAlgorithm = writeAlgorithm;\n  controller._closeAlgorithm = closeAlgorithm;\n  controller._abortAlgorithm = abortAlgorithm;\n\n  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n  WritableStreamUpdateBackpressure(stream, backpressure);\n\n  const startResult = startAlgorithm();\n  const startPromise = promiseResolvedWith(startResult);\n  uponPromise(\n    startPromise,\n    () => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    r => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDealWithRejection(stream, r);\n    }\n  );\n}\n\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink<W>(stream: WritableStream<W>,\n                                                                   underlyingSink: ValidatedUnderlyingSink<W>,\n                                                                   highWaterMark: number,\n                                                                   sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let writeAlgorithm: (chunk: W) => Promise<void> = () => promiseResolvedWith(undefined);\n  let closeAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let abortAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingSink.start !== undefined) {\n    startAlgorithm = () => underlyingSink.start!(controller);\n  }\n  if (underlyingSink.write !== undefined) {\n    writeAlgorithm = chunk => underlyingSink.write!(chunk, controller);\n  }\n  if (underlyingSink.close !== undefined) {\n    closeAlgorithm = () => underlyingSink.close!();\n  }\n  if (underlyingSink.abort !== undefined) {\n    abortAlgorithm = reason => underlyingSink.abort!(reason);\n  }\n\n  SetUpWritableStreamDefaultController(\n    stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller: WritableStreamDefaultController<any>) {\n  controller._writeAlgorithm = undefined!;\n  controller._closeAlgorithm = undefined!;\n  controller._abortAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\nfunction WritableStreamDefaultControllerClose<W>(controller: WritableStreamDefaultController<W>) {\n  EnqueueValueWithSize(controller, closeSentinel, 0);\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction WritableStreamDefaultControllerGetChunkSize<W>(controller: WritableStreamDefaultController<W>,\n                                                        chunk: W): number {\n  try {\n    return controller._strategySizeAlgorithm(chunk);\n  } catch (chunkSizeE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n    return 1;\n  }\n}\n\nfunction WritableStreamDefaultControllerGetDesiredSize(controller: WritableStreamDefaultController<any>): number {\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction WritableStreamDefaultControllerWrite<W>(controller: WritableStreamDefaultController<W>,\n                                                 chunk: W,\n                                                 chunkSize: number) {\n  try {\n    EnqueueValueWithSize(controller, chunk, chunkSize);\n  } catch (enqueueE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n    return;\n  }\n\n  const stream = controller._controlledWritableStream;\n  if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n  }\n\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n// Abstract operations for the WritableStreamDefaultController.\n\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded<W>(controller: WritableStreamDefaultController<W>) {\n  const stream = controller._controlledWritableStream;\n\n  if (!controller._started) {\n    return;\n  }\n\n  if (stream._inFlightWriteRequest !== undefined) {\n    return;\n  }\n\n  const state = stream._state;\n  assert(state !== 'closed' && state !== 'errored');\n  if (state === 'erroring') {\n    WritableStreamFinishErroring(stream);\n    return;\n  }\n\n  if (controller._queue.length === 0) {\n    return;\n  }\n\n  const value = PeekQueueValue(controller);\n  if (value === closeSentinel) {\n    WritableStreamDefaultControllerProcessClose(controller);\n  } else {\n    WritableStreamDefaultControllerProcessWrite(controller, value);\n  }\n}\n\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller: WritableStreamDefaultController<any>, error: any) {\n  if (controller._controlledWritableStream._state === 'writable') {\n    WritableStreamDefaultControllerError(controller, error);\n  }\n}\n\nfunction WritableStreamDefaultControllerProcessClose(controller: WritableStreamDefaultController<any>) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkCloseRequestInFlight(stream);\n\n  DequeueValue(controller);\n  assert(controller._queue.length === 0);\n\n  const sinkClosePromise = controller._closeAlgorithm();\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  uponPromise(\n    sinkClosePromise,\n    () => {\n      WritableStreamFinishInFlightClose(stream);\n    },\n    reason => {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerProcessWrite<W>(controller: WritableStreamDefaultController<W>, chunk: W) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkFirstWriteRequestInFlight(stream);\n\n  const sinkWritePromise = controller._writeAlgorithm(chunk);\n  uponPromise(\n    sinkWritePromise,\n    () => {\n      WritableStreamFinishInFlightWrite(stream);\n\n      const state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n\n      DequeueValue(controller);\n\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    reason => {\n      if (stream._state === 'writable') {\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n      }\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerGetBackpressure(controller: WritableStreamDefaultController<any>): boolean {\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n  return desiredSize <= 0;\n}\n\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultControllerError(controller: WritableStreamDefaultController<any>, error: any) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable');\n\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  WritableStreamStartErroring(stream, error);\n}\n\n// Helper functions for the WritableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n\n// Helper functions for the WritableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n}\n\n\n// Helper functions for the WritableStreamDefaultWriter.\n\nfunction defaultWriterBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\n\nfunction defaultWriterLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\n\nfunction defaultWriterClosedPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._closedPromise = newPromise((resolve, reject) => {\n    writer._closedPromise_resolve = resolve;\n    writer._closedPromise_reject = reject;\n    writer._closedPromiseState = 'pending';\n  });\n}\n\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseReject(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseResolve(writer);\n}\n\nfunction defaultWriterClosedPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._closedPromise_reject === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  setPromiseIsHandledToTrue(writer._closedPromise);\n  writer._closedPromise_reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._closedPromise_resolve === undefined);\n  assert(writer._closedPromise_reject === undefined);\n  assert(writer._closedPromiseState !== 'pending');\n\n  defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._closedPromise_resolve === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterReadyPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._readyPromise = newPromise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseReject(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseResolve(writer);\n}\n\nfunction defaultWriterReadyPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._readyPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(writer._readyPromise);\n  writer._readyPromise_reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseReset(writer: WritableStreamDefaultWriter) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitialize(writer);\n}\n\nfunction defaultWriterReadyPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._readyPromise_resolve === undefined) {\n    return;\n  }\n\n  writer._readyPromise_resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n", "/// <reference lib=\"dom\" />\nexport const NativeDOMException: typeof DOMException | undefined =\n  typeof DOMException !== 'undefined' ? DOMException : undefined;\n", "/// <reference types=\"node\" />\nimport { NativeDOMException } from './native';\n\ndeclare class DOMExceptionClass extends Error {\n  constructor(message?: string, name?: string);\n\n  name: string;\n  message: string;\n}\n\ntype DOMException = DOMExceptionClass;\ntype DOMExceptionConstructor = typeof DOMExceptionClass;\n\nfunction isDOMExceptionConstructor(ctor: unknown): ctor is DOMExceptionConstructor {\n  if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n    return false;\n  }\n  try {\n    new (ctor as DOMExceptionConstructor)();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction createDOMExceptionPolyfill(): DOMExceptionConstructor {\n  // eslint-disable-next-line no-shadow\n  const ctor = function DOMException(this: DOMException, message?: string, name?: string) {\n    this.message = message || '';\n    this.name = name || 'Error';\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  } as any;\n  ctor.prototype = Object.create(Error.prototype);\n  Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n  return ctor;\n}\n\n// eslint-disable-next-line no-redeclare\nconst DOMException: DOMExceptionConstructor =\n  isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\nexport { DOMException };\n", "import { IsReadableStream, IsReadableStreamLocked, ReadableStream, ReadableStreamCancel } from '../readable-stream';\nimport { AcquireReadableStreamDefaultReader, ReadableStreamDefaultReaderRead } from './default-reader';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireWritableStreamDefaultWriter,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamCloseQueuedOrInFlight,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite\n} from '../writable-stream';\nimport assert from '../../stub/assert';\nimport {\n  newPromise,\n  PerformPromiseThen,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponFulfillment,\n  uponPromise,\n  uponRejection\n} from '../helpers/webidl';\nimport { noop } from '../../utils';\nimport { AbortSignal, isAbortSignal } from '../abort-signal';\nimport { DOMException } from '../../stub/dom-exception';\n\nexport function ReadableStreamPipeTo<T>(source: ReadableStream<T>,\n                                        dest: WritableStream<T>,\n                                        preventClose: boolean,\n                                        preventAbort: boolean,\n                                        preventCancel: boolean,\n                                        signal: AbortSignal | undefined): Promise<undefined> {\n  assert(IsReadableStream(source));\n  assert(IsWritableStream(dest));\n  assert(typeof preventClose === 'boolean');\n  assert(typeof preventAbort === 'boolean');\n  assert(typeof preventCancel === 'boolean');\n  assert(signal === undefined || isAbortSignal(signal));\n  assert(!IsReadableStreamLocked(source));\n  assert(!IsWritableStreamLocked(dest));\n\n  const reader = AcquireReadableStreamDefaultReader<T>(source);\n  const writer = AcquireWritableStreamDefaultWriter<T>(dest);\n\n  source._disturbed = true;\n\n  let shuttingDown = false;\n\n  // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n  let currentWrite = promiseResolvedWith<void>(undefined);\n\n  return newPromise((resolve, reject) => {\n    let abortAlgorithm: () => void;\n    if (signal !== undefined) {\n      abortAlgorithm = () => {\n        const error = new DOMException('Aborted', 'AbortError');\n        const actions: Array<() => Promise<void>> = [];\n        if (!preventAbort) {\n          actions.push(() => {\n            if (dest._state === 'writable') {\n              return WritableStreamAbort(dest, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        if (!preventCancel) {\n          actions.push(() => {\n            if (source._state === 'readable') {\n              return ReadableStreamCancel(source, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n      };\n\n      if (signal.aborted) {\n        abortAlgorithm();\n        return;\n      }\n\n      signal.addEventListener('abort', abortAlgorithm);\n    }\n\n    // Using reader and writer, read all chunks from this and write them to dest\n    // - Backpressure must be enforced\n    // - Shutdown must stop all activity\n    function pipeLoop() {\n      return newPromise<void>((resolveLoop, rejectLoop) => {\n        function next(done: boolean) {\n          if (done) {\n            resolveLoop();\n          } else {\n            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n            PerformPromiseThen(pipeStep(), next, rejectLoop);\n          }\n        }\n\n        next(false);\n      });\n    }\n\n    function pipeStep(): Promise<boolean> {\n      if (shuttingDown) {\n        return promiseResolvedWith(true);\n      }\n\n      return PerformPromiseThen(writer._readyPromise, () => {\n        return newPromise<boolean>((resolveRead, rejectRead) => {\n          ReadableStreamDefaultReaderRead(\n            reader,\n            {\n              _chunkSteps: chunk => {\n                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                resolveRead(false);\n              },\n              _closeSteps: () => resolveRead(true),\n              _errorSteps: rejectRead\n            }\n          );\n        });\n      });\n    }\n\n    // Errors must be propagated forward\n    isOrBecomesErrored(source, reader._closedPromise, storedError => {\n      if (!preventAbort) {\n        shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Errors must be propagated backward\n    isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Closing must be propagated forward\n    isOrBecomesClosed(source, reader._closedPromise, () => {\n      if (!preventClose) {\n        shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n      } else {\n        shutdown();\n      }\n    });\n\n    // Closing must be propagated backward\n    if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n      const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n      } else {\n        shutdown(true, destClosed);\n      }\n    }\n\n    setPromiseIsHandledToTrue(pipeLoop());\n\n    function waitForWritesToFinish(): Promise<void> {\n      // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n      // for that too.\n      const oldCurrentWrite = currentWrite;\n      return PerformPromiseThen(\n        currentWrite,\n        () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined\n      );\n    }\n\n    function isOrBecomesErrored(stream: ReadableStream | WritableStream,\n                                promise: Promise<void>,\n                                action: (reason: any) => void) {\n      if (stream._state === 'errored') {\n        action(stream._storedError);\n      } else {\n        uponRejection(promise, action);\n      }\n    }\n\n    function isOrBecomesClosed(stream: ReadableStream | WritableStream, promise: Promise<void>, action: () => void) {\n      if (stream._state === 'closed') {\n        action();\n      } else {\n        uponFulfillment(promise, action);\n      }\n    }\n\n    function shutdownWithAction(action: () => Promise<unknown>, originalIsError?: boolean, originalError?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), doTheRest);\n      } else {\n        doTheRest();\n      }\n\n      function doTheRest() {\n        uponPromise(\n          action(),\n          () => finalize(originalIsError, originalError),\n          newError => finalize(true, newError)\n        );\n      }\n    }\n\n    function shutdown(isError?: boolean, error?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n      } else {\n        finalize(isError, error);\n      }\n    }\n\n    function finalize(isError?: boolean, error?: any) {\n      WritableStreamDefaultWriterRelease(writer);\n      ReadableStreamReaderGenericRelease(reader);\n\n      if (signal !== undefined) {\n        signal.removeEventListener('abort', abortAlgorithm);\n      }\n      if (isError) {\n        reject(error);\n      } else {\n        resolve(undefined);\n      }\n    }\n  });\n}\n", "import { QueuingStrategySizeCallback } from '../queuing-strategy';\nimport assert from '../../stub/assert';\nimport { DequeueValue, EnqueueValueWithSize, QueuePair, ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadRequest\n} from './default-reader';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsReadableStreamLocked, ReadableStream, ReadableStreamClose, ReadableStreamError } from '../readable-stream';\nimport { ValidatedUnderlyingSource } from './underlying-source';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { CancelSteps, PullSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\n\n/**\n * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableStreamDefaultController<R> {\n  /** @internal */\n  _controlledReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<R>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<R>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits close');\n    }\n\n    ReadableStreamDefaultControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the controlled readable stream.\n   */\n  enqueue(chunk: R): void;\n  enqueue(chunk: R = undefined!): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits enqueue');\n    }\n\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    ReadableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ResetQueue(this);\n    const result = this._cancelAlgorithm(reason);\n    ReadableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<R>): void {\n    const stream = this._controlledReadableStream;\n\n    if (this._queue.length > 0) {\n      const chunk = DequeueValue(this);\n\n      if (this._closeRequested && this._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        ReadableStreamClose(stream);\n      } else {\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n\n      readRequest._chunkSteps(chunk);\n    } else {\n      ReadableStreamAddReadRequest(stream, readRequest);\n      ReadableStreamDefaultControllerCallPullIfNeeded(this);\n    }\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableStreamDefaultController.\n\nfunction IsReadableStreamDefaultController<R = any>(x: any): x is ReadableStreamDefaultController<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultController;\n}\n\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller: ReadableStreamDefaultController<any>): void {\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  );\n}\n\nfunction ReadableStreamDefaultControllerShouldCallPull(controller: ReadableStreamDefaultController<any>): boolean {\n  const stream = controller._controlledReadableStream;\n\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller: ReadableStreamDefaultController<any>) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\nexport function ReadableStreamDefaultControllerClose(controller: ReadableStreamDefaultController<any>) {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  controller._closeRequested = true;\n\n  if (controller._queue.length === 0) {\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n  }\n}\n\nexport function ReadableStreamDefaultControllerEnqueue<R>(\n  controller: ReadableStreamDefaultController<R>,\n  chunk: R\n): void {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\n  } else {\n    let chunkSize;\n    try {\n      chunkSize = controller._strategySizeAlgorithm(chunk);\n    } catch (chunkSizeE) {\n      ReadableStreamDefaultControllerError(controller, chunkSizeE);\n      throw chunkSizeE;\n    }\n\n    try {\n      EnqueueValueWithSize(controller, chunk, chunkSize);\n    } catch (enqueueE) {\n      ReadableStreamDefaultControllerError(controller, enqueueE);\n      throw enqueueE;\n    }\n  }\n\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableStreamDefaultControllerError(controller: ReadableStreamDefaultController<any>, e: any) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ResetQueue(controller);\n\n  ReadableStreamDefaultControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableStreamDefaultControllerGetDesiredSize(\n  controller: ReadableStreamDefaultController<any>\n): number | null {\n  const state = controller._controlledReadableStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\n// This is used in the implementation of TransformStream.\nexport function ReadableStreamDefaultControllerHasBackpressure(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function ReadableStreamDefaultControllerCanCloseOrEnqueue(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  const state = controller._controlledReadableStream._state;\n\n  if (!controller._closeRequested && state === 'readable') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function SetUpReadableStreamDefaultController<R>(stream: ReadableStream<R>,\n                                                        controller: ReadableStreamDefaultController<R>,\n                                                        startAlgorithm: () => void | PromiseLike<void>,\n                                                        pullAlgorithm: () => Promise<void>,\n                                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                                        highWaterMark: number,\n                                                        sizeAlgorithm: QueuingStrategySizeCallback<R>) {\n  assert(stream._readableStreamController === undefined);\n\n  controller._controlledReadableStream = stream;\n\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._started = false;\n  controller._closeRequested = false;\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableStreamDefaultControllerError(controller, r);\n    }\n  );\n}\n\nexport function SetUpReadableStreamDefaultControllerFromUnderlyingSource<R>(\n  stream: ReadableStream<R>,\n  underlyingSource: ValidatedUnderlyingSource<R>,\n  highWaterMark: number,\n  sizeAlgorithm: QueuingStrategySizeCallback<R>\n) {\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let pullAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let cancelAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingSource.start !== undefined) {\n    startAlgorithm = () => underlyingSource.start!(controller);\n  }\n  if (underlyingSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingSource.pull!(controller);\n  }\n  if (underlyingSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingSource.cancel!(reason);\n  }\n\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// Helper functions for the ReadableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n", "import {\n  CreateReadableByteStream,\n  CreateReadableStream,\n  IsReadableStream,\n  ReadableByteStream,\n  ReadableStream,\n  ReadableStreamCancel,\n  ReadableStreamReader\n} from '../readable-stream';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  ReadRequest\n} from './default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReaderRead,\n  ReadIntoRequest\n} from './byob-reader';\nimport assert from '../../stub/assert';\nimport { newPromise, promiseResolvedWith, queueMicrotask, uponRejection } from '../helpers/webidl';\nimport {\n  ReadableStreamDefaultController,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError\n} from './default-controller';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamControllerClose,\n  ReadableByteStreamControllerEnqueue,\n  ReadableByteStreamControllerError,\n  ReadableByteStreamControllerGetBYOBRequest,\n  ReadableByteStreamControllerRespond,\n  ReadableByteStreamControllerRespondWithNewView\n} from './byte-stream-controller';\nimport { CreateArrayFromList } from '../abstract-ops/ecmascript';\nimport { CloneAsUint8Array } from '../abstract-ops/miscellaneous';\n\nexport function ReadableStreamTee<R>(stream: ReadableStream<R>,\n                                     cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n  if (IsReadableByteStreamController(stream._readableStreamController)) {\n    return ReadableByteStreamTee(stream as unknown as ReadableByteStream) as\n      unknown as [ReadableStream<R>, ReadableStream<R>];\n  }\n  return ReadableStreamDefaultTee(stream, cloneForBranch2);\n}\n\nexport function ReadableStreamDefaultTee<R>(stream: ReadableStream<R>,\n                                            cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n\n  let reading = false;\n  let readAgain = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableStream<R>;\n  let branch2: ReadableStream<R>;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<undefined>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function pullAlgorithm(): Promise<void> {\n    if (reading) {\n      readAgain = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgain = false;\n          const chunk1 = chunk;\n          const chunk2 = chunk;\n\n          // There is no way to access the cloning code right now in the reference implementation.\n          // If we add one then we'll need an implementation for serializable objects.\n          // if (!canceled2 && cloneForBranch2) {\n          //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n          // }\n\n          if (!canceled1) {\n            ReadableStreamDefaultControllerEnqueue(\n              branch1._readableStreamController as ReadableStreamDefaultController<R>,\n              chunk1\n            );\n          }\n          if (!canceled2) {\n            ReadableStreamDefaultControllerEnqueue(\n              branch2._readableStreamController as ReadableStreamDefaultController<R>,\n              chunk2\n            );\n          }\n\n          reading = false;\n          if (readAgain) {\n            pullAlgorithm();\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableStreamDefaultControllerClose(branch1._readableStreamController as ReadableStreamDefaultController<R>);\n        }\n        if (!canceled2) {\n          ReadableStreamDefaultControllerClose(branch2._readableStreamController as ReadableStreamDefaultController<R>);\n        }\n\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm() {\n    // do nothing\n  }\n\n  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\n  uponRejection(reader._closedPromise, (r: any) => {\n    ReadableStreamDefaultControllerError(branch1._readableStreamController as ReadableStreamDefaultController<R>, r);\n    ReadableStreamDefaultControllerError(branch2._readableStreamController as ReadableStreamDefaultController<R>, r);\n    if (!canceled1 || !canceled2) {\n      resolveCancelPromise(undefined);\n    }\n  });\n\n  return [branch1, branch2];\n}\n\nexport function ReadableByteStreamTee(stream: ReadableByteStream): [ReadableByteStream, ReadableByteStream] {\n  assert(IsReadableStream(stream));\n  assert(IsReadableByteStreamController(stream._readableStreamController));\n\n  let reader: ReadableStreamReader<Uint8Array> = AcquireReadableStreamDefaultReader(stream);\n  let reading = false;\n  let readAgainForBranch1 = false;\n  let readAgainForBranch2 = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableByteStream;\n  let branch2: ReadableByteStream;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<void>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function forwardReaderError(thisReader: ReadableStreamReader<Uint8Array>) {\n    uponRejection(thisReader._closedPromise, r => {\n      if (thisReader !== reader) {\n        return;\n      }\n      ReadableByteStreamControllerError(branch1._readableStreamController, r);\n      ReadableByteStreamControllerError(branch2._readableStreamController, r);\n      if (!canceled1 || !canceled2) {\n        resolveCancelPromise(undefined);\n      }\n    });\n  }\n\n  function pullWithDefaultReader() {\n    if (IsReadableStreamBYOBReader(reader)) {\n      assert(reader._readIntoRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamDefaultReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const readRequest: ReadRequest<Uint8Array> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n\n          const chunk1 = chunk;\n          let chunk2 = chunk;\n          if (!canceled1 && !canceled2) {\n            try {\n              chunk2 = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n          }\n\n          if (!canceled1) {\n            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n          }\n          if (!canceled2) {\n            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n          }\n\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableByteStreamControllerClose(branch1._readableStreamController);\n        }\n        if (!canceled2) {\n          ReadableByteStreamControllerClose(branch2._readableStreamController);\n        }\n        if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n        }\n        if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n        }\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n  }\n\n  function pullWithBYOBReader(view: ArrayBufferView, forBranch2: boolean) {\n    if (IsReadableStreamDefaultReader<Uint8Array>(reader)) {\n      assert(reader._readRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamBYOBReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const byobBranch = forBranch2 ? branch2 : branch1;\n    const otherBranch = forBranch2 ? branch1 : branch2;\n\n    const readIntoRequest: ReadIntoRequest<ArrayBufferView> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n\n          const byobCanceled = forBranch2 ? canceled2 : canceled1;\n          const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n          if (!otherCanceled) {\n            let clonedChunk;\n            try {\n              clonedChunk = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n            if (!byobCanceled) {\n              ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n            }\n            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n          } else if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      },\n      _closeSteps: chunk => {\n        reading = false;\n\n        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n        if (!byobCanceled) {\n          ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n        }\n        if (!otherCanceled) {\n          ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n        }\n\n        if (chunk !== undefined) {\n          assert(chunk.byteLength === 0);\n\n          if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n          if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n          }\n        }\n\n        if (!byobCanceled || !otherCanceled) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n  }\n\n  function pull1Algorithm(): Promise<void> {\n    if (reading) {\n      readAgainForBranch1 = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, false);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function pull2Algorithm(): Promise<void> {\n    if (reading) {\n      readAgainForBranch2 = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, true);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm(): void {\n    return;\n  }\n\n  branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n  branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n\n  forwardReaderError(reader);\n\n  return [branch1, branch2];\n}\n", "import { assertDictionary, assertFunction, convertUnsignedLongLongWithEnforceRange } from './basic';\nimport {\n  ReadableStreamController,\n  UnderlyingByteSource,\n  UnderlyingDefaultOrByteSource,\n  UnderlyingDefaultOrByteSourcePullCallback,\n  UnderlyingDefaultOrByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  ValidatedUnderlyingDefaultOrByteSource\n} from '../readable-stream/underlying-source';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\n\nexport function convertUnderlyingDefaultOrByteSource<R>(\n  source: UnderlyingSource<R> | UnderlyingByteSource | null,\n  context: string\n): ValidatedUnderlyingDefaultOrByteSource<R> {\n  assertDictionary(source, context);\n  const original = source as (UnderlyingDefaultOrByteSource<R> | null);\n  const autoAllocateChunkSize = original?.autoAllocateChunkSize;\n  const cancel = original?.cancel;\n  const pull = original?.pull;\n  const start = original?.start;\n  const type = original?.type;\n  return {\n    autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n      undefined :\n      convertUnsignedLongLongWithEnforceRange(\n        autoAllocateChunkSize,\n        `${context} has member 'autoAllocateChunkSize' that`\n      ),\n    cancel: cancel === undefined ?\n      undefined :\n      convertUnderlyingSourceCancelCallback(cancel, original!, `${context} has member 'cancel' that`),\n    pull: pull === undefined ?\n      undefined :\n      convertUnderlyingSourcePullCallback(pull, original!, `${context} has member 'pull' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSourceStartCallback(start, original!, `${context} has member 'start' that`),\n    type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n  };\n}\n\nfunction convertUnderlyingSourceCancelCallback(\n  fn: UnderlyingSourceCancelCallback,\n  original: UnderlyingDefaultOrByteSource,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSourcePullCallback<R>(\n  fn: UnderlyingDefaultOrByteSourcePullCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): (controller: ReadableStreamController<R>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSourceStartCallback<R>(\n  fn: UnderlyingDefaultOrByteSourceStartCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): UnderlyingDefaultOrByteSourceStartCallback<R> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertReadableStreamType(type: string, context: string): 'bytes' {\n  type = `${type}`;\n  if (type !== 'bytes') {\n    throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n  }\n  return type;\n}\n", "import { assertDictionary } from './basic';\nimport { ReadableStreamGetReaderOptions } from '../readable-stream/reader-options';\n\nexport function convertReaderOptions(options: ReadableStreamGetReaderOptions | null | undefined,\n                                     context: string): ReadableStreamGetReaderOptions {\n  assertDictionary(options, context);\n  const mode = options?.mode;\n  return {\n    mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n  };\n}\n\nfunction convertReadableStreamReaderMode(mode: string, context: string): 'byob' {\n  mode = `${mode}`;\n  if (mode !== 'byob') {\n    throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n  }\n  return mode;\n}\n", "import { assertDictionary } from './basic';\nimport {\n  ReadableStreamIteratorOptions,\n  ValidatedReadableStreamIteratorOptions\n} from '../readable-stream/iterator-options';\n\nexport function convertIteratorOptions(options: ReadableStreamIteratorOptions | null | undefined,\n                                       context: string): ValidatedReadableStreamIteratorOptions {\n  assertDictionary(options, context);\n  const preventCancel = options?.preventCancel;\n  return { preventCancel: Boolean(preventCancel) };\n}\n", "import { assertDictionary } from './basic';\nimport { StreamPipeOptions, ValidatedStreamPipeOptions } from '../readable-stream/pipe-options';\nimport { AbortSignal, isAbortSignal } from '../abort-signal';\n\nexport function convertPipeOptions(options: StreamPipeOptions | null | undefined,\n                                   context: string): ValidatedStreamPipeOptions {\n  assertDictionary(options, context);\n  const preventAbort = options?.preventAbort;\n  const preventCancel = options?.preventCancel;\n  const preventClose = options?.preventClose;\n  const signal = options?.signal;\n  if (signal !== undefined) {\n    assertAbortSignal(signal, `${context} has member 'signal' that`);\n  }\n  return {\n    preventAbort: Boolean(preventAbort),\n    preventCancel: Boolean(preventCancel),\n    preventClose: Boolean(preventClose),\n    signal\n  };\n}\n\nfunction assertAbortSignal(signal: unknown, context: string): asserts signal is AbortSignal {\n  if (!isAbortSignal(signal)) {\n    throw new TypeError(`${context} is not an AbortSignal.`);\n  }\n}\n", "import { assertDictionary, assertRequiredField } from './basic';\nimport { ReadableStream } from '../readable-stream';\nimport { WritableStream } from '../writable-stream';\nimport { assertReadableStream } from './readable-stream';\nimport { assertWritableStream } from './writable-stream';\n\nexport function convertReadableWritablePair<RS extends ReadableStream, WS extends WritableStream>(\n  pair: { readable: RS; writable: WS } | null | undefined,\n  context: string\n): { readable: RS; writable: WS } {\n  assertDictionary(pair, context);\n\n  const readable = pair?.readable;\n  assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n  assertReadableStream(readable, `${context} has member 'readable' that`);\n\n  const writable = pair?.writable;\n  assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n  assertWritableStream(writable, `${context} has member 'writable' that`);\n\n  return { readable, writable };\n}\n", "import assert from '../stub/assert';\nimport {\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  transformPromiseWith\n} from './helpers/webidl';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { AcquireReadableStreamAsyncIterator, ReadableStreamAsyncIterator } from './readable-stream/async-iterator';\nimport { defaultReaderClosedPromiseReject, defaultReaderClosedPromiseResolve } from './readable-stream/generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReadResult\n} from './readable-stream/default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReader,\n  ReadableStreamBYOBReadResult\n} from './readable-stream/byob-reader';\nimport { ReadableStreamPipeTo } from './readable-stream/pipe';\nimport { ReadableStreamTee } from './readable-stream/tee';\nimport { IsWritableStream, IsWritableStreamLocked, WritableStream } from './writable-stream';\nimport { SimpleQueue } from './simple-queue';\nimport {\n  ReadableByteStreamController,\n  ReadableStreamBYOBRequest,\n  SetUpReadableByteStreamController,\n  SetUpReadableByteStreamControllerFromUnderlyingSource\n} from './readable-stream/byte-stream-controller';\nimport {\n  ReadableStreamDefaultController,\n  SetUpReadableStreamDefaultController,\n  SetUpReadableStreamDefaultControllerFromUnderlyingSource\n} from './readable-stream/default-controller';\nimport {\n  UnderlyingByteSource,\n  UnderlyingByteSourcePullCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceStartCallback\n} from './readable-stream/underlying-source';\nimport { noop } from '../utils';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { CreateArrayFromList } from './abstract-ops/ecmascript';\nimport { CancelSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertUnderlyingDefaultOrByteSource } from './validators/underlying-source';\nimport { ReadableStreamGetReaderOptions } from './readable-stream/reader-options';\nimport { convertReaderOptions } from './validators/reader-options';\nimport { StreamPipeOptions, ValidatedStreamPipeOptions } from './readable-stream/pipe-options';\nimport { ReadableStreamIteratorOptions } from './readable-stream/iterator-options';\nimport { convertIteratorOptions } from './validators/iterator-options';\nimport { convertPipeOptions } from './validators/pipe-options';\nimport { ReadableWritablePair } from './readable-stream/readable-writable-pair';\nimport { convertReadableWritablePair } from './validators/readable-writable-pair';\n\nexport type ReadableByteStream = ReadableStream<Uint8Array> & {\n  _readableStreamController: ReadableByteStreamController\n};\n\ntype ReadableStreamState = 'readable' | 'closed' | 'errored';\n\n/**\n * A readable stream represents a source of data, from which you can read.\n *\n * @public\n */\nexport class ReadableStream<R = any> {\n  /** @internal */\n  _state!: ReadableStreamState;\n  /** @internal */\n  _reader: ReadableStreamReader<R> | undefined;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _disturbed!: boolean;\n  /** @internal */\n  _readableStreamController!: ReadableStreamDefaultController<R> | ReadableByteStreamController;\n\n  constructor(underlyingSource: UnderlyingByteSource, strategy?: { highWaterMark?: number; size?: undefined });\n  constructor(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>);\n  constructor(rawUnderlyingSource: UnderlyingSource<R> | UnderlyingByteSource | null | undefined = {},\n              rawStrategy: QueuingStrategy<R> | null | undefined = {}) {\n    if (rawUnderlyingSource === undefined) {\n      rawUnderlyingSource = null;\n    } else {\n      assertObject(rawUnderlyingSource, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n\n    InitializeReadableStream(this);\n\n    if (underlyingSource.type === 'bytes') {\n      if (strategy.size !== undefined) {\n        throw new RangeError('The strategy for a byte stream cannot have a size function');\n      }\n      const highWaterMark = ExtractHighWaterMark(strategy, 0);\n      SetUpReadableByteStreamControllerFromUnderlyingSource(\n        this as unknown as ReadableByteStream,\n        underlyingSource,\n        highWaterMark\n      );\n    } else {\n      assert(underlyingSource.type === undefined);\n      const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n      const highWaterMark = ExtractHighWaterMark(strategy, 1);\n      SetUpReadableStreamDefaultControllerFromUnderlyingSource(\n        this,\n        underlyingSource,\n        highWaterMark,\n        sizeAlgorithm\n      );\n    }\n  }\n\n  /**\n   * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n   */\n  get locked(): boolean {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsReadableStreamLocked(this);\n  }\n\n  /**\n   * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n   *\n   * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n   * method, which might or might not use it.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('cancel'));\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n    }\n\n    return ReadableStreamCancel(this, reason);\n  }\n\n  /**\n   * Creates a {@link ReadableStreamBYOBReader} and locks the stream to the new reader.\n   *\n   * This call behaves the same way as the no-argument variant, except that it only works on readable byte streams,\n   * i.e. streams which were constructed specifically with the ability to handle \"bring your own buffer\" reading.\n   * The returned BYOB reader provides the ability to directly read individual chunks from the stream via its\n   * {@link ReadableStreamBYOBReader.read | read()} method, into developer-supplied buffers, allowing more precise\n   * control over allocation.\n   */\n  getReader({ mode }: { mode: 'byob' }): ReadableStreamBYOBReader;\n  /**\n   * Creates a {@link ReadableStreamDefaultReader} and locks the stream to the new reader.\n   * While the stream is locked, no other reader can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to consume a stream\n   * in its entirety. By getting a reader for the stream, you can ensure nobody else can interleave reads with yours\n   * or cancel the stream, which would interfere with your abstraction.\n   */\n  getReader(): ReadableStreamDefaultReader<R>;\n  getReader(\n    rawOptions: ReadableStreamGetReaderOptions | null | undefined = undefined\n  ): ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('getReader');\n    }\n\n    const options = convertReaderOptions(rawOptions, 'First parameter');\n\n    if (options.mode === undefined) {\n      return AcquireReadableStreamDefaultReader(this);\n    }\n\n    assert(options.mode === 'byob');\n    return AcquireReadableStreamBYOBReader(this as unknown as ReadableByteStream);\n  }\n\n  /**\n   * Provides a convenient, chainable way of piping this readable stream through a transform stream\n   * (or any other `{ writable, readable }` pair). It simply {@link ReadableStream.pipeTo | pipes} the stream\n   * into the writable side of the supplied pair, and returns the readable side for further use.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeThrough<RS extends ReadableStream>(\n    transform: { readable: RS; writable: WritableStream<R> },\n    options?: StreamPipeOptions\n  ): RS;\n  pipeThrough<RS extends ReadableStream>(\n    rawTransform: { readable: RS; writable: WritableStream<R> } | null | undefined,\n    rawOptions: StreamPipeOptions | null | undefined = {}\n  ): RS {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('pipeThrough');\n    }\n    assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n\n    const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n    const options = convertPipeOptions(rawOptions, 'Second parameter');\n\n    if (IsReadableStreamLocked(this)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n    }\n    if (IsWritableStreamLocked(transform.writable)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n    }\n\n    const promise = ReadableStreamPipeTo(\n      this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n\n    setPromiseIsHandledToTrue(promise);\n\n    return transform.readable;\n  }\n\n  /**\n   * Pipes this readable stream to a given writable stream. The way in which the piping process behaves under\n   * various error conditions can be customized with a number of passed options. It returns a promise that fulfills\n   * when the piping process completes successfully, or rejects if any errors were encountered.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;\n  pipeTo(destination: WritableStream<R> | null | undefined,\n         rawOptions: StreamPipeOptions | null | undefined = {}): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('pipeTo'));\n    }\n\n    if (destination === undefined) {\n      return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n    }\n    if (!IsWritableStream(destination)) {\n      return promiseRejectedWith(\n        new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`)\n      );\n    }\n\n    let options: ValidatedStreamPipeOptions;\n    try {\n      options = convertPipeOptions(rawOptions, 'Second parameter');\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream')\n      );\n    }\n    if (IsWritableStreamLocked(destination)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream')\n      );\n    }\n\n    return ReadableStreamPipeTo<R>(\n      this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n  }\n\n  /**\n   * Tees this readable stream, returning a two-element array containing the two resulting branches as\n   * new {@link ReadableStream} instances.\n   *\n   * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n   * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n   * propagated to the stream's underlying source.\n   *\n   * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n   * this could allow interference between the two branches.\n   */\n  tee(): [ReadableStream<R>, ReadableStream<R>] {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('tee');\n    }\n\n    const branches = ReadableStreamTee(this, false);\n    return CreateArrayFromList(branches);\n  }\n\n  /**\n   * Asynchronously iterates over the chunks in the stream's internal queue.\n   *\n   * Asynchronously iterating over the stream will lock it, preventing any other consumer from acquiring a reader.\n   * The lock will be released if the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method\n   * is called, e.g. by breaking out of the loop.\n   *\n   * By default, calling the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method will also\n   * cancel the stream. To prevent this, use the stream's {@link ReadableStream.values | values()} method, passing\n   * `true` for the `preventCancel` option.\n   */\n  values(options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n  values(rawOptions: ReadableStreamIteratorOptions | null | undefined = undefined): ReadableStreamAsyncIterator<R> {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('values');\n    }\n\n    const options = convertIteratorOptions(rawOptions, 'First parameter');\n    return AcquireReadableStreamAsyncIterator<R>(this, options.preventCancel);\n  }\n\n  /**\n   * {@inheritDoc ReadableStream.values}\n   */\n  [Symbol.asyncIterator]: (options?: ReadableStreamIteratorOptions) => ReadableStreamAsyncIterator<R>;\n}\n\nObject.defineProperties(ReadableStream.prototype, {\n  cancel: { enumerable: true },\n  getReader: { enumerable: true },\n  pipeThrough: { enumerable: true },\n  pipeTo: { enumerable: true },\n  tee: { enumerable: true },\n  values: { enumerable: true },\n  locked: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.toStringTag, {\n    value: 'ReadableStream',\n    configurable: true\n  });\n}\nif (typeof Symbol.asyncIterator === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.asyncIterator, {\n    value: ReadableStream.prototype.values,\n    writable: true,\n    configurable: true\n  });\n}\n\nexport {\n  ReadableStreamAsyncIterator,\n  ReadableStreamDefaultReadResult,\n  ReadableStreamBYOBReadResult,\n  UnderlyingByteSource,\n  UnderlyingSource,\n  UnderlyingSourceStartCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceCancelCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingByteSourcePullCallback,\n  StreamPipeOptions,\n  ReadableWritablePair,\n  ReadableStreamIteratorOptions\n};\n\n// Abstract operations for the ReadableStream.\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableStream<R>(startAlgorithm: () => void | PromiseLike<void>,\n                                        pullAlgorithm: () => Promise<void>,\n                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                        highWaterMark = 1,\n                                        sizeAlgorithm: QueuingStrategySizeCallback<R> = () => 1): ReadableStream<R> {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: ReadableStream<R> = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n\n  return stream;\n}\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableByteStream(\n  startAlgorithm: () => void | PromiseLike<void>,\n  pullAlgorithm: () => Promise<void>,\n  cancelAlgorithm: (reason: any) => Promise<void>\n): ReadableByteStream {\n  const stream: ReadableByteStream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n\n  return stream;\n}\n\nfunction InitializeReadableStream(stream: ReadableStream) {\n  stream._state = 'readable';\n  stream._reader = undefined;\n  stream._storedError = undefined;\n  stream._disturbed = false;\n}\n\nexport function IsReadableStream(x: unknown): x is ReadableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStream;\n}\n\nexport function IsReadableStreamDisturbed(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  return stream._disturbed;\n}\n\nexport function IsReadableStreamLocked(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  if (stream._reader === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamCancel<R>(stream: ReadableStream<R>, reason: any): Promise<undefined> {\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  ReadableStreamClose(stream);\n\n  const reader = stream._reader;\n  if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n    reader._readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._closeSteps(undefined);\n    });\n    reader._readIntoRequests = new SimpleQueue();\n  }\n\n  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n  return transformPromiseWith(sourceCancelPromise, noop);\n}\n\nexport function ReadableStreamClose<R>(stream: ReadableStream<R>): void {\n  assert(stream._state === 'readable');\n\n  stream._state = 'closed';\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseResolve(reader);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    reader._readRequests.forEach(readRequest => {\n      readRequest._closeSteps();\n    });\n    reader._readRequests = new SimpleQueue();\n  }\n}\n\nexport function ReadableStreamError<R>(stream: ReadableStream<R>, e: any): void {\n  assert(IsReadableStream(stream));\n  assert(stream._state === 'readable');\n\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseReject(reader, e);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    reader._readRequests.forEach(readRequest => {\n      readRequest._errorSteps(e);\n    });\n\n    reader._readRequests = new SimpleQueue();\n  } else {\n    assert(IsReadableStreamBYOBReader(reader));\n\n    reader._readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._errorSteps(e);\n    });\n\n    reader._readIntoRequests = new SimpleQueue();\n  }\n}\n\n// Readers\n\nexport type ReadableStreamReader<R> = ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader;\n\nexport {\n  ReadableStreamDefaultReader,\n  ReadableStreamBYOBReader\n};\n\n// Controllers\n\nexport {\n  ReadableStreamDefaultController,\n  ReadableStreamBYOBRequest,\n  ReadableByteStreamController\n};\n\n// Helper functions for the ReadableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n", "import { QueuingStrategyInit } from '../queuing-strategy';\nimport { assertDictionary, assertRequiredField, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategyInit(init: QueuingStrategyInit | null | undefined,\n                                           context: string): QueuingStrategyInit {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n  return {\n    highWaterMark: convertUnrestrictedDouble(highWaterMark)\n  };\n}\n", "import { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst byteLengthSizeFunction = (chunk: ArrayBufferView): number => {\n  return chunk.byteLength;\n};\nObject.defineProperty(byteLengthSizeFunction, 'name', {\n  value: 'size',\n  configurable: true\n});\n\n/**\n * A queuing strategy that counts the number of bytes in each chunk.\n *\n * @public\n */\nexport default class ByteLengthQueuingStrategy implements QueuingStrategy<ArrayBufferView> {\n  /** @internal */\n  readonly _byteLengthQueuingStrategyHighWaterMark: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('highWaterMark');\n    }\n    return this._byteLengthQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by returning the value of its `byteLength` property.\n   */\n  get size(): (chunk: ArrayBufferView) => number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('size');\n    }\n    return byteLengthSizeFunction;\n  }\n}\n\nObject.defineProperties(ByteLengthQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ByteLengthQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'ByteLengthQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the ByteLengthQueuingStrategy.\n\nfunction byteLengthBrandCheckException(name: string): TypeError {\n  return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n}\n\nexport function IsByteLengthQueuingStrategy(x: any): x is ByteLengthQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof ByteLengthQueuingStrategy;\n}\n", "import { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst countSizeFunction = (): 1 => {\n  return 1;\n};\nObject.defineProperty(countSizeFunction, 'name', {\n  value: 'size',\n  configurable: true\n});\n\n/**\n * A queuing strategy that counts the number of chunks.\n *\n * @public\n */\nexport default class CountQueuingStrategy implements QueuingStrategy<any> {\n  /** @internal */\n  readonly _countQueuingStrategyHighWaterMark!: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('highWaterMark');\n    }\n    return this._countQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by always returning 1.\n   * This ensures that the total queue size is a count of the number of chunks in the queue.\n   */\n  get size(): (chunk: any) => 1 {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('size');\n    }\n    return countSizeFunction;\n  }\n}\n\nObject.defineProperties(CountQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(CountQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'CountQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the CountQueuingStrategy.\n\nfunction countBrandCheckException(name: string): TypeError {\n  return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n}\n\nexport function IsCountQueuingStrategy(x: any): x is CountQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof CountQueuingStrategy;\n}\n", "import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport {\n  Transformer,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from '../transform-stream/transformer';\nimport { TransformStreamDefaultController } from '../transform-stream';\n\nexport function convertTransformer<I, O>(original: Transformer<I, O> | null,\n                                         context: string): ValidatedTransformer<I, O> {\n  assertDictionary(original, context);\n  const flush = original?.flush;\n  const readableType = original?.readableType;\n  const start = original?.start;\n  const transform = original?.transform;\n  const writableType = original?.writableType;\n  return {\n    flush: flush === undefined ?\n      undefined :\n      convertTransformerFlushCallback(flush, original!, `${context} has member 'flush' that`),\n    readableType,\n    start: start === undefined ?\n      undefined :\n      convertTransformerStartCallback(start, original!, `${context} has member 'start' that`),\n    transform: transform === undefined ?\n      undefined :\n      convertTransformerTransformCallback(transform, original!, `${context} has member 'transform' that`),\n    writableType\n  };\n}\n\nfunction convertTransformerFlushCallback<I, O>(\n  fn: TransformerFlushCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): (controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertTransformerStartCallback<I, O>(\n  fn: TransformerStartCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): TransformerStartCallback<O> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertTransformerTransformCallback<I, O>(\n  fn: TransformerTransformCallback<I, O>,\n  original: Transformer<I, O>,\n  context: string\n): (chunk: I, controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: I, controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [chunk, controller]);\n}\n", "import assert from '../stub/assert';\nimport { newPromise, promiseRejectedWith, promiseResolvedWith, transformPromiseWith } from './helpers/webidl';\nimport { CreateReadableStream, ReadableStream, ReadableStreamDefaultController } from './readable-stream';\nimport {\n  ReadableStreamDefaultControllerCanCloseOrEnqueue,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError,\n  ReadableStreamDefaultControllerGetDesiredSize,\n  ReadableStreamDefaultControllerHasBackpressure\n} from './readable-stream/default-controller';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { CreateWritableStream, WritableStream, WritableStreamDefaultControllerErrorIfNeeded } from './writable-stream';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport {\n  Transformer,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from './transform-stream/transformer';\nimport { convertTransformer } from './validators/transformer';\n\n// Class TransformStream\n\n/**\n * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n * made available for reading from the readable side.\n *\n * @public\n */\nexport class TransformStream<I = any, O = any> {\n  /** @internal */\n  _writable!: WritableStream<I>;\n  /** @internal */\n  _readable!: ReadableStream<O>;\n  /** @internal */\n  _backpressure!: boolean;\n  /** @internal */\n  _backpressureChangePromise!: Promise<void>;\n  /** @internal */\n  _backpressureChangePromise_resolve!: () => void;\n  /** @internal */\n  _transformStreamController!: TransformStreamDefaultController<O>;\n\n  constructor(\n    transformer?: Transformer<I, O>,\n    writableStrategy?: QueuingStrategy<I>,\n    readableStrategy?: QueuingStrategy<O>\n  );\n  constructor(rawTransformer: Transformer<I, O> | null | undefined = {},\n              rawWritableStrategy: QueuingStrategy<I> | null | undefined = {},\n              rawReadableStrategy: QueuingStrategy<O> | null | undefined = {}) {\n    if (rawTransformer === undefined) {\n      rawTransformer = null;\n    }\n\n    const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n    const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n\n    const transformer = convertTransformer(rawTransformer, 'First parameter');\n    if (transformer.readableType !== undefined) {\n      throw new RangeError('Invalid readableType specified');\n    }\n    if (transformer.writableType !== undefined) {\n      throw new RangeError('Invalid writableType specified');\n    }\n\n    const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n    const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n    const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n    const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n\n    let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n    const startPromise = newPromise<void>(resolve => {\n      startPromise_resolve = resolve;\n    });\n\n    InitializeTransformStream(\n      this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm\n    );\n    SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\n    if (transformer.start !== undefined) {\n      startPromise_resolve(transformer.start(this._transformStreamController));\n    } else {\n      startPromise_resolve(undefined);\n    }\n  }\n\n  /**\n   * The readable side of the transform stream.\n   */\n  get readable(): ReadableStream<O> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('readable');\n    }\n\n    return this._readable;\n  }\n\n  /**\n   * The writable side of the transform stream.\n   */\n  get writable(): WritableStream<I> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('writable');\n    }\n\n    return this._writable;\n  }\n}\n\nObject.defineProperties(TransformStream.prototype, {\n  readable: { enumerable: true },\n  writable: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStream.prototype, Symbol.toStringTag, {\n    value: 'TransformStream',\n    configurable: true\n  });\n}\n\nexport {\n  Transformer,\n  TransformerStartCallback,\n  TransformerFlushCallback,\n  TransformerTransformCallback\n};\n\n// Transform Stream Abstract Operations\n\nexport function CreateTransformStream<I, O>(startAlgorithm: () => void | PromiseLike<void>,\n                                            transformAlgorithm: (chunk: I) => Promise<void>,\n                                            flushAlgorithm: () => Promise<void>,\n                                            writableHighWaterMark = 1,\n                                            writableSizeAlgorithm: QueuingStrategySizeCallback<I> = () => 1,\n                                            readableHighWaterMark = 0,\n                                            readableSizeAlgorithm: QueuingStrategySizeCallback<O> = () => 1) {\n  assert(IsNonNegativeNumber(writableHighWaterMark));\n  assert(IsNonNegativeNumber(readableHighWaterMark));\n\n  const stream: TransformStream<I, O> = Object.create(TransformStream.prototype);\n\n  let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n  const startPromise = newPromise<void>(resolve => {\n    startPromise_resolve = resolve;\n  });\n\n  InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                            readableSizeAlgorithm);\n\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n\n  const startResult = startAlgorithm();\n  startPromise_resolve(startResult);\n  return stream;\n}\n\nfunction InitializeTransformStream<I, O>(stream: TransformStream<I, O>,\n                                         startPromise: Promise<void>,\n                                         writableHighWaterMark: number,\n                                         writableSizeAlgorithm: QueuingStrategySizeCallback<I>,\n                                         readableHighWaterMark: number,\n                                         readableSizeAlgorithm: QueuingStrategySizeCallback<O>) {\n  function startAlgorithm(): Promise<void> {\n    return startPromise;\n  }\n\n  function writeAlgorithm(chunk: I): Promise<void> {\n    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n  }\n\n  function abortAlgorithm(reason: any): Promise<void> {\n    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n  }\n\n  function closeAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSinkCloseAlgorithm(stream);\n  }\n\n  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm,\n                                          writableHighWaterMark, writableSizeAlgorithm);\n\n  function pullAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSourcePullAlgorithm(stream);\n  }\n\n  function cancelAlgorithm(reason: any): Promise<void> {\n    TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n    return promiseResolvedWith(undefined);\n  }\n\n  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark,\n                                          readableSizeAlgorithm);\n\n  // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n  stream._backpressure = undefined!;\n  stream._backpressureChangePromise = undefined!;\n  stream._backpressureChangePromise_resolve = undefined!;\n  TransformStreamSetBackpressure(stream, true);\n\n  stream._transformStreamController = undefined!;\n}\n\nfunction IsTransformStream(x: unknown): x is TransformStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n    return false;\n  }\n\n  return x instanceof TransformStream;\n}\n\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream: TransformStream, e: any) {\n  ReadableStreamDefaultControllerError(\n    stream._readable._readableStreamController as ReadableStreamDefaultController<any>,\n    e\n  );\n  TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\n\nfunction TransformStreamErrorWritableAndUnblockWrite(stream: TransformStream, e: any) {\n  TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n  if (stream._backpressure) {\n    // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n    // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n    // _backpressure is set.\n    TransformStreamSetBackpressure(stream, false);\n  }\n}\n\nfunction TransformStreamSetBackpressure(stream: TransformStream, backpressure: boolean) {\n  // Passes also when called during construction.\n  assert(stream._backpressure !== backpressure);\n\n  if (stream._backpressureChangePromise !== undefined) {\n    stream._backpressureChangePromise_resolve();\n  }\n\n  stream._backpressureChangePromise = newPromise(resolve => {\n    stream._backpressureChangePromise_resolve = resolve;\n  });\n\n  stream._backpressure = backpressure;\n}\n\n// Class TransformStreamDefaultController\n\n/**\n * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n *\n * @public\n */\nexport class TransformStreamDefaultController<O> {\n  /** @internal */\n  _controlledTransformStream: TransformStream<any, O>;\n  /** @internal */\n  _transformAlgorithm: (chunk: any) => Promise<void>;\n  /** @internal */\n  _flushAlgorithm: () => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the readable side\u2019s internal queue. It can be negative, if the queue is over-full.\n   */\n  get desiredSize(): number | null {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    const readableController = this._controlledTransformStream._readable._readableStreamController;\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController as ReadableStreamDefaultController<O>);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the readable side of the controlled transform stream.\n   */\n  enqueue(chunk: O): void;\n  enqueue(chunk: O = undefined!): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    TransformStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors both the readable side and the writable side of the controlled transform stream, making all future\n   * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n   */\n  error(reason: any = undefined): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    TransformStreamDefaultControllerError(this, reason);\n  }\n\n  /**\n   * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n   * transformer only needs to consume a portion of the chunks written to the writable side.\n   */\n  terminate(): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('terminate');\n    }\n\n    TransformStreamDefaultControllerTerminate(this);\n  }\n}\n\nObject.defineProperties(TransformStreamDefaultController.prototype, {\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  terminate: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'TransformStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Transform Stream Default Controller Abstract Operations\n\nfunction IsTransformStreamDefaultController<O = any>(x: any): x is TransformStreamDefaultController<O> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n    return false;\n  }\n\n  return x instanceof TransformStreamDefaultController;\n}\n\nfunction SetUpTransformStreamDefaultController<I, O>(stream: TransformStream<I, O>,\n                                                     controller: TransformStreamDefaultController<O>,\n                                                     transformAlgorithm: (chunk: I) => Promise<void>,\n                                                     flushAlgorithm: () => Promise<void>) {\n  assert(IsTransformStream(stream));\n  assert(stream._transformStreamController === undefined);\n\n  controller._controlledTransformStream = stream;\n  stream._transformStreamController = controller;\n\n  controller._transformAlgorithm = transformAlgorithm;\n  controller._flushAlgorithm = flushAlgorithm;\n}\n\nfunction SetUpTransformStreamDefaultControllerFromTransformer<I, O>(stream: TransformStream<I, O>,\n                                                                    transformer: ValidatedTransformer<I, O>) {\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  let transformAlgorithm = (chunk: I): Promise<void> => {\n    try {\n      TransformStreamDefaultControllerEnqueue(controller, chunk as unknown as O);\n      return promiseResolvedWith(undefined);\n    } catch (transformResultE) {\n      return promiseRejectedWith(transformResultE);\n    }\n  };\n\n  let flushAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (transformer.transform !== undefined) {\n    transformAlgorithm = chunk => transformer.transform!(chunk, controller);\n  }\n  if (transformer.flush !== undefined) {\n    flushAlgorithm = () => transformer.flush!(controller);\n  }\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n}\n\nfunction TransformStreamDefaultControllerClearAlgorithms(controller: TransformStreamDefaultController<any>) {\n  controller._transformAlgorithm = undefined!;\n  controller._flushAlgorithm = undefined!;\n}\n\nfunction TransformStreamDefaultControllerEnqueue<O>(controller: TransformStreamDefaultController<O>, chunk: O) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController as ReadableStreamDefaultController<O>;\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n    throw new TypeError('Readable side is not in a state that permits enqueue');\n  }\n\n  // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n  // accept TransformStreamDefaultControllerEnqueue() calls.\n\n  try {\n    ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n  } catch (e) {\n    // This happens when readableStrategy.size() throws.\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\n    throw stream._readable._storedError;\n  }\n\n  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n  if (backpressure !== stream._backpressure) {\n    assert(backpressure);\n    TransformStreamSetBackpressure(stream, true);\n  }\n}\n\nfunction TransformStreamDefaultControllerError(controller: TransformStreamDefaultController<any>, e: any) {\n  TransformStreamError(controller._controlledTransformStream, e);\n}\n\nfunction TransformStreamDefaultControllerPerformTransform<I, O>(controller: TransformStreamDefaultController<O>,\n                                                                chunk: I) {\n  const transformPromise = controller._transformAlgorithm(chunk);\n  return transformPromiseWith(transformPromise, undefined, r => {\n    TransformStreamError(controller._controlledTransformStream, r);\n    throw r;\n  });\n}\n\nfunction TransformStreamDefaultControllerTerminate<O>(controller: TransformStreamDefaultController<O>) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController as ReadableStreamDefaultController<O>;\n\n  ReadableStreamDefaultControllerClose(readableController);\n\n  const error = new TypeError('TransformStream terminated');\n  TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n\n// TransformStreamDefaultSink Algorithms\n\nfunction TransformStreamDefaultSinkWriteAlgorithm<I, O>(stream: TransformStream<I, O>, chunk: I): Promise<void> {\n  assert(stream._writable._state === 'writable');\n\n  const controller = stream._transformStreamController;\n\n  if (stream._backpressure) {\n    const backpressureChangePromise = stream._backpressureChangePromise;\n    assert(backpressureChangePromise !== undefined);\n    return transformPromiseWith(backpressureChangePromise, () => {\n      const writable = stream._writable;\n      const state = writable._state;\n      if (state === 'erroring') {\n        throw writable._storedError;\n      }\n      assert(state === 'writable');\n      return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n    });\n  }\n\n  return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n}\n\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream: TransformStream, reason: any): Promise<void> {\n  // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n  // errored.\n  TransformStreamError(stream, reason);\n  return promiseResolvedWith(undefined);\n}\n\nfunction TransformStreamDefaultSinkCloseAlgorithm<I, O>(stream: TransformStream<I, O>): Promise<void> {\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n  const readable = stream._readable;\n\n  const controller = stream._transformStreamController;\n  const flushPromise = controller._flushAlgorithm();\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  // Return a promise that is fulfilled with undefined on success.\n  return transformPromiseWith(flushPromise, () => {\n    if (readable._state === 'errored') {\n      throw readable._storedError;\n    }\n    ReadableStreamDefaultControllerClose(readable._readableStreamController as ReadableStreamDefaultController<O>);\n  }, r => {\n    TransformStreamError(stream, r);\n    throw readable._storedError;\n  });\n}\n\n// TransformStreamDefaultSource Algorithms\n\nfunction TransformStreamDefaultSourcePullAlgorithm(stream: TransformStream): Promise<void> {\n  // Invariant. Enforced by the promises returned by start() and pull().\n  assert(stream._backpressure);\n\n  assert(stream._backpressureChangePromise !== undefined);\n\n  TransformStreamSetBackpressure(stream, false);\n\n  // Prevent the next pull() call until there is backpressure.\n  return stream._backpressureChangePromise;\n}\n\n// Helper functions for the TransformStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n\n// Helper functions for the TransformStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n", "/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n", "/*! fetch-blob. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n", "import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n", "/*! formdata-polyfill. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n", "/*! node-domexception. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n", "import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n", "import {File} from 'fetch-blob/from.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\n\nlet s = 0;\nconst S = {\n\tSTART_BOUNDARY: s++,\n\tHEADER_FIELD_START: s++,\n\tHEADER_FIELD: s++,\n\tHEADER_VALUE_START: s++,\n\tHEADER_VALUE: s++,\n\tHEADER_VALUE_ALMOST_DONE: s++,\n\tHEADERS_ALMOST_DONE: s++,\n\tPART_DATA_START: s++,\n\tPART_DATA: s++,\n\tEND: s++\n};\n\nlet f = 1;\nconst F = {\n\tPART_BOUNDARY: f,\n\tLAST_BOUNDARY: f *= 2\n};\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nconst lower = c => c | 0x20;\n\nconst noop = () => {};\n\nclass MultipartParser {\n\t/**\n\t * @param {string} boundary\n\t */\n\tconstructor(boundary) {\n\t\tthis.index = 0;\n\t\tthis.flags = 0;\n\n\t\tthis.onHeaderEnd = noop;\n\t\tthis.onHeaderField = noop;\n\t\tthis.onHeadersEnd = noop;\n\t\tthis.onHeaderValue = noop;\n\t\tthis.onPartBegin = noop;\n\t\tthis.onPartData = noop;\n\t\tthis.onPartEnd = noop;\n\n\t\tthis.boundaryChars = {};\n\n\t\tboundary = '\\r\\n--' + boundary;\n\t\tconst ui8a = new Uint8Array(boundary.length);\n\t\tfor (let i = 0; i < boundary.length; i++) {\n\t\t\tui8a[i] = boundary.charCodeAt(i);\n\t\t\tthis.boundaryChars[ui8a[i]] = true;\n\t\t}\n\n\t\tthis.boundary = ui8a;\n\t\tthis.lookbehind = new Uint8Array(this.boundary.length + 8);\n\t\tthis.state = S.START_BOUNDARY;\n\t}\n\n\t/**\n\t * @param {Uint8Array} data\n\t */\n\twrite(data) {\n\t\tlet i = 0;\n\t\tconst length_ = data.length;\n\t\tlet previousIndex = this.index;\n\t\tlet {lookbehind, boundary, boundaryChars, index, state, flags} = this;\n\t\tconst boundaryLength = this.boundary.length;\n\t\tconst boundaryEnd = boundaryLength - 1;\n\t\tconst bufferLength = data.length;\n\t\tlet c;\n\t\tlet cl;\n\n\t\tconst mark = name => {\n\t\t\tthis[name + 'Mark'] = i;\n\t\t};\n\n\t\tconst clear = name => {\n\t\t\tdelete this[name + 'Mark'];\n\t\t};\n\n\t\tconst callback = (callbackSymbol, start, end, ui8a) => {\n\t\t\tif (start === undefined || start !== end) {\n\t\t\t\tthis[callbackSymbol](ui8a && ui8a.subarray(start, end));\n\t\t\t}\n\t\t};\n\n\t\tconst dataCallback = (name, clear) => {\n\t\t\tconst markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (clear) {\n\t\t\t\tcallback(name, this[markSymbol], i, data);\n\t\t\t\tdelete this[markSymbol];\n\t\t\t} else {\n\t\t\t\tcallback(name, this[markSymbol], data.length, data);\n\t\t\t\tthis[markSymbol] = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < length_; i++) {\n\t\t\tc = data[i];\n\n\t\t\tswitch (state) {\n\t\t\t\tcase S.START_BOUNDARY:\n\t\t\t\t\tif (index === boundary.length - 2) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else if (c !== CR) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\t\tif (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c !== boundary[index + 2]) {\n\t\t\t\t\t\tindex = -2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === boundary[index + 2]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\t\tmark('onHeaderField');\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_FIELD:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tclear('onHeaderField');\n\t\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === COLON) {\n\t\t\t\t\t\tif (index === 1) {\n\t\t\t\t\t\t\t// empty header field\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataCallback('onHeaderField', true);\n\t\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcl = lower(c);\n\t\t\t\t\tif (cl < A || cl > Z) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\t\tif (c === SPACE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmark('onHeaderValue');\n\t\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_VALUE:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tdataCallback('onHeaderValue', true);\n\t\t\t\t\t\tcallback('onHeaderEnd');\n\t\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('onHeadersEnd');\n\t\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.PART_DATA_START:\n\t\t\t\t\tstate = S.PART_DATA;\n\t\t\t\t\tmark('onPartData');\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.PART_DATA:\n\t\t\t\t\tpreviousIndex = index;\n\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\t\twhile (i < bufferLength && !(data[i] in boundaryChars)) {\n\t\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\t\tc = data[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\t\tdataCallback('onPartData', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\t\tflags |= F.PART_BOUNDARY;\n\t\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\t\tif (flags & F.PART_BOUNDARY) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\t\tflags &= ~F.PART_BOUNDARY;\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (flags & F.LAST_BOUNDARY) {\n\t\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t\t} else if (previousIndex > 0) {\n\t\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t\t// belongs to partData\n\t\t\t\t\t\tconst _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n\t\t\t\t\t\tcallback('onPartData', 0, previousIndex, _lookbehind);\n\t\t\t\t\t\tpreviousIndex = 0;\n\t\t\t\t\t\tmark('onPartData');\n\n\t\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.END:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected state entered: ${state}`);\n\t\t\t}\n\t\t}\n\n\t\tdataCallback('onHeaderField');\n\t\tdataCallback('onHeaderValue');\n\t\tdataCallback('onPartData');\n\n\t\t// Update properties for the next call\n\t\tthis.index = index;\n\t\tthis.state = state;\n\t\tthis.flags = flags;\n\t}\n\n\tend() {\n\t\tif ((this.state === S.HEADER_FIELD_START && this.index === 0) ||\n\t\t\t(this.state === S.PART_DATA && this.index === this.boundary.length)) {\n\t\t\tthis.onPartEnd();\n\t\t} else if (this.state !== S.END) {\n\t\t\tthrow new Error('MultipartParser.end(): stream ended unexpectedly');\n\t\t}\n\t}\n}\n\nfunction _fileName(headerValue) {\n\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\tconst m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n\tif (!m) {\n\t\treturn;\n\t}\n\n\tconst match = m[2] || m[3] || '';\n\tlet filename = match.slice(match.lastIndexOf('\\\\') + 1);\n\tfilename = filename.replace(/%22/g, '\"');\n\tfilename = filename.replace(/&#(\\d{4});/g, (m, code) => {\n\t\treturn String.fromCharCode(code);\n\t});\n\treturn filename;\n}\n\nexport async function toFormData(Body, ct) {\n\tif (!/multipart/i.test(ct)) {\n\t\tthrow new TypeError('Failed to fetch');\n\t}\n\n\tconst m = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n\tif (!m) {\n\t\tthrow new TypeError('no or bad content-type header, no multipart boundary');\n\t}\n\n\tconst parser = new MultipartParser(m[1] || m[2]);\n\n\tlet headerField;\n\tlet headerValue;\n\tlet entryValue;\n\tlet entryName;\n\tlet contentType;\n\tlet filename;\n\tconst entryChunks = [];\n\tconst formData = new FormData();\n\n\tconst onPartData = ui8a => {\n\t\tentryValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tconst appendToFile = ui8a => {\n\t\tentryChunks.push(ui8a);\n\t};\n\n\tconst appendFileToFormData = () => {\n\t\tconst file = new File(entryChunks, filename, {type: contentType});\n\t\tformData.append(entryName, file);\n\t};\n\n\tconst appendEntryToFormData = () => {\n\t\tformData.append(entryName, entryValue);\n\t};\n\n\tconst decoder = new TextDecoder('utf-8');\n\tdecoder.decode();\n\n\tparser.onPartBegin = function () {\n\t\tparser.onPartData = onPartData;\n\t\tparser.onPartEnd = appendEntryToFormData;\n\n\t\theaderField = '';\n\t\theaderValue = '';\n\t\tentryValue = '';\n\t\tentryName = '';\n\t\tcontentType = '';\n\t\tfilename = null;\n\t\tentryChunks.length = 0;\n\t};\n\n\tparser.onHeaderField = function (ui8a) {\n\t\theaderField += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderValue = function (ui8a) {\n\t\theaderValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderEnd = function () {\n\t\theaderValue += decoder.decode();\n\t\theaderField = headerField.toLowerCase();\n\n\t\tif (headerField === 'content-disposition') {\n\t\t\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\t\t\tconst m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n\n\t\t\tif (m) {\n\t\t\t\tentryName = m[2] || m[3] || '';\n\t\t\t}\n\n\t\t\tfilename = _fileName(headerValue);\n\n\t\t\tif (filename) {\n\t\t\t\tparser.onPartData = appendToFile;\n\t\t\t\tparser.onPartEnd = appendFileToFormData;\n\t\t\t}\n\t\t} else if (headerField === 'content-type') {\n\t\t\tcontentType = headerValue;\n\t\t}\n\n\t\theaderValue = '';\n\t\theaderField = '';\n\t};\n\n\tfor await (const chunk of Body) {\n\t\tparser.write(chunk);\n\t}\n\n\tparser.end();\n\n\treturn formData;\n}\n", "import { Handler } from '@netlify/functions'\nimport { Client } from '@notionhq/client'\nimport fetch from 'node-fetch'\n\nconst authToken = process.env.NOTION_TOKEN\nconst waveAppsUserId = process.env.WAVE_APPS_USER_ID\nconst waveAppsEndpoint = process.env.WAVE_APPS_API_ENDPOINT\nconst waveAppsFullAccesToken = process.env.WAVE_APPS_FULL_ACCESS_TOKEN\nconst hourTrackerId = '847f71096748427f8d5844de8dc828dd'\nconst notion = new Client({ auth: authToken })\n\nconst monday = new Date()\nmonday.setDate(monday.getDate() + ((((7 - monday.getDay()) % 7) + 1) % 7))\n\nconst handler: Handler = async () => {\n  // Fetch the past week's worth of entries\n  const pagesResponse = await notion.databases.query({\n    database_id: hourTrackerId,\n    filter: {\n      or: [\n        {\n          property: 'Date',\n          date: {\n            past_week: {}\n          }\n        }\n      ]\n    }\n  })\n\n  // Return full list of entries from bulleted_list_item fields\n  const entriesArray = await Promise.all(\n    pagesResponse.results.map(async result => {\n      const { id } = result\n      const { results } = await notion.blocks.children.list({\n        block_id: id\n      })\n\n      const bulletPoints = results.map((result: any) => {\n        const { bulleted_list_item } = result\n        const points = bulleted_list_item?.text[0]?.plain_text\n\n        return points\n      })\n      const scrubbedPoints = bulletPoints.filter(point => point != null)\n      const bulletedListItems = scrubbedPoints.map(entry => {\n        return {\n          bulleted_list_item: {\n            text: [\n              {\n                text: { content: entry }\n              }\n            ]\n          }\n        }\n      })\n\n      return bulletedListItems\n    })\n  )\n\n  const pastWeeksEntries = entriesArray.flat()\n\n  let data = await fetch(waveAppsEndpoint, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${waveAppsFullAccesToken}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: `\n        mutation CreateInvoice($businessId: ID!, $customerId: ID!) {\n          invoiceCreate(\n            input: { businessId: $businessId, customerId: $customerId }\n          ) {\n            invoice {\n              id\n            }\n            didSucceed\n            inputErrors {\n              path\n              message\n            }\n          }\n        }\n      `,\n      variables: {\n        businessId: '92e460fa-be94-4c6c-87b8-7aeed3cb0930',\n        customerId: '62221045'\n      }\n    })\n  }).then(res => res.json())\n\n  return {\n    statusCode: 200,\n    body: JSON.stringify(data, null, 2)\n  }\n}\n\nmodule.exports = { handler }\n", "/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tresponse.body.destroy(error);\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\n\t\trequest.on('abort', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t});\n\n\t\tsocket.on('data', buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t});\n\t});\n}\n", null, "\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn JSON.parse(buffer.toString());\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn buffer.toString();\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n", "export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n", "\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n", "/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n", "/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n", "const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n", "/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n", "/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ('data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// \u00A75.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// \u00A75.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// \u00A75.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// \u00A75.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// \u00A75.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate,br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n", "export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n", "import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy \u00A78.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy \u00A73. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy \u00A73.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (/^(.+\\.)*localhost$/.test(url.host)) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy \u00A73.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing \u00A73.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy \u00A78.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response\u2019s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in \u00A7 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n", "import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
